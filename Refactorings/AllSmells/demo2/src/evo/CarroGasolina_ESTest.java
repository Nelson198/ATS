/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 07 16:41:54 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CarroGasolina_ESTest extends CarroGasolina_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate((-1275), (-1275));
      CarroGasolina carroGasolina0 = new CarroGasolina();
      List<ParDatas> list0 = carroGasolina0.getDatasAlugueres();
      CarroGasolina carroGasolina1 = new CarroGasolina("y}:C%( X6*C", "tg]+j[HNp4~D+=F", "y}:C%( X6*C", (-1275), (-1275), (-671.77544165), (-1275), coordinate0, true, 0, list0);
      CarroGasolina carroGasolina2 = carroGasolina1.clone();
      assertNotSame(carroGasolina2, carroGasolina1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina();
      carroGasolina0.setClassificacao(2087);
      CarroGasolina carroGasolina1 = carroGasolina0.clone();
      assertEquals(2087, carroGasolina1.getClassificacao());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(1507, 1507);
      CarroGasolina carroGasolina0 = new CarroGasolina();
      List<ParDatas> list0 = carroGasolina0.getDatasAlugueres();
      CarroGasolina carroGasolina1 = new CarroGasolina("28c4efcbaf88fde7e5ae89d0b8f05dcd", "28c4efcbaf88fde7e5ae89d0b8f05dcd", "28c4efcbaf88fde7e5ae89d0b8f05dcd", 1507, 2742.755392942, 2742.755392942, 1507, coordinate0, true, (-1329), list0);
      CarroGasolina carroGasolina2 = new CarroGasolina(carroGasolina1);
      CarroGasolina carroGasolina3 = carroGasolina2.clone();
      assertEquals(1507, carroGasolina3.getAutonomia());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina();
      List<ParDatas> list0 = carroGasolina0.getDatasAlugueres();
      CarroGasolina carroGasolina1 = new CarroGasolina(".d", "0.saE;ot?lO", "7", (-1614), (-1817.91407), 0.0, (-1), (Coordinate) null, true, (-1614), list0);
      // Undeclared exception!
      try { 
        carroGasolina1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Veiculo", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0, (-1671.417522375));
      CarroGasolina carroGasolina0 = new CarroGasolina();
      List<ParDatas> list0 = carroGasolina0.getDatasAlugueres();
      CarroGasolina carroGasolina1 = new CarroGasolina((String) null, (String) null, (String) null, (-1), 0, 0, 0, coordinate0, true, 0, list0);
      // Undeclared exception!
      try { 
        carroGasolina1.equals(carroGasolina0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Veiculo", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate((-2424.1195), 1);
      CarroGasolina carroGasolina0 = null;
      try {
        carroGasolina0 = new CarroGasolina("_6)Rd{9R!M?d'=B^]-[", "_6)Rd{9R!M?d'=B^]-[", "deg", 3637, 3637, 3637, 1, coordinate0, false, 1, (List<ParDatas>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Veiculo", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CarroGasolina carroGasolina0 = null;
      try {
        carroGasolina0 = new CarroGasolina((CarroGasolina) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Veiculo", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina();
      ParDatas parDatas0 = new ParDatas();
      boolean boolean0 = carroGasolina0.equals(parDatas0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina();
      boolean boolean0 = carroGasolina0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina();
      boolean boolean0 = carroGasolina0.equals(carroGasolina0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina();
      String string0 = carroGasolina0.toString();
      assertEquals("***** Carro a Gasolina *****\n*****    VE\u00CDCULO    *****\nMarca: \nMatr\u00EDcula: \nNIF do Propriet\u00E1rio: \nVelocidade M\u00E9dia: 0\nPre\u00E7o Base por Km: 0.0\nConsumo: 0.0\nAutonomia: 0\nPosi\u00E7\u00E3o (latitude e longitude): 0, 0\nDispon\u00EDvel: false\nClassifica\u00E7\u00E3o: 0\n", string0);
  }
}
