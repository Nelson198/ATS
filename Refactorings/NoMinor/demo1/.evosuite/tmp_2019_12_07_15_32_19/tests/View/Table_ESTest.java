/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 07 15:39:01 GMT 2019
 */

package view;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import view.Table;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Table_ESTest extends Table_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("View.Table");
      linkedList0.offerLast("~^'F]F2bw");
      LinkedList<List<LinkedList<String>>> linkedList1 = new LinkedList<List<LinkedList<String>>>();
      Table<LinkedList<String>> table0 = new Table<LinkedList<String>>(linkedList1, linkedList0, linkedList0);
      // Undeclared exception!
      try { 
        table0.toString();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList1.add("");
      Table<String> table0 = new Table<String>((List<List<String>>) null, linkedList0, linkedList1);
      String string0 = table0.toString();
      assertEquals("+--+--+\n|  |  |\n+--+--+\n", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<List<Object>> linkedList0 = new LinkedList<List<Object>>();
      Table<Object> table0 = new Table<Object>(linkedList0, (List<String>) null, (List<String>) null);
      // Undeclared exception!
      try { 
        table0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("View.Table", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<List<Object>> linkedList0 = new LinkedList<List<Object>>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      Object object0 = new Object();
      linkedList1.add(object0);
      linkedList0.add((List<Object>) linkedList1);
      LinkedList<String> linkedList2 = new LinkedList<String>();
      linkedList2.add("'1<@d<cUN)Y.|");
      Table<Object> table0 = new Table<Object>(linkedList0, linkedList2, linkedList2);
      linkedList0.add((List<Object>) linkedList1);
      linkedList2.add("'1<@d<cUN)Y.|");
      // Undeclared exception!
      try { 
        table0.toString();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<List<Object>> linkedList0 = new LinkedList<List<Object>>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      Object object0 = new Object();
      linkedList1.add(object0);
      linkedList0.add((List<Object>) linkedList1);
      LinkedList<String> linkedList2 = new LinkedList<String>();
      linkedList2.add("'1<@d<cUN)Y.|");
      Table<Object> table0 = new Table<Object>(linkedList0, linkedList2, linkedList2);
      String string0 = table0.toString();
      assertFalse(linkedList2.contains(string0));
  }
}
