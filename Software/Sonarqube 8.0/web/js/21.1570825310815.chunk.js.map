{"version":3,"sources":["webpack:///./src/main/js/app/components/PageTracker.tsx","webpack:///./src/main/js/helpers/analytics.js","webpack:///./src/main/js/helpers/extensions.ts"],"names":["PageTracker","_super","_this","apply","this","arguments","state","trackPage","_a","props","location","trackingIdGTM","lastLocation","dataLayer","window","locationChanged","pathname","webAnalyticsPageChange","Object","_helpers_extensionsHandler__WEBPACK_IMPORTED_MODULE_6__","setState","setTimeout","push","event","__extends","prototype","componentDidMount","webAnalytics","_helpers_extensions__WEBPACK_IMPORTED_MODULE_5__","_helpers_analytics__WEBPACK_IMPORTED_MODULE_4__","render","react__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","a","defaultTitle","_helpers_system__WEBPACK_IMPORTED_MODULE_7__","onChangeClientState","undefined","children","__webpack_exports__","_components_hoc_withRouter__WEBPACK_IMPORTED_MODULE_3__","react_redux__WEBPACK_IMPORTED_MODULE_2__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_8__","value","webAnalyticsJsPath","module","exports","gtm","id","w","d","s","l","i","gtm.start","Date","getTime","f","getElementsByTagName","j","createElement","async","src","parentNode","insertBefore","document","librariesExposed","installScript","url","target","Promise","resolve","scriptTag","sonar_ui_common_helpers_urls__WEBPACK_IMPORTED_MODULE_0__","onload","appendChild","getExtensionStart","key","fromCache","_extensionsHandler__WEBPACK_IMPORTED_MODULE_1__","all","__webpack_require__","e","then","bind","exposeLibraries","sent","default","start","reject"],"mappings":"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","file":"js/21.1570825310815.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { Location, withRouter } from '../../components/hoc/withRouter';\nimport { gtm } from '../../helpers/analytics';\nimport { installScript } from '../../helpers/extensions';\nimport { getWebAnalyticsPageHandlerFromCache } from '../../helpers/extensionsHandler';\nimport { getInstance } from '../../helpers/system';\nimport { getAppState, getGlobalSettingValue, Store } from '../../store/rootReducer';\n\ninterface Props {\n  location: Location;\n  trackingIdGTM?: string;\n  webAnalytics?: string;\n}\n\ninterface State {\n  lastLocation?: string;\n}\n\nexport class PageTracker extends React.Component<Props, State> {\n  state: State = {};\n\n  componentDidMount() {\n    const { trackingIdGTM, webAnalytics } = this.props;\n\n    if (webAnalytics && !getWebAnalyticsPageHandlerFromCache()) {\n      installScript(webAnalytics, 'head');\n    }\n\n    if (trackingIdGTM) {\n      gtm(trackingIdGTM);\n    }\n  }\n\n  trackPage = () => {\n    const { location, trackingIdGTM } = this.props;\n    const { lastLocation } = this.state;\n    const { dataLayer } = window as any;\n    const locationChanged = location.pathname !== lastLocation;\n    const webAnalyticsPageChange = getWebAnalyticsPageHandlerFromCache();\n\n    if (webAnalyticsPageChange && locationChanged) {\n      this.setState({ lastLocation: location.pathname });\n      setTimeout(() => webAnalyticsPageChange(location.pathname), 500);\n    } else if (dataLayer && dataLayer.push && trackingIdGTM && location.pathname !== '/') {\n      this.setState({ lastLocation: location.pathname });\n      setTimeout(() => dataLayer.push({ event: 'render-end' }), 500);\n    }\n  };\n\n  render() {\n    const { trackingIdGTM, webAnalytics } = this.props;\n\n    return (\n      <Helmet\n        defaultTitle={getInstance()}\n        onChangeClientState={trackingIdGTM || webAnalytics ? this.trackPage : undefined}>\n        {this.props.children}\n      </Helmet>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => {\n  const trackingIdGTM = getGlobalSettingValue(state, 'sonar.analytics.gtm.trackingId');\n  return {\n    trackingIdGTM: trackingIdGTM && trackingIdGTM.value,\n    webAnalytics: getAppState(state).webAnalyticsJsPath\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(PageTracker));\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\n// The body of the `gtm` function comes from Google Tag Manager docs; let's keep it like it was written.\n// @ts-ignore\n// prettier-ignore\n// eslint-disable-next-line\nconst gtm = id => (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start': new Date().getTime(),event:'gtm.js'});const f=d.getElementsByTagName(s)[0], j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src= 'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);}(window,document,'script','dataLayer',id));\n\nmodule.exports = { gtm };\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { getExtensionFromCache } from './extensionsHandler';\n\nlet librariesExposed = false;\n\nexport function installScript(url: string, target: 'body' | 'head' = 'body'): Promise<any> {\n  return new Promise(resolve => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = `${getBaseUrl()}${url}`;\n    scriptTag.onload = resolve;\n    document.getElementsByTagName(target)[0].appendChild(scriptTag);\n  });\n}\n\nexport async function getExtensionStart(key: string) {\n  const fromCache = getExtensionFromCache(key);\n  if (fromCache) {\n    return Promise.resolve(fromCache);\n  }\n\n  if (!librariesExposed) {\n    // Async import allows to reduce initial vendor bundle size\n    const exposeLibraries = (await import('../app/components/extensions/exposeLibraries')).default;\n    exposeLibraries();\n    librariesExposed = true;\n  }\n\n  await installScript(`/static/${key}.js`);\n\n  const start = getExtensionFromCache(key);\n  if (start) {\n    return start;\n  }\n  return Promise.reject();\n}\n"],"sourceRoot":""}