{"version":3,"sources":["webpack:///./src/main/js/app/components/PageTracker.tsx","webpack:///./src/main/js/helpers/analytics.js","webpack:///./src/main/js/helpers/extensions.ts"],"names":["__webpack_require__","r","__webpack_exports__","d","PageTracker","react__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","n","react_redux__WEBPACK_IMPORTED_MODULE_2__","_components_hoc_withRouter__WEBPACK_IMPORTED_MODULE_3__","_helpers_analytics__WEBPACK_IMPORTED_MODULE_4__","_helpers_extensions__WEBPACK_IMPORTED_MODULE_5__","_helpers_extensionsHandler__WEBPACK_IMPORTED_MODULE_6__","_helpers_system__WEBPACK_IMPORTED_MODULE_7__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_8__","[object Object]","this","state","trackPage","_this$props","props","location","trackingIdGTM","lastLocation","dataLayer","window","locationChanged","pathname","webAnalyticsPageChange","Object","setState","setTimeout","push","event","_this$props2","webAnalytics","_this$props3","a","defaultTitle","onChangeClientState","undefined","children","value","webAnalyticsJsPath","module","exports","gtm","id","w","s","l","i","gtm.start","Date","getTime","f","getElementsByTagName","j","createElement","async","src","parentNode","insertBefore","document","installScript","getExtensionStart","sonar_ui_common_helpers_urls__WEBPACK_IMPORTED_MODULE_0__","_extensionsHandler__WEBPACK_IMPORTED_MODULE_1__","librariesExposed","url","target","arguments","length","Promise","resolve","scriptTag","concat","onload","appendChild","key","fromCache","exposeLibraries","all","e","then","bind","default","start","reject"],"mappings":"4FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,gCAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,MAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,IAAAc,EAAAd,EAAA,IAAAe,EAAAf,EAAA,KAuCO,MAAMI,UAAoBC,EAAA,UAAjCW,kCACEC,KAAAC,MAAe,GAcfD,KAAAE,UAAY,KAAK,MAAAC,EACqBH,KAAKI,MAAjCC,EADOF,EACPE,SAAUC,EADHH,EACGG,cACVC,EAAiBP,KAAKC,MAAtBM,aACAC,EAAcC,OAAdD,UACFE,EAAkBL,EAASM,WAAaJ,EACxCK,EAAyBC,OAAAjB,EAAA,EAAAiB,GAE3BD,GAA0BF,GAC5BV,KAAKc,SAAS,CAAEP,aAAcF,EAASM,WACvCI,WAAW,IAAMH,EAAuBP,EAASM,UAAW,MACnDH,GAAaA,EAAUQ,MAAQV,GAAuC,MAAtBD,EAASM,WAClEX,KAAKc,SAAS,CAAEP,aAAcF,EAASM,WACvCI,WAAW,IAAMP,EAAUQ,KAAK,CAAEC,MAAO,eAAiB,OAxB9DlB,oBAAiB,MAAAmB,EACyBlB,KAAKI,MAArCE,EADOY,EACPZ,cAAea,EADRD,EACQC,aAEnBA,IAAiBN,OAAAjB,EAAA,EAAAiB,IACnBA,OAAAlB,EAAA,EAAAkB,CAAcM,EAAc,QAG1Bb,GACFO,OAAAnB,EAAA,IAAAmB,CAAIP,GAoBRP,SAAM,MAAAqB,EACoCpB,KAAKI,MAArCE,EADJc,EACId,cAAea,EADnBC,EACmBD,aAEvB,OACE/B,EAAA,cAACE,EAAA+B,EAAM,CACLC,aAAcT,OAAAhB,EAAA,YAAAgB,GACdU,oBAAqBjB,GAAiBa,EAAenB,KAAKE,eAAYsB,GACrExB,KAAKI,MAAMqB,WAcLxC,EAAA,QAAA4B,OAAApB,EAAA,GAAWoB,OAAArB,EAAA,QAAAqB,CARDZ,IACvB,MAAMK,EAAgBO,OAAAf,EAAA,sBAAAe,CAAsBZ,EAAO,kCACnD,MAAO,CACLK,cAAeA,GAAiBA,EAAcoB,MAC9CP,aAAcN,OAAAf,EAAA,YAAAe,CAAYZ,GAAO0B,qBAIXd,CAAyB1B,uCCjEnDyC,EAAOC,QAAU,CAAEC,IAFPC,IAAO,SAASC,EAAE9C,EAAE+C,EAAEC,EAAEC,GAAGH,EAAEE,GAAGF,EAAEE,IAAI,GAAGF,EAAEE,GAAGlB,KAAK,CAACoB,aAAa,IAAIC,MAAOC,UAAUrB,MAAM,WAAW,MAAMsB,EAAErD,EAAEsD,qBAAqBP,GAAG,GAAIQ,EAAEvD,EAAEwD,cAAcT,GAAgCQ,EAAEE,OAAM,EAAKF,EAAEG,IAAK,8CAA8CT,EAAKI,EAAEM,WAAWC,aAAaL,EAAEF,IAA3R,CAAgS9B,OAAOsC,SAAS,SAAS,YAAYhB,sCCxBxVhD,EAAAG,EAAAD,EAAA,sBAAA+D,IAAAjE,EAAAG,EAAAD,EAAA,sBAAAgE,IAAA,IAAAC,EAAAnE,EAAA,KAAAoE,EAAApE,EAAA,IAsBA,IAAIqE,GAAmB,EAEhB,SAASJ,EAAcK,GAA6C,IAAhCC,EAAgCC,UAAAC,OAAA,QAAAhC,IAAA+B,UAAA,GAAAA,UAAA,GAAN,OACnE,OAAO,IAAIE,QAAQC,IACjB,MAAMC,EAAYZ,SAASL,cAAc,UACzCiB,EAAUf,IAAV,GAAAgB,OAAmB/C,OAAAqC,EAAA,WAAArC,IAAnB+C,OAAkCP,GAClCM,EAAUE,OAASH,EACnBX,SAASP,qBAAqBc,GAAQ,GAAGQ,YAAYH,KAIlDhB,eAAeM,EAAkBc,GACtC,MAAMC,EAAYnD,OAAAsC,EAAA,EAAAtC,CAAsBkD,GACxC,GAAIC,EACF,OAAOP,QAAQC,QAAQM,GAGzB,IAAKZ,EAAkB,EAGrBa,SAD+BR,QAAAS,IAAA,CAAAnF,EAAAoF,EAAA,GAAApF,EAAAoF,EAAA,GAAApF,EAAAoF,EAAA,GAAApF,EAAAoF,EAAA,GAAApF,EAAAoF,EAAA,OAAAC,KAAArF,EAAAsF,KAAA,YAAwDC,WAEvFlB,GAAmB,QAGfJ,EAAa,WAAAY,OAAYG,EAAZ,QAEnB,MAAMQ,EAAQ1D,OAAAsC,EAAA,EAAAtC,CAAsBkD,GACpC,OAAIQ,GAGGd,QAAQe","file":"js/21.m.31572e3e.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { Location, withRouter } from '../../components/hoc/withRouter';\nimport { gtm } from '../../helpers/analytics';\nimport { installScript } from '../../helpers/extensions';\nimport { getWebAnalyticsPageHandlerFromCache } from '../../helpers/extensionsHandler';\nimport { getInstance } from '../../helpers/system';\nimport { getAppState, getGlobalSettingValue, Store } from '../../store/rootReducer';\n\ninterface Props {\n  location: Location;\n  trackingIdGTM?: string;\n  webAnalytics?: string;\n}\n\ninterface State {\n  lastLocation?: string;\n}\n\nexport class PageTracker extends React.Component<Props, State> {\n  state: State = {};\n\n  componentDidMount() {\n    const { trackingIdGTM, webAnalytics } = this.props;\n\n    if (webAnalytics && !getWebAnalyticsPageHandlerFromCache()) {\n      installScript(webAnalytics, 'head');\n    }\n\n    if (trackingIdGTM) {\n      gtm(trackingIdGTM);\n    }\n  }\n\n  trackPage = () => {\n    const { location, trackingIdGTM } = this.props;\n    const { lastLocation } = this.state;\n    const { dataLayer } = window as any;\n    const locationChanged = location.pathname !== lastLocation;\n    const webAnalyticsPageChange = getWebAnalyticsPageHandlerFromCache();\n\n    if (webAnalyticsPageChange && locationChanged) {\n      this.setState({ lastLocation: location.pathname });\n      setTimeout(() => webAnalyticsPageChange(location.pathname), 500);\n    } else if (dataLayer && dataLayer.push && trackingIdGTM && location.pathname !== '/') {\n      this.setState({ lastLocation: location.pathname });\n      setTimeout(() => dataLayer.push({ event: 'render-end' }), 500);\n    }\n  };\n\n  render() {\n    const { trackingIdGTM, webAnalytics } = this.props;\n\n    return (\n      <Helmet\n        defaultTitle={getInstance()}\n        onChangeClientState={trackingIdGTM || webAnalytics ? this.trackPage : undefined}>\n        {this.props.children}\n      </Helmet>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => {\n  const trackingIdGTM = getGlobalSettingValue(state, 'sonar.analytics.gtm.trackingId');\n  return {\n    trackingIdGTM: trackingIdGTM && trackingIdGTM.value,\n    webAnalytics: getAppState(state).webAnalyticsJsPath\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(PageTracker));\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\n// The body of the `gtm` function comes from Google Tag Manager docs; let's keep it like it was written.\n// @ts-ignore\n// prettier-ignore\n// eslint-disable-next-line\nconst gtm = id => (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start': new Date().getTime(),event:'gtm.js'});const f=d.getElementsByTagName(s)[0], j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src= 'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);}(window,document,'script','dataLayer',id));\n\nmodule.exports = { gtm };\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { getExtensionFromCache } from './extensionsHandler';\n\nlet librariesExposed = false;\n\nexport function installScript(url: string, target: 'body' | 'head' = 'body'): Promise<any> {\n  return new Promise(resolve => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = `${getBaseUrl()}${url}`;\n    scriptTag.onload = resolve;\n    document.getElementsByTagName(target)[0].appendChild(scriptTag);\n  });\n}\n\nexport async function getExtensionStart(key: string) {\n  const fromCache = getExtensionFromCache(key);\n  if (fromCache) {\n    return Promise.resolve(fromCache);\n  }\n\n  if (!librariesExposed) {\n    // Async import allows to reduce initial vendor bundle size\n    const exposeLibraries = (await import('../app/components/extensions/exposeLibraries')).default;\n    exposeLibraries();\n    librariesExposed = true;\n  }\n\n  await installScript(`/static/${key}.js`);\n\n  const start = getExtensionFromCache(key);\n  if (start) {\n    return start;\n  }\n  return Promise.reject();\n}\n"],"sourceRoot":""}