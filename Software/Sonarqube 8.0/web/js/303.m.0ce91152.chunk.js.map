{"version":3,"sources":["webpack:///./src/main/js/apps/create/project/style.css?0a3a","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css?ab01","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css","webpack:///./src/main/js/apps/create/project/style.css","webpack:///./src/main/js/apps/create/project/OrganizationInput.tsx","webpack:///./src/main/js/apps/create/project/AlmRepositoryItem.tsx","webpack:///./src/main/js/apps/create/project/SetupProjectBox.tsx","webpack:///./src/main/js/apps/create/project/RemoteRepositories.tsx","webpack:///./src/main/js/apps/create/project/AutoProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageSonarCloud.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageSonarQube.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPage.tsx","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/helpers/almIntegrations.ts","webpack:///./src/main/js/helpers/extensions.ts","webpack:///./src/main/js/apps/create/organization/utils.ts","webpack:///./src/main/js/components/hoc/whenLoggedIn.tsx","webpack:///./src/main/js/helpers/organizations.ts","webpack:///./src/main/js/api/alm-integration.ts","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationAdvantages.tsx","webpack:///./src/main/js/api/billing.ts","webpack:///./src/main/js/components/hoc/withUserOrganizations.tsx","webpack:///./src/main/js/apps/create/components/BillingFormShim.tsx","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationModal.tsx","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationBox.tsx","webpack:///./src/main/js/components/common/VisibilitySelector.tsx","webpack:///./src/main/js/apps/create/components/OrganizationSelect.tsx"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","project_OrganizationInput","Object","react_router_es","index_js_exposed","[object Object]","this","handleLinkClick","event","preventDefault","stopPropagation","storage","utils","Date","now","toString","props","router","pathname","state","tab","autoImport","_this$props","onChange","organization","organizations","className","htmlFor","l10n","OrganizationSelect","hideIcons","href","onClick","AlmRepositoryItem_AlmRepositoryItem","handleMouseEnter","highlightUpgradeBox","handleMouseLeave","handleToggle","disabled","repository","linkedProjectKey","toggleRepository","identityProvider","selected","alreadyImported","Boolean","Tooltip_default","a","overlay","classnames","imported","onMouseEnter","onMouseLeave","role","LockIcon_default","fill","theme","disableGrayText","Checkbox_default","checked","onCheck","identity_default","alt","name","icon-half-transparent","height","src","concat","helpers_urls","key","width","label","private","CheckIcon_default","green","index_es","defaultMessage","id","values","link","to","urls","SetupProjectBox_SetupProjectBox","mounted","submitting","canSubmit","selectedRepositories","length","handleFormSubmit","setState","alm_integration","installationKeys","map","repo","installationKey","then","_ref","projects","onProjectCreate","project","projectKey","handleProvisionFail","onProvisionFail","hasSelectedRepositories","_partition3","_slicedToArray","partition_default","_partition3$","privateRepos","_partition3$2","publicRepos","open","onSubmit","buttons","DeferredSpinner_default","loading","RemoteRepositories_RemoteRepositories","checkAllRepositories","highlight","repositories","search","successfullyUpgraded","fetchRepositories","filterBySearch","toLowerCase","includes","handleHighlightUpgradeBox","handleOrganizationUpgrade","onOrganizationUpgrade","_ref2","updateSelectedRepositories","keys","forEach","newRepository","find","r","handleSearch","onCheckAllRepositories","_ref3","isPaidOrg","helpers_organizations","nextState","validRepositories","filter","filterByPlan","filterByImportable","keyBy_default","_ref4","assign","prevProps","_this$state","almApplication","hasPrivateRepositories","some","showSearchBox","showCheckAll","showUpgradebox","actions","admin","filteredRepositories","SearchBox_default","minLength","placeholder","value","Alert","variant","create-project-side-with-search","types","UpgradeOrganizationBox","AutoProjectCreate_AutoProjectCreate","super","handleInstallAppClick","handleOrganizationSelect","selectedOrganization","getInitialSelectedOrganization","boundOrganizations","IdentityProviderLink_default","backgroundColor","iconPath","small","url","installationUrl","o","ManualProjectCreate_ManualProjectCreate","checkFreeKey","components","component","alreadyExist","projectKeyError","touched","validating","catch","canChoosePrivate","subscription","getOrganization","userOrganizations","organizationKey","projectName","trim","visibility","selectedVisibility","fetchMyOrganizations","prevState","handleProjectKeyChange","currentTarget","validateKey","projectNameChanged","projectNameError","validateName","handleProjectNameChange","handleVisibilityChange","test","debounce_default","system","projectKeyIsInvalid","projectKeyIsValid","projectNameIsInvalid","projectNameIsValid","ValidationInput_default","description","error","help","isInvalid","isValid","required","autoFocus","is-invalid","is-valid","maxLength","type","VisibilitySelector","canTurnToPrivate","showDetails","mapDispatchToProps","skipOnboarding","users","project_CreateProjectPageSonarCloud","whenLoggedIn","withUserOrganizations","es","_this","handleProjectCreate","projectKeys","fetchAlmApplication","application","onTabChange","updateUrl","arguments","replace","location","query","almIntegrations","currentUser","pages","header","showManualTab","Helmet_default","title","titleTemplate","Tabs_default","tabs","node","_ref2$actions","provision","alm","_ref3$actions","project_CreateProjectPageSonarQube","CreateProjectPage","A11ySkipTarget","anchor","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_1__","_A11yContext__WEBPACK_IMPORTED_MODULE_2__","Consumer","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","_this$props$label","weight","getAlmMembersUrl","getUserAlmKey","hasAdvancedALMIntegration","isBitbucket","isGithub","isVSTS","sanitizeAlmId","_users__WEBPACK_IMPORTED_MODULE_0__","endsWith","user","externalProvider","almKey","startsWith","installScript","getExtensionStart","sonar_ui_common_helpers_urls__WEBPACK_IMPORTED_MODULE_0__","_extensionsHandler__WEBPACK_IMPORTED_MODULE_1__","librariesExposed","target","Promise","resolve","scriptTag","document","createElement","onload","getElementsByTagName","appendChild","async","fromCache","exposeLibraries","all","e","bind","default","start","reject","ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP","ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP","BIND_ORGANIZATION_KEY","BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP","Step","formatPrice","price","noSign","priceFormatted","sonar_ui_common_helpers_measures__WEBPACK_IMPORTED_MODULE_2__","parseQuery","lodash_memoize__WEBPACK_IMPORTED_MODULE_0___default","urlQuery","almInstallId","sonar_ui_common_helpers_query__WEBPACK_IMPORTED_MODULE_3__","jwt","sonar_ui_common_helpers_strings__WEBPACK_IMPORTED_MODULE_4__","iss","serializeQuery","installation_id","_helpers_almIntegrations__WEBPACK_IMPORTED_MODULE_5__","clientKey","sonar_ui_common_helpers_handleRequiredAuthentication__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_helpers_handleRequiredAuthentication__WEBPACK_IMPORTED_MODULE_1___default","n","_helpers_users__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","_withCurrentUser__WEBPACK_IMPORTED_MODULE_4__","WrappedComponent","Wrapper","displayName","isPaidOrganization","hasPrivateAccess","isCurrentUserMemberOf","org","bindAlmOrganization","getAlmAppInfo","getAlmOrganization","getRepositories","listUnboundApplications","provisionProject","getGithubLanguages","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","data","max","slowThreshold","almOrganization","boundOrganization","applications","app","join","apiUrl","UpgradeOrganizationAdvantages","sonar_ui_common_components_icons_CheckIcon__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_icons_CheckIcon__WEBPACK_IMPORTED_MODULE_1___default","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__","_app_theme__WEBPACK_IMPORTED_MODULE_3__","TRIAL_DURATION_DAYS","Advantage","children","lightGreen","getSubscriptionPlans","giveDowngradeFeedback","subscriptionPlans","react_redux__WEBPACK_IMPORTED_MODULE_1__","_apps_account_organizations_actions__WEBPACK_IMPORTED_MODULE_2__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_3__","_utils__WEBPACK_IMPORTED_MODULE_4__","BillingFormShim","BillingForm","window","SonarBilling","withCurrentUser","UpgradeOrganizationModal_UpgradeOrganizationModal","ready","extensions","Modal_default","contentLabel","noBackdrop","insideModal","onRequestClose","onClose","shouldCloseOnOverlayClick","size","onCommit","onUpgradeDone","processingUpgrade","renderFormFields","renderNextCharge","renderRecap","renderSubmitButton","UpgradeOrganizationBox_UpgradeOrganizationBox","upgradeOrganizationModal","fetchSubscriptionPlans","billing","handleUpgradeClick","handleUpgradeOrganizationModalClose","startingPrice","RadioCard_default","titleInfo","classnames__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","handlePublicClick","blur","handlePrivateClick","is-checked","optionRenderer","icon","sonar_ui_common_helpers_urls__WEBPACK_IMPORTED_MODULE_4__","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","getOptionRenderer","sonar_ui_common_components_controls_Select__WEBPACK_IMPORTED_MODULE_2___default","clearable","labelKey","lodash_sortBy__WEBPACK_IMPORTED_MODULE_0___default","valueKey","valueRenderer"],"mappings":"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","file":"js/303.m.0ce91152.chunk.js","sourcesContent":["\nvar content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".manual-project-create{max-width:700px}.manual-project-create .visibility-select-option{margin-left:0!important;margin-bottom:8px;display:flex;align-items:center;font-size:14px}.manual-project-create .visibility-details{display:block;margin:8px 0}.manual-project-create .visibility-select-wrapper{padding:8px 0 16px}.manual-project-create .button{margin-top:8px}\", \"\"]);\n\n","exports = module.exports = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".create-project{display:flex!important;justify-content:space-between}.create-project-repository{display:flex;align-items:center;min-width:500px;height:40px;border:1px solid #e6e6e6;padding:8px 16px;margin-bottom:8px;box-sizing:border-box;cursor:pointer;transition:all .3s ease}.create-project-repository.disabled{background-color:#ebebeb;border-color:#ddd;cursor:default}.create-project-repository.imported{cursor:default}.create-project-repository.selected{background-color:#cae3f2;border-color:#236a97}.create-project-repository:not(.imported):not(.disabled):active,.create-project-repository:not(.imported):not(.disabled):focus,.create-project-repository:not(.imported):not(.disabled):hover{border-color:#4b9fd5;box-shadow:none}.create-project-side-with-search{margin-top:32px}.create-project-side-sticky{position:-webkit-sticky;position:sticky;top:68px}.create-project-setup{display:flex;overflow:hidden;opacity:0;flex-direction:column;height:0;width:450px;margin-bottom:0;color:#fff;background-color:#0b3c62;border:none;border-radius:3px;transition:height .5s ease,opacity .4s ease-out,margin-bottom .5s ease-in}.create-project-setup.open{opacity:1;height:160px;margin-bottom:20px}.create-project-setup h2{color:#fff;font-weight:700;font-size:16px}.create-project-setup .boxed-group-inner{display:flex;flex-direction:column;flex-grow:1}.create-project-setup .button{border-color:#4c9bd6;background-color:#4c9bd6;color:#fff;transition:border-color .2s ease,box-shadow .2s ease,background-color .2s ease}.create-project-setup .button:focus,.create-project-setup .button:hover{border-color:#327bb3;background-color:#327bb3}.create-project-actions{min-width:500px;display:flex;justify-content:space-between;align-items:center;padding:8px 0 8px 16px;border-left:1px solid transparent}.create-project-actions .icon-checkbox{margin-right:8px}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { save } from 'sonar-ui-common/helpers/storage';\nimport OrganizationSelect from '../components/OrganizationSelect';\nimport { ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP } from '../organization/utils';\n\ninterface Props {\n  autoImport?: boolean;\n  onChange: (organization: T.Organization) => void;\n  organization: string;\n  organizations: T.Organization[];\n}\n\nexport class OrganizationInput extends React.PureComponent<Props & WithRouterProps> {\n  handleLinkClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    save(ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP, Date.now().toString(10));\n    this.props.router.push({\n      pathname: '/create-organization',\n      state: { tab: this.props.autoImport ? 'auto' : 'manual' }\n    });\n  };\n\n  render() {\n    const { autoImport, onChange, organization, organizations } = this.props;\n    return (\n      <div className=\"form-field spacer-bottom\">\n        <label htmlFor=\"select-organization\">\n          <span className=\"text-middle\">\n            <strong>{translate('onboarding.create_project.organization')}</strong>\n            <em className=\"mandatory\">*</em>\n          </span>\n        </label>\n        <OrganizationSelect\n          hideIcons={!autoImport}\n          onChange={onChange}\n          organization={organization}\n          organizations={organizations}\n        />\n        <a className=\"big-spacer-left js-new-org\" href=\"#\" onClick={this.handleLinkClick}>\n          {autoImport\n            ? translate('onboarding.create_project.import_new_org')\n            : translate('onboarding.create_project.create_new_org')}\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(OrganizationInput);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { identity } from 'lodash';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport LockIcon from 'sonar-ui-common/components/icons/LockIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { colors } from '../../../app/theme';\nimport { getProjectUrl } from '../../../helpers/urls';\n\ninterface Props {\n  disabled: boolean;\n  highlightUpgradeBox: (highlight: boolean) => void;\n  identityProvider: T.IdentityProvider;\n  repository: T.AlmRepository;\n  selected: boolean;\n  toggleRepository: (repository: T.AlmRepository) => void;\n}\n\nexport default class AlmRepositoryItem extends React.PureComponent<Props> {\n  handleMouseEnter = () => {\n    this.props.highlightUpgradeBox(true);\n  };\n\n  handleMouseLeave = () => {\n    this.props.highlightUpgradeBox(false);\n  };\n\n  handleToggle = () => {\n    if (!this.props.disabled && !this.props.repository.linkedProjectKey) {\n      this.props.toggleRepository(this.props.repository);\n    }\n  };\n\n  render() {\n    const { disabled, identityProvider, repository, selected } = this.props;\n    const alreadyImported = Boolean(repository.linkedProjectKey);\n    return (\n      <Tooltip\n        overlay={\n          disabled\n            ? translate('onboarding.create_project.subscribe_to_import_private_repositories')\n            : undefined\n        }>\n        <li>\n          <div\n            className={classNames('create-project-repository', {\n              disabled,\n              imported: alreadyImported,\n              selected\n            })}\n            onClick={this.handleToggle}\n            onMouseEnter={disabled ? this.handleMouseEnter : undefined}\n            onMouseLeave={disabled ? this.handleMouseLeave : undefined}\n            role=\"listitem\">\n            <div className=\"flex-1 display-flex-center\">\n              {disabled ? (\n                <LockIcon fill={colors.disableGrayText} />\n              ) : (\n                <Checkbox\n                  checked={selected || alreadyImported}\n                  disabled={disabled || alreadyImported}\n                  onCheck={identity}\n                />\n              )}\n              <img\n                alt={identityProvider.name}\n                className={classNames('spacer-left', { 'icon-half-transparent': disabled })}\n                height={14}\n                src={`${getBaseUrl()}/images/sonarcloud/${identityProvider.key}.svg`}\n                width={14}\n              />\n              <span className=\"spacer-left\">{this.props.repository.label}</span>\n              {repository.private && (\n                <div className=\"badge spacer-left\">{translate('visibility.private')}</div>\n              )}\n            </div>\n\n            {repository.linkedProjectKey && (\n              <span>\n                <CheckIcon className=\"little-spacer-right\" fill={colors.green} />\n                <FormattedMessage\n                  defaultMessage={translate('onboarding.create_project.repository_imported')}\n                  id=\"onboarding.create_project.repository_imported\"\n                  values={{\n                    link: (\n                      <Link to={getProjectUrl(repository.linkedProjectKey)}>\n                        {translate('onboarding.create_project.see_project')}\n                      </Link>\n                    )\n                  }}\n                />\n              </span>\n            )}\n          </div>\n        </li>\n      </Tooltip>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { partition } from 'lodash';\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { provisionProject } from '../../../api/alm-integration';\n\ninterface Props {\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  onProvisionFail: () => Promise<void>;\n  organization: T.Organization;\n  selectedRepositories: T.AlmRepository[];\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SetupProjectBox extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  canSubmit = () => {\n    return !this.state.submitting && this.props.selectedRepositories.length > 0;\n  };\n\n  handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (this.canSubmit()) {\n      const { selectedRepositories } = this.props;\n      this.setState({ submitting: true });\n      provisionProject({\n        installationKeys: selectedRepositories.map(repo => repo.installationKey),\n        organization: this.props.organization.key\n      }).then(\n        ({ projects }) =>\n          this.props.onProjectCreate(\n            projects.map(project => project.projectKey),\n            this.props.organization.key\n          ),\n        this.handleProvisionFail\n      );\n    }\n  };\n\n  handleProvisionFail = () => {\n    return this.props.onProvisionFail().then(() => {\n      if (this.mounted) {\n        this.setState({ submitting: false });\n      }\n    });\n  };\n\n  render() {\n    const { selectedRepositories } = this.props;\n    const hasSelectedRepositories = selectedRepositories.length > 0;\n    const [privateRepos = [], publicRepos = []] = partition(\n      selectedRepositories,\n      repo => repo.private\n    );\n    return (\n      <form\n        className={classNames('create-project-setup boxed-group', {\n          open: hasSelectedRepositories\n        })}\n        onSubmit={this.handleFormSubmit}>\n        <div className=\"boxed-group-header\">\n          <h2 className=\"spacer-top\">\n            {selectedRepositories.length > 1\n              ? translateWithParameters(\n                  'onboarding.create_project.x_repositories_selected',\n                  selectedRepositories.length\n                )\n              : translate('onboarding.create_project.1_repository_selected')}\n          </h2>\n        </div>\n        <div className=\"boxed-group-inner\">\n          <div className=\"flex-1\">\n            {publicRepos.length === 1 && (\n              <p>{translate('onboarding.create_project.1_repository_created_as_public')}</p>\n            )}\n            {publicRepos.length > 1 && (\n              <p>\n                {translateWithParameters(\n                  'onboarding.create_project.x_repository_created_as_public',\n                  publicRepos.length\n                )}\n              </p>\n            )}\n            {privateRepos.length === 1 && (\n              <p>{translate('onboarding.create_project.1_repository_created_as_private')}</p>\n            )}\n            {privateRepos.length > 1 && (\n              <p>\n                {translateWithParameters(\n                  'onboarding.create_project.x_repository_created_as_private',\n                  privateRepos.length\n                )}\n              </p>\n            )}\n          </div>\n          <div>\n            <SubmitButton className=\"button-large\" disabled={this.state.submitting}>\n              {translate('set_up')}\n            </SubmitButton>\n            <DeferredSpinner className=\"spacer-left\" loading={this.state.submitting} />\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { keyBy } from 'lodash';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { getRepositories } from '../../../api/alm-integration';\nimport { isPaidOrganization } from '../../../helpers/organizations';\nimport UpgradeOrganizationBox from '../components/UpgradeOrganizationBox';\nimport AlmRepositoryItem from './AlmRepositoryItem';\nimport SetupProjectBox from './SetupProjectBox';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  onOrganizationUpgrade: () => void;\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  organization: T.Organization;\n}\n\ntype SelectedRepositories = T.Dict<T.AlmRepository | undefined>;\n\ninterface State {\n  checkAllRepositories: boolean;\n  highlight: boolean;\n  loading: boolean;\n  repositories: T.AlmRepository[];\n  search: string;\n  selectedRepositories: SelectedRepositories;\n  successfullyUpgraded: boolean;\n}\n\nexport default class RemoteRepositories extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    checkAllRepositories: false,\n    highlight: false,\n    loading: true,\n    repositories: [],\n    search: '',\n    selectedRepositories: {},\n    successfullyUpgraded: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchRepositories();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.organization.key !== this.props.organization.key) {\n      this.setState({ loading: true, selectedRepositories: {} });\n      this.fetchRepositories();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchRepositories = () => {\n    const { organization } = this.props;\n    return getRepositories({ organization: organization.key }).then(\n      ({ repositories }) => {\n        if (this.mounted) {\n          this.setState({ loading: false, repositories });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  filterBySearch = (search: String) => (repo: T.AlmRepository) => {\n    return repo.label.toLowerCase().includes(search.toLowerCase());\n  };\n\n  handleHighlightUpgradeBox = (highlight: boolean) => {\n    this.setState({ highlight });\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.onOrganizationUpgrade();\n    if (this.mounted) {\n      this.setState({ successfullyUpgraded: true });\n    }\n  };\n\n  handleProvisionFail = () => {\n    return this.fetchRepositories().then(() => {\n      if (this.mounted) {\n        this.setState(({ repositories, selectedRepositories }) => {\n          const updateSelectedRepositories: SelectedRepositories = {};\n          Object.keys(selectedRepositories).forEach(installationKey => {\n            const newRepository = repositories.find(r => r.installationKey === installationKey);\n            if (newRepository && !newRepository.linkedProjectKey) {\n              updateSelectedRepositories[newRepository.installationKey] = newRepository;\n            }\n          });\n          return { selectedRepositories: updateSelectedRepositories };\n        });\n      }\n    });\n  };\n\n  handleSearch = (search: string) => {\n    this.setState({ search, checkAllRepositories: false, selectedRepositories: {} });\n  };\n\n  onCheckAllRepositories = () => {\n    this.setState(({ checkAllRepositories, repositories, search }) => {\n      const { organization } = this.props;\n\n      const isPaidOrg = isPaidOrganization(organization);\n      const filterByPlan = (repo: T.AlmRepository) => (isPaidOrg ? true : !repo.private);\n      const filterByImportable = (repo: T.AlmRepository) => !repo.linkedProjectKey;\n\n      const nextState = {\n        selectedRepositories: {},\n        checkAllRepositories: !checkAllRepositories\n      };\n\n      if (nextState.checkAllRepositories) {\n        const validRepositories = repositories.filter(\n          repo =>\n            this.filterBySearch(search)(repo) && filterByPlan(repo) && filterByImportable(repo)\n        );\n        nextState.selectedRepositories = keyBy(validRepositories, 'installationKey');\n      }\n\n      return nextState;\n    });\n  };\n\n  toggleRepository = (repository: T.AlmRepository) => {\n    this.setState(({ selectedRepositories }) => ({\n      selectedRepositories: {\n        ...selectedRepositories,\n        [repository.installationKey]: selectedRepositories[repository.installationKey]\n          ? undefined\n          : repository\n      }\n    }));\n  };\n\n  render() {\n    const { highlight, loading, repositories, search, selectedRepositories } = this.state;\n    const { almApplication, organization } = this.props;\n    const isPaidOrg = isPaidOrganization(organization);\n    const hasPrivateRepositories = repositories.some(repository => Boolean(repository.private));\n    const showSearchBox = repositories.length > 5;\n    const showCheckAll = repositories.length > 1;\n    const showUpgradebox =\n      !isPaidOrg && hasPrivateRepositories && organization.actions && organization.actions.admin;\n    const filteredRepositories = repositories.filter(this.filterBySearch(search));\n\n    return (\n      <div className=\"create-project\">\n        <div className=\"flex-1 huge-spacer-right\">\n          <div className=\"spacer-bottom create-project-actions\">\n            <div>\n              {showCheckAll && (\n                <Checkbox\n                  checked={this.state.checkAllRepositories}\n                  disabled={filteredRepositories.length === 0}\n                  onCheck={this.onCheckAllRepositories}>\n                  {translate('onboarding.create_project.select_all_repositories')}\n                </Checkbox>\n              )}\n            </div>\n            {showSearchBox && (\n              <SearchBox\n                minLength={1}\n                onChange={this.handleSearch}\n                placeholder={translate('search.search_for_repositories')}\n                value={this.state.search}\n              />\n            )}\n          </div>\n\n          {this.state.successfullyUpgraded && (\n            <Alert variant=\"success\">\n              {translateWithParameters(\n                'onboarding.create_project.subscribtion_success_x',\n                organization.name\n              )}\n            </Alert>\n          )}\n          <DeferredSpinner loading={loading}>\n            <ul>\n              {filteredRepositories.length === 0 && (\n                <li className=\"big-spacer-top note\">\n                  {showUpgradebox\n                    ? translateWithParameters('no_results_for_x', search)\n                    : translate('onboarding.create_project.no_repositories')}\n                </li>\n              )}\n              {filteredRepositories.map(repo => (\n                <AlmRepositoryItem\n                  disabled={Boolean(repo.private && !isPaidOrg)}\n                  highlightUpgradeBox={this.handleHighlightUpgradeBox}\n                  identityProvider={almApplication}\n                  key={repo.installationKey}\n                  repository={repo}\n                  selected={Boolean(selectedRepositories[repo.installationKey])}\n                  toggleRepository={this.toggleRepository}\n                />\n              ))}\n            </ul>\n          </DeferredSpinner>\n        </div>\n        {organization && (\n          <div className={classNames({ 'create-project-side-with-search': showSearchBox })}>\n            <div className=\"create-project-side-sticky\">\n              <SetupProjectBox\n                onProjectCreate={this.props.onProjectCreate}\n                onProvisionFail={this.handleProvisionFail}\n                organization={organization}\n                selectedRepositories={Object.keys(selectedRepositories)\n                  .map(r => selectedRepositories[r])\n                  .filter(isDefined)}\n              />\n              {showUpgradebox && (\n                <UpgradeOrganizationBox\n                  className={classNames({ highlight })}\n                  onOrganizationUpgrade={this.handleOrganizationUpgrade}\n                  organization={organization}\n                />\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport IdentityProviderLink from 'sonar-ui-common/components/controls/IdentityProviderLink';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { save } from 'sonar-ui-common/helpers/storage';\nimport {\n  ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP,\n  ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP\n} from '../organization/utils';\nimport OrganizationInput from './OrganizationInput';\nimport RemoteRepositories from './RemoteRepositories';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  boundOrganizations: T.Organization[];\n  onOrganizationUpgrade: () => void;\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  organization?: string;\n}\n\ninterface State {\n  selectedOrganization: string;\n}\n\nexport default class AutoProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { selectedOrganization: this.getInitialSelectedOrganization(props) };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getInitialSelectedOrganization(props: Props) {\n    if (props.organization) {\n      return props.organization;\n    } else if (props.boundOrganizations.length === 1) {\n      return props.boundOrganizations[0].key;\n    } else {\n      return '';\n    }\n  }\n\n  handleInstallAppClick = () => {\n    save(ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP, Date.now().toString(10));\n    save(ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP, Date.now().toString(10));\n  };\n\n  handleOrganizationSelect = ({ key }: T.Organization) => {\n    this.setState({ selectedOrganization: key });\n  };\n\n  render() {\n    const { almApplication, boundOrganizations, onProjectCreate } = this.props;\n\n    if (boundOrganizations.length === 0) {\n      return (\n        <>\n          <p className=\"spacer-bottom\">\n            {translate('onboarding.create_project.install_app_description', almApplication.key)}\n          </p>\n          <IdentityProviderLink\n            backgroundColor={almApplication.backgroundColor}\n            className=\"display-inline-block\"\n            iconPath={almApplication.iconPath}\n            name={almApplication.name}\n            onClick={this.handleInstallAppClick}\n            small={true}\n            url={almApplication.installationUrl}>\n            {translate(\n              'onboarding.import_organization.choose_organization_button',\n              almApplication.key\n            )}\n          </IdentityProviderLink>\n        </>\n      );\n    }\n\n    const { selectedOrganization } = this.state;\n    const organization = boundOrganizations.find(o => o.key === selectedOrganization);\n\n    return (\n      <>\n        <OrganizationInput\n          autoImport={true}\n          onChange={this.handleOrganizationSelect}\n          organization={selectedOrganization}\n          organizations={this.props.boundOrganizations}\n        />\n        {organization && (\n          <RemoteRepositories\n            almApplication={almApplication}\n            onOrganizationUpgrade={this.props.onOrganizationUpgrade}\n            onProjectCreate={onProjectCreate}\n            organization={organization}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createProject, doesComponentExists } from '../../../api/components';\nimport VisibilitySelector from '../../../components/common/VisibilitySelector';\nimport { isSonarCloud } from '../../../helpers/system';\nimport UpgradeOrganizationBox from '../components/UpgradeOrganizationBox';\nimport './ManualProjectCreate.css';\nimport OrganizationInput from './OrganizationInput';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n  fetchMyOrganizations?: () => Promise<void>;\n  onProjectCreate: (projectKeys: string[]) => void;\n  organization?: string;\n  userOrganizations?: T.Organization[];\n}\n\ninterface State {\n  projectName: string;\n  projectNameChanged: boolean;\n  projectNameError?: string;\n  projectKey: string;\n  projectKeyError?: string;\n  selectedOrganization?: T.Organization;\n  selectedVisibility?: T.Visibility;\n  submitting: boolean;\n  touched: boolean;\n  validating: boolean;\n}\n\ntype ValidState = State & Required<Pick<State, 'projectKey' | 'projectName'>>;\n\nexport default class ManualProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      projectKey: '',\n      projectName: '',\n      projectNameChanged: false,\n      selectedOrganization: this.getInitialSelectedOrganization(props),\n      submitting: false,\n      touched: false,\n      validating: false\n    };\n    this.checkFreeKey = debounce(this.checkFreeKey, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkFreeKey = (key: string) => {\n    return doesComponentExists({ component: key })\n      .then(alreadyExist => {\n        if (this.mounted && key === this.state.projectKey) {\n          if (!alreadyExist) {\n            this.setState({ projectKeyError: undefined, validating: false });\n          } else {\n            this.setState({\n              projectKeyError: translate('onboarding.create_project.project_key.taken'),\n              touched: true,\n              validating: false\n            });\n          }\n        }\n      })\n      .catch(() => {\n        if (this.mounted && key === this.state.projectKey) {\n          this.setState({ projectKeyError: undefined, validating: false });\n        }\n      });\n  };\n\n  canChoosePrivate = (selectedOrganization: T.Organization | undefined) => {\n    return Boolean(selectedOrganization && selectedOrganization.subscription === 'PAID');\n  };\n\n  canSubmit(state: State): state is ValidState {\n    const {\n      projectKey,\n      projectKeyError,\n      projectName,\n      projectNameError,\n      selectedOrganization\n    } = state;\n    return Boolean(\n      projectKeyError === undefined &&\n        projectNameError === undefined &&\n        projectKey.length > 0 &&\n        projectName.length > 0 &&\n        (!isSonarCloud() || selectedOrganization)\n    );\n  }\n\n  getInitialSelectedOrganization = (props: Props) => {\n    if (props.organization) {\n      return this.getOrganization(props.organization);\n    } else if (props.userOrganizations && props.userOrganizations.length === 1) {\n      return props.userOrganizations[0];\n    } else {\n      return undefined;\n    }\n  };\n\n  getOrganization = (organizationKey: string) => {\n    return (\n      this.props.userOrganizations &&\n      this.props.userOrganizations.find(({ key }: T.Organization) => key === organizationKey)\n    );\n  };\n\n  handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { state } = this;\n    if (this.canSubmit(state)) {\n      this.setState({ submitting: true });\n      createProject({\n        project: state.projectKey,\n        name: (state.projectName || state.projectKey).trim(),\n        organization: state.selectedOrganization && state.selectedOrganization.key,\n        visibility: this.state.selectedVisibility\n      }).then(\n        ({ project }) => this.props.onProjectCreate([project.key]),\n        () => {\n          if (this.mounted) {\n            this.setState({ submitting: false });\n          }\n        }\n      );\n    }\n  };\n\n  handleOrganizationSelect = ({ key }: T.Organization) => {\n    const selectedOrganization = this.getOrganization(key);\n    let { selectedVisibility } = this.state;\n\n    if (selectedVisibility === undefined) {\n      selectedVisibility = this.canChoosePrivate(selectedOrganization) ? 'private' : 'public';\n    }\n\n    this.setState({\n      selectedOrganization,\n      selectedVisibility\n    });\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.fetchMyOrganizations!().then(\n      () => {\n        this.setState(prevState => {\n          if (prevState.selectedOrganization) {\n            const selectedOrganization = this.getOrganization(prevState.selectedOrganization.key);\n            return {\n              selectedOrganization\n            };\n          }\n          return null;\n        });\n      },\n      () => {}\n    );\n  };\n\n  handleProjectKeyChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const projectKey = event.currentTarget.value || '';\n    const projectKeyError = this.validateKey(projectKey);\n\n    this.setState(prevState => {\n      const projectName = prevState.projectNameChanged ? prevState.projectName : projectKey;\n      return {\n        projectKey,\n        projectKeyError,\n        projectName,\n        projectNameError: this.validateName(projectName),\n        touched: true,\n        validating: projectKeyError === undefined\n      };\n    });\n\n    if (projectKeyError === undefined) {\n      this.checkFreeKey(projectKey);\n    }\n  };\n\n  handleProjectNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const projectName = event.currentTarget.value;\n    this.setState({\n      projectName,\n      projectNameChanged: true,\n      projectNameError: this.validateName(projectName)\n    });\n  };\n\n  handleVisibilityChange = (selectedVisibility: T.Visibility) => {\n    this.setState({ selectedVisibility });\n  };\n\n  validateKey = (projectKey: string) => {\n    return projectKey.length > 400 || !/^[\\w-.:]*[a-zA-Z]+[\\w-.:]*$/.test(projectKey)\n      ? translate('onboarding.create_project.project_key.error')\n      : undefined;\n  };\n\n  validateName = (projectName: string) => {\n    return projectName.length === 0 || projectName.length > 255\n      ? translate('onboarding.create_project.display_name.error')\n      : undefined;\n  };\n\n  render() {\n    const {\n      projectKey,\n      projectKeyError,\n      projectName,\n      projectNameError,\n      selectedOrganization,\n      submitting,\n      touched,\n      validating\n    } = this.state;\n    const projectKeyIsInvalid = touched && projectKeyError !== undefined;\n    const projectKeyIsValid = touched && !validating && projectKeyError === undefined;\n    const projectNameIsInvalid = touched && projectNameError !== undefined;\n    const projectNameIsValid = touched && projectNameError === undefined;\n    const canChoosePrivate = this.canChoosePrivate(selectedOrganization);\n\n    return (\n      <div className=\"create-project\">\n        <div className=\"flex-1 huge-spacer-right\">\n          <form className=\"manual-project-create\" onSubmit={this.handleFormSubmit}>\n            {isSonarCloud() && this.props.userOrganizations && (\n              <OrganizationInput\n                onChange={this.handleOrganizationSelect}\n                organization={selectedOrganization ? selectedOrganization.key : ''}\n                organizations={this.props.userOrganizations}\n              />\n            )}\n\n            <ValidationInput\n              className=\"form-field\"\n              description={translate('onboarding.create_project.project_key.description')}\n              error={projectKeyError}\n              help={translate('onboarding.create_project.project_key.help')}\n              id=\"project-key\"\n              isInvalid={projectKeyIsInvalid}\n              isValid={projectKeyIsValid}\n              label={translate('onboarding.create_project.project_key')}\n              required={true}>\n              <input\n                autoFocus={true}\n                className={classNames('input-super-large', {\n                  'is-invalid': projectKeyIsInvalid,\n                  'is-valid': projectKeyIsValid\n                })}\n                id=\"project-key\"\n                maxLength={400}\n                minLength={1}\n                onChange={this.handleProjectKeyChange}\n                type=\"text\"\n                value={projectKey}\n              />\n            </ValidationInput>\n\n            <ValidationInput\n              className=\"form-field\"\n              description={translate('onboarding.create_project.display_name.description')}\n              error={projectNameError}\n              help={translate('onboarding.create_project.display_name.help')}\n              id=\"project-name\"\n              isInvalid={projectNameIsInvalid}\n              isValid={projectNameIsValid}\n              label={translate('onboarding.create_project.display_name')}\n              required={true}>\n              <input\n                className={classNames('input-super-large', {\n                  'is-invalid': projectNameIsInvalid,\n                  'is-valid': projectNameIsValid\n                })}\n                id=\"project-name\"\n                maxLength={255}\n                minLength={1}\n                onChange={this.handleProjectNameChange}\n                type=\"text\"\n                value={projectName}\n              />\n            </ValidationInput>\n\n            {isSonarCloud() && selectedOrganization && (\n              <div\n                className={classNames('visibility-select-wrapper', {\n                  open: Boolean(this.state.selectedOrganization)\n                })}>\n                <VisibilitySelector\n                  canTurnToPrivate={canChoosePrivate}\n                  onChange={this.handleVisibilityChange}\n                  showDetails={true}\n                  visibility={canChoosePrivate ? this.state.selectedVisibility : 'public'}\n                />\n              </div>\n            )}\n\n            <SubmitButton disabled={!this.canSubmit(this.state) || submitting}>\n              {translate('set_up')}\n            </SubmitButton>\n            <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n          </form>\n        </div>\n\n        {isSonarCloud() && selectedOrganization && (\n          <div className=\"create-project-side-sticky\">\n            <UpgradeOrganizationBox\n              className={classNames('animated', { open: !canChoosePrivate })}\n              onOrganizationUpgrade={this.handleOrganizationUpgrade}\n              organization={selectedOrganization}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport Tabs from 'sonar-ui-common/components/controls/Tabs';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addWhitePageClass, removeWhitePageClass } from 'sonar-ui-common/helpers/pages';\nimport { getAlmAppInfo } from '../../../api/alm-integration';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { withUserOrganizations } from '../../../components/hoc/withUserOrganizations';\nimport { hasAdvancedALMIntegration } from '../../../helpers/almIntegrations';\nimport { getOrganizationUrl, getProjectUrl } from '../../../helpers/urls';\nimport { skipOnboarding } from '../../../store/users';\nimport AutoProjectCreate from './AutoProjectCreate';\nimport ManualProjectCreate from './ManualProjectCreate';\nimport './style.css';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n  fetchMyOrganizations: () => Promise<void>;\n  skipOnboarding: () => void;\n  userOrganizations: T.Organization[];\n}\n\ninterface State {\n  almApplication?: T.AlmApplication;\n  loading: boolean;\n}\n\ntype TabKeys = 'auto' | 'manual';\n\ninterface LocationState {\n  organization?: string;\n  tab?: TabKeys;\n}\n\nexport class CreateProjectPageSonarCloud extends React.PureComponent<\n  Props & WithRouterProps,\n  State\n> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (hasAdvancedALMIntegration(this.props.currentUser)) {\n      this.fetchAlmApplication();\n    } else {\n      this.setState({ loading: false });\n    }\n    addWhitePageClass();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeWhitePageClass();\n  }\n\n  handleProjectCreate = (projectKeys: string[], organization?: string) => {\n    this.props.skipOnboarding();\n    if (projectKeys.length > 1) {\n      this.props.router.push({\n        pathname: (organization ? getOrganizationUrl(organization) : '') + '/projects'\n      });\n    } else if (projectKeys.length === 1) {\n      this.props.router.push(getProjectUrl(projectKeys[0]));\n    }\n  };\n\n  fetchAlmApplication = () => {\n    return getAlmAppInfo().then(\n      ({ application }) => {\n        if (this.mounted) {\n          this.setState({ almApplication: application, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  onTabChange = (tab: TabKeys) => {\n    this.updateUrl({ tab });\n  };\n\n  updateUrl = (state: Partial<LocationState> = {}) => {\n    this.props.router.replace({\n      pathname: this.props.location.pathname,\n      query: this.props.location.query,\n      state: { ...(this.props.location.state || {}), ...state }\n    });\n  };\n\n  render() {\n    const { currentUser, location, userOrganizations } = this.props;\n    const { almApplication, loading } = this.state;\n    const state: LocationState = location.state || {};\n    const header = translate('onboarding.create_project.header');\n    const showManualTab = state.tab === 'manual';\n\n    return (\n      <>\n        <Helmet title={header} titleTemplate=\"%s\" />\n        <div className=\"page page-limited huge-spacer-top huge-spacer-bottom\">\n          <header className=\"page-header huge-spacer-bottom\">\n            <h1 className=\"page-title huge\">\n              <strong>{header}</strong>\n            </h1>\n          </header>\n          {loading ? (\n            <DeferredSpinner />\n          ) : (\n            <>\n              {almApplication && (\n                <Tabs<TabKeys>\n                  onChange={this.onTabChange}\n                  selected={state.tab || 'auto'}\n                  tabs={[\n                    {\n                      key: 'auto',\n                      node: translate('onboarding.create_project.select_repositories')\n                    },\n                    { key: 'manual', node: translate('onboarding.create_project.setup_manually') }\n                  ]}\n                />\n              )}\n\n              {showManualTab || !almApplication ? (\n                <ManualProjectCreate\n                  currentUser={currentUser}\n                  fetchMyOrganizations={this.props.fetchMyOrganizations}\n                  onProjectCreate={this.handleProjectCreate}\n                  organization={state.organization}\n                  userOrganizations={userOrganizations.filter(\n                    ({ actions = {} }) => actions.provision\n                  )}\n                />\n              ) : (\n                <AutoProjectCreate\n                  almApplication={almApplication}\n                  boundOrganizations={userOrganizations.filter(\n                    ({ alm, actions = {} }) => alm && actions.provision\n                  )}\n                  onOrganizationUpgrade={this.props.fetchMyOrganizations}\n                  onProjectCreate={this.handleProjectCreate}\n                  organization={state.organization}\n                />\n              )}\n            </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = { skipOnboarding };\n\nexport default whenLoggedIn(\n  withUserOrganizations(\n    connect(\n      null,\n      mapDispatchToProps\n    )(CreateProjectPageSonarCloud)\n  )\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addWhitePageClass, removeWhitePageClass } from 'sonar-ui-common/helpers/pages';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport ManualProjectCreate from './ManualProjectCreate';\nimport './style.css';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n}\n\nexport class CreateProjectPageSonarQube extends React.PureComponent<Props & WithRouterProps> {\n  componentDidMount() {\n    addWhitePageClass();\n  }\n\n  componentWillUnmount() {\n    removeWhitePageClass();\n  }\n\n  handleProjectCreate = (projectKeys: string[]) => {\n    if (projectKeys.length === 1) {\n      this.props.router.push(getProjectUrl(projectKeys[0]));\n    }\n  };\n\n  render() {\n    const { currentUser } = this.props;\n    const header = translate('my_account.create_new.TRK');\n    return (\n      <>\n        <Helmet title={header} titleTemplate=\"%s\" />\n        <div className=\"page page-limited huge-spacer-top huge-spacer-bottom\">\n          <header className=\"page-header bordered-bottom big-spacer-bottom\">\n            <h1 className=\"page-title huge big-spacer-bottom\">\n              <strong>{header}</strong>\n            </h1>\n          </header>\n          <ManualProjectCreate\n            currentUser={currentUser}\n            onProjectCreate={this.handleProjectCreate}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default whenLoggedIn(CreateProjectPageSonarQube);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport A11ySkipTarget from '../../../app/components/a11y/A11ySkipTarget';\nimport { isSonarCloud } from '../../../helpers/system';\nimport CreateProjectPageSonarCloud from './CreateProjectPageSonarCloud';\nimport CreateProjectPageSonarQube from './CreateProjectPageSonarQube';\n\nexport default function CreateProjectPage(props: WithRouterProps) {\n  return (\n    <>\n      <A11ySkipTarget anchor=\"create_project_main\" />\n      {isSonarCloud() ? (\n        <CreateProjectPageSonarCloud {...props} />\n      ) : (\n        <CreateProjectPageSonarQube {...props} />\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function getAlmMembersUrl(key: string, url: string): string {\n  if (!url.endsWith('/')) {\n    url += '/';\n  }\n  if (isGithub(key)) {\n    return url.replace('github.com/', 'github.com/orgs/') + 'people';\n  }\n  return url + 'profile/members';\n}\n\nexport function getUserAlmKey(user: T.CurrentUser) {\n  return isLoggedIn(user) && user.externalProvider\n    ? sanitizeAlmId(user.externalProvider)\n    : undefined;\n}\n\nexport function hasAdvancedALMIntegration(user: T.CurrentUser) {\n  return (\n    isLoggedIn(user) && (isBitbucket(user.externalProvider) || isGithub(user.externalProvider))\n  );\n}\n\nexport function isBitbucket(almKey?: string): boolean {\n  return almKey ? almKey.startsWith('bitbucket') : false;\n}\n\nexport function isGithub(almKey?: string): boolean {\n  return almKey === 'github';\n}\n\nexport function isVSTS(almKey?: string): boolean {\n  return almKey === 'microsoft';\n}\n\nexport function sanitizeAlmId(almKey: string) {\n  if (isBitbucket(almKey)) {\n    return 'bitbucket';\n  }\n  return almKey;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { getExtensionFromCache } from './extensionsHandler';\n\nlet librariesExposed = false;\n\nexport function installScript(url: string, target: 'body' | 'head' = 'body'): Promise<any> {\n  return new Promise(resolve => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = `${getBaseUrl()}${url}`;\n    scriptTag.onload = resolve;\n    document.getElementsByTagName(target)[0].appendChild(scriptTag);\n  });\n}\n\nexport async function getExtensionStart(key: string) {\n  const fromCache = getExtensionFromCache(key);\n  if (fromCache) {\n    return Promise.resolve(fromCache);\n  }\n\n  if (!librariesExposed) {\n    // Async import allows to reduce initial vendor bundle size\n    const exposeLibraries = (await import('../app/components/extensions/exposeLibraries')).default;\n    exposeLibraries();\n    librariesExposed = true;\n  }\n\n  await installScript(`/static/${key}.js`);\n\n  const start = getExtensionFromCache(key);\n  if (start) {\n    return start;\n  }\n  return Promise.reject();\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { memoize } from 'lodash';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { cleanQuery, parseAsOptionalString, serializeString } from 'sonar-ui-common/helpers/query';\nimport { decodeJwt } from 'sonar-ui-common/helpers/strings';\nimport { isBitbucket, isGithub } from '../../../helpers/almIntegrations';\n\nexport const ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP =\n  'sonarcloud.import_org.binding_in_progress';\n\nexport const ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP =\n  'sonarcloud.import_org.redirect_to_projects';\n\nexport const BIND_ORGANIZATION_KEY = 'sonarcloud.bind_org.key';\n\nexport const BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP = 'sonarcloud.bind_org.redirect_to_org';\n\nexport enum Step {\n  OrganizationDetails,\n  Plan\n}\n\nexport function formatPrice(price?: number, noSign?: boolean) {\n  const priceFormatted = formatMeasure(price, 'FLOAT')\n    .replace(/[.|,]0$/, '')\n    .replace(/([.|,]\\d)$/, '$10');\n  return noSign ? priceFormatted : translateWithParameters('billing.price_format', priceFormatted);\n}\n\nexport interface Query {\n  almInstallId?: string;\n  almKey?: string;\n}\n\nexport const parseQuery = memoize(\n  (urlQuery: T.RawQuery = {}): Query => {\n    let almInstallId = undefined;\n    let almKey = undefined;\n\n    if (urlQuery['installation_id']) {\n      almKey = 'github';\n      almInstallId = parseAsOptionalString(urlQuery['installation_id']);\n    } else if (urlQuery['clientKey']) {\n      almKey = 'bitbucket';\n      almInstallId = parseAsOptionalString(urlQuery['clientKey']);\n    } else if (urlQuery['jwt']) {\n      const jwt = decodeJwt(urlQuery['jwt']);\n      if (jwt && jwt.iss) {\n        almKey = 'bitbucket';\n        almInstallId = jwt.iss;\n      }\n    }\n    return { almInstallId, almKey };\n  }\n);\n\nexport const serializeQuery = (query: Query): T.RawQuery =>\n  cleanQuery({\n    installation_id: isGithub(query.almKey) ? serializeString(query.almInstallId) : undefined,\n    clientKey: isBitbucket(query.almKey) ? serializeString(query.almInstallId) : undefined\n  });\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport handleRequiredAuthentication from 'sonar-ui-common/helpers/handleRequiredAuthentication';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getWrappedDisplayName } from './utils';\nimport { withCurrentUser } from './withCurrentUser';\n\nexport function whenLoggedIn<P>(WrappedComponent: React.ComponentType<P>) {\n  class Wrapper extends React.Component<P & { currentUser: T.CurrentUser }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'whenLoggedIn');\n\n    componentDidMount() {\n      if (!isLoggedIn(this.props.currentUser)) {\n        handleRequiredAuthentication();\n      }\n    }\n\n    render() {\n      if (isLoggedIn(this.props.currentUser)) {\n        return <WrappedComponent {...this.props} />;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  return withCurrentUser(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function isPaidOrganization(organization: T.Organization | undefined): boolean {\n  return Boolean(organization && organization.subscription === 'PAID');\n}\n\nexport function hasPrivateAccess(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return (\n    !isPaidOrganization(organization) ||\n    isCurrentUserMemberOf(currentUser, organization, userOrganizations)\n  );\n}\n\nexport function isCurrentUserMemberOf(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return Boolean(\n    organization &&\n      isLoggedIn(currentUser) &&\n      ((organization.actions && organization.actions.admin) ||\n        userOrganizations.some(org => org.key === organization.key))\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport {\n  getCorsJSON,\n  getJSON,\n  post,\n  postJSON,\n  requestTryAndRepeatUntil\n} from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { AlmLanguagesStats } from '../apps/tutorials/analyzeProject/utils';\n\nexport function bindAlmOrganization(data: { installationId: string; organization: string }) {\n  return post('/api/alm_integration/bind_organization', data).catch(throwGlobalError);\n}\n\nexport function getAlmAppInfo(): Promise<{ application: T.AlmApplication }> {\n  return getJSON('/api/alm_integration/show_app_info').catch(throwGlobalError);\n}\n\nexport interface GetAlmOrganizationResponse {\n  almOrganization: T.AlmOrganization;\n  boundOrganization?: T.OrganizationBase;\n}\n\nexport function getAlmOrganization(data: {\n  installationId: string;\n}): Promise<GetAlmOrganizationResponse> {\n  return requestTryAndRepeatUntil(\n    () => getJSON('/api/alm_integration/show_organization', data),\n    { max: 25, slowThreshold: 20 },\n    () => true,\n    [404]\n  )\n    .catch(throwGlobalError)\n    .then(({ almOrganization, boundOrganization }) => ({\n      almOrganization: {\n        ...almOrganization,\n        name: almOrganization.name || almOrganization.key\n      },\n      boundOrganization\n    }));\n}\n\nexport function getRepositories(data: {\n  organization: string;\n}): Promise<{ repositories: T.AlmRepository[] }> {\n  return getJSON('/api/alm_integration/list_repositories', data).catch(throwGlobalError);\n}\n\nexport function listUnboundApplications(): Promise<T.AlmUnboundApplication[]> {\n  return getJSON('/api/alm_integration/list_unbound_applications').then(\n    ({ applications }) =>\n      applications.map((app: T.AlmUnboundApplication) => ({ ...app, name: app.name || app.key })),\n    throwGlobalError\n  );\n}\n\nexport function provisionProject(data: {\n  installationKeys: string[];\n  organization: string;\n}): Promise<{ projects: Array<{ projectKey: string }> }> {\n  return postJSON('/api/alm_integration/provision_projects', {\n    ...data,\n    installationKeys: data.installationKeys.join(',')\n  }).catch(throwGlobalError);\n}\n\nexport function getGithubLanguages(url: string): Promise<AlmLanguagesStats> {\n  // We don't want to throwGlobalError\n  const apiUrl = url.replace('https://github.com/', 'https://api.github.com/repos/');\n  return getCorsJSON(`${apiUrl}/languages`);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\n\nconst TRIAL_DURATION_DAYS = 14;\n\nexport default function UpgradeOrganizationAdvantages() {\n  return (\n    <ul className=\"note\">\n      <Advantage>{translate('billing.upgrade_box.unlimited_private_projects')}</Advantage>\n      <Advantage>{translate('billing.upgrade_box.strict_control_private_data')}</Advantage>\n      <Advantage>{translate('billing.upgrade_box.cancel_anytime')}</Advantage>\n      <Advantage>\n        <strong>\n          {translateWithParameters('billing.upgrade_box.free_trial_x', TRIAL_DURATION_DAYS)}\n        </strong>\n      </Advantage>\n    </ul>\n  );\n}\n\nexport function Advantage({ children }: { children: React.ReactNode }) {\n  return (\n    <li className=\"display-flex-center little-spacer-bottom\">\n      <CheckIcon className=\"spacer-right\" fill={colors.lightGreen} />\n      {children}\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getSubscriptionPlans(): Promise<T.SubscriptionPlan[]> {\n  return getJSON('/api/billing/show_subscription_plans').then(\n    ({ subscriptionPlans }) => subscriptionPlans,\n    throwGlobalError\n  );\n}\n\nexport function giveDowngradeFeedback(data: {\n  organization: string;\n  feedback: string;\n  additionalFeedback?: string;\n}): Promise<void> {\n  return post('/api/billing/send_feedback', data);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMyOrganizations } from '../../apps/account/organizations/actions';\nimport { getMyOrganizations, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\ninterface OwnProps {\n  fetchMyOrganizations: () => Promise<void>;\n  userOrganizations: T.Organization[];\n}\n\nexport function withUserOrganizations<P>(\n  WrappedComponent: React.ComponentType<P & Partial<OwnProps>>\n) {\n  class Wrapper extends React.Component<P & OwnProps> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withUserOrganizations');\n\n    componentDidMount() {\n      this.props.fetchMyOrganizations();\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  const mapDispatchToProps = { fetchMyOrganizations: fetchMyOrganizations as any };\n\n  function mapStateToProps(state: Store) {\n    return { userOrganizations: getMyOrganizations(state) };\n  }\n\n  return connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface ChildrenProps {\n  onSubmit: React.FormEventHandler;\n  processingUpgrade: boolean;\n  renderFormFields: () => React.ReactNode;\n  renderNextCharge: (className?: string) => React.ReactNode;\n  renderRecap: () => React.ReactNode;\n  renderSubmitButton: (submitText?: string) => React.ReactNode;\n  renderSubmitGroup: (submitText?: string) => React.ReactNode;\n}\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  initialCountry?: string;\n  currentUser: T.CurrentUser;\n  onCommit: () => void | Promise<void>;\n  onFailToUpgrade?: () => void;\n  organizationKey: string | (() => Promise<string>);\n  subscriptionPlans: T.SubscriptionPlan[];\n}\n\nexport default class BillingFormShim extends React.Component<Props> {\n  render() {\n    const { BillingForm } = (window as any).SonarBilling;\n    return <BillingForm {...this.props} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\nimport { getExtensionStart } from '../../../helpers/extensions';\nimport BillingFormShim from './BillingFormShim';\nimport UpgradeOrganizationAdvantages from './UpgradeOrganizationAdvantages';\n\nconst BillingForm = withCurrentUser(BillingFormShim);\n\ninterface Props {\n  insideModal?: boolean;\n  onUpgradeDone: () => void;\n  onClose: () => void;\n  organization: T.Organization;\n  subscriptionPlans: T.SubscriptionPlan[];\n}\n\ninterface State {\n  ready: boolean;\n}\n\nexport default class UpgradeOrganizationModal extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { ready: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    getExtensionStart('billing/billing').then(\n      () => {\n        if (this.mounted) {\n          this.setState({ ready: true });\n        }\n      },\n      () => {}\n    );\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const header = translate('billing.upgrade_box.upgrade_to_paid_plan');\n\n    if (!this.state.ready) {\n      return null;\n    }\n\n    return (\n      <Modal\n        contentLabel={header}\n        noBackdrop={this.props.insideModal}\n        onRequestClose={this.props.onClose}\n        shouldCloseOnOverlayClick={false}\n        size=\"medium\">\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n        <BillingForm\n          onCommit={this.props.onUpgradeDone}\n          organizationKey={this.props.organization.key}\n          subscriptionPlans={this.props.subscriptionPlans}>\n          {({\n            onSubmit,\n            processingUpgrade,\n            renderFormFields,\n            renderNextCharge,\n            renderRecap,\n            renderSubmitButton\n          }) => (\n            <form id=\"organization-paid-plan-form\" onSubmit={onSubmit}>\n              <div className=\"modal-body modal-container\">\n                <div className=\"huge-spacer-bottom\">\n                  <p className=\"spacer-bottom\">\n                    <FormattedMessage\n                      defaultMessage={translate('billing.upgrade.org_x_advantages')}\n                      id=\"billing.coupon.description\"\n                      values={{\n                        org: <strong>{this.props.organization.name}</strong>\n                      }}\n                    />\n                  </p>\n                  <UpgradeOrganizationAdvantages />\n                </div>\n                {renderFormFields()}\n                <div className=\"big-spacer-top\">{renderRecap()}</div>\n              </div>\n              <footer className=\"modal-foot display-flex-center display-flex-space-between\">\n                {renderNextCharge() || <span />}\n                <div>\n                  <DeferredSpinner loading={processingUpgrade} />\n                  {renderSubmitButton()}\n                  <ResetButtonLink onClick={this.props.onClose}>\n                    {translate('cancel')}\n                  </ResetButtonLink>\n                </div>\n              </footer>\n            </form>\n          )}\n        </BillingForm>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { getSubscriptionPlans } from '../../../api/billing';\nimport { formatPrice } from '../organization/utils';\nimport UpgradeOrganizationAdvantages from './UpgradeOrganizationAdvantages';\nimport UpgradeOrganizationModal from './UpgradeOrganizationModal';\n\ninterface Props {\n  className?: string;\n  insideModal?: boolean;\n  onOrganizationUpgrade: () => void;\n  organization: T.Organization;\n}\n\ninterface State {\n  subscriptionPlans: T.SubscriptionPlan[];\n  upgradeOrganizationModal: boolean;\n}\n\nexport default class UpgradeOrganizationBox extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { subscriptionPlans: [], upgradeOrganizationModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSubscriptionPlans();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSubscriptionPlans = () => {\n    return getSubscriptionPlans().then(subscriptionPlans => {\n      if (this.mounted) {\n        this.setState({ subscriptionPlans });\n      }\n    });\n  };\n\n  handleUpgradeClick = () => {\n    this.setState({ upgradeOrganizationModal: true });\n  };\n\n  handleUpgradeOrganizationModalClose = () => {\n    if (this.mounted) {\n      this.setState({ upgradeOrganizationModal: false });\n    }\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.onOrganizationUpgrade();\n    this.handleUpgradeOrganizationModalClose();\n  };\n\n  render() {\n    if (!hasMessage('billing.upgrade_box.header')) {\n      return null;\n    }\n\n    const { subscriptionPlans, upgradeOrganizationModal } = this.state;\n    const startingPrice = subscriptionPlans[0] && subscriptionPlans[0].price;\n\n    return (\n      <>\n        <RadioCard\n          className={this.props.className}\n          title={translate('billing.upgrade_box.header')}\n          titleInfo={\n            startingPrice !== undefined && (\n              <FormattedMessage\n                defaultMessage={translate('billing.price_from_x')}\n                id=\"billing.price_from_x\"\n                values={{\n                  price: <span className=\"big\">{formatPrice(startingPrice)}</span>\n                }}\n              />\n            )\n          }>\n          <>\n            <UpgradeOrganizationAdvantages />\n            <div className=\"big-spacer-left\">\n              <Button className=\"js-upgrade-organization\" onClick={this.handleUpgradeClick}>\n                {translate('billing.paid_plan.upgrade')}\n              </Button>\n              <Link className=\"spacer-left\" target=\"_blank\" to=\"/about/pricing\">\n                {translate('billing.pricing.learn_more')}\n              </Link>\n            </div>\n          </>\n        </RadioCard>\n        {upgradeOrganizationModal && (\n          <UpgradeOrganizationModal\n            insideModal={this.props.insideModal}\n            onClose={this.handleUpgradeOrganizationModalClose}\n            onUpgradeDone={this.handleOrganizationUpgrade}\n            organization={this.props.organization}\n            subscriptionPlans={subscriptionPlans}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  canTurnToPrivate?: boolean;\n  className?: string;\n  onChange: (visibility: T.Visibility) => void;\n  showDetails?: boolean;\n  visibility?: T.Visibility;\n}\n\nexport default class VisibilitySelector extends React.PureComponent<Props> {\n  handlePublicClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.props.onChange('public');\n  };\n\n  handlePrivateClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.props.onChange('private');\n  };\n\n  render() {\n    return (\n      <div className={classNames('visibility-select', this.props.className)}>\n        <a\n          className=\"link-base-color link-no-underline visibility-select-option\"\n          href=\"#\"\n          id=\"visibility-public\"\n          onClick={this.handlePublicClick}>\n          <i\n            className={classNames('icon-radio', {\n              'is-checked': this.props.visibility === 'public'\n            })}\n          />\n          <span className=\"spacer-left\">{translate('visibility.public')}</span>\n        </a>\n        {this.props.showDetails && (\n          <span className=\"visibility-details note\">\n            {translate('visibility.public.description.long')}\n          </span>\n        )}\n\n        {this.props.canTurnToPrivate ? (\n          <>\n            <a\n              className=\"link-base-color link-no-underline huge-spacer-left visibility-select-option\"\n              href=\"#\"\n              id=\"visibility-private\"\n              onClick={this.handlePrivateClick}>\n              <i\n                className={classNames('icon-radio', {\n                  'is-checked': this.props.visibility === 'private'\n                })}\n              />\n              <span className=\"spacer-left\">{translate('visibility.private')}</span>\n            </a>\n            {this.props.showDetails && (\n              <span className=\"visibility-details note\">\n                {translate('visibility.private.description.long')}\n              </span>\n            )}\n          </>\n        ) : (\n          <>\n            <span\n              className=\"huge-spacer-left text-muted cursor-not-allowed visibility-select-option\"\n              id=\"visibility-private\">\n              <i\n                className={classNames('icon-radio', {\n                  'is-checked': this.props.visibility === 'private'\n                })}\n              />\n              <span className=\"spacer-left\">{translate('visibility.private')}</span>\n            </span>\n            {this.props.showDetails && (\n              <span className=\"visibility-details note\">\n                {translate('visibility.private.description.long')}\n              </span>\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { sanitizeAlmId } from '../../../helpers/almIntegrations';\n\ninterface Props {\n  hideIcons?: boolean;\n  onChange: (organization: T.Organization) => void;\n  organization: string;\n  organizations: T.Organization[];\n}\n\nexport default function OrganizationSelect({\n  hideIcons,\n  onChange,\n  organization,\n  organizations\n}: Props) {\n  const optionRenderer = getOptionRenderer(hideIcons);\n  return (\n    <Select\n      autoFocus={!organization}\n      className=\"input-super-large\"\n      clearable={false}\n      id=\"select-organization\"\n      labelKey=\"name\"\n      onChange={onChange}\n      optionRenderer={optionRenderer}\n      options={sortBy(organizations, o => o.name.toLowerCase())}\n      placeholder={translate('onboarding.import_organization.choose_organization')}\n      required={true}\n      value={organization}\n      valueKey=\"key\"\n      valueRenderer={optionRenderer}\n    />\n  );\n}\n\nexport function getOptionRenderer(hideIcons?: boolean) {\n  return function optionRenderer(organization: T.Organization) {\n    const icon = organization.alm\n      ? `sonarcloud/${sanitizeAlmId(organization.alm.key)}`\n      : 'sonarcloud-square-logo';\n    const isPaidOrg = organization.subscription === 'PAID';\n    return (\n      <div className=\"display-flex-space-between\">\n        <span className=\"text-ellipsis flex-1\">\n          {!hideIcons && (\n            <img\n              alt={organization.alm ? organization.alm.key : 'SonarCloud'}\n              className=\"little-spacer-right\"\n              height={14}\n              src={`${getBaseUrl()}/images/${icon}.svg`}\n            />\n          )}\n          {organization.name}\n          <span className=\"note little-spacer-left\">{organization.key}</span>\n        </span>\n        {isPaidOrg && <div className=\"badge\">{translate('organization.paid_plan.badge')}</div>}\n      </div>\n    );\n  };\n}\n"],"sourceRoot":""}