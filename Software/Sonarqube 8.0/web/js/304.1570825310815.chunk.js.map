{"version":3,"sources":["webpack:///./src/main/js/apps/create/components/UpgradeOrganizationModal.tsx","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationBox.tsx","webpack:///./src/main/js/components/common/VisibilitySelector.tsx","webpack:///./src/main/js/apps/create/components/OrganizationSelect.tsx","webpack:///./src/main/js/apps/create/project/style.css?0a3a","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css?ab01","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css","webpack:///./src/main/js/apps/create/project/style.css","webpack:///./src/main/js/apps/create/project/OrganizationInput.tsx","webpack:///./src/main/js/apps/create/project/AlmRepositoryItem.tsx","webpack:///./src/main/js/apps/create/project/SetupProjectBox.tsx","webpack:///./src/main/js/apps/create/project/RemoteRepositories.tsx","webpack:///./src/main/js/apps/create/project/AutoProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageSonarCloud.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageSonarQube.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPage.tsx","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/helpers/almIntegrations.ts","webpack:///./src/main/js/helpers/extensions.ts","webpack:///./src/main/js/apps/create/organization/utils.ts","webpack:///./src/main/js/components/hoc/whenLoggedIn.tsx","webpack:///./src/main/js/helpers/organizations.ts","webpack:///./src/main/js/api/alm-integration.ts","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationAdvantages.tsx","webpack:///./src/main/js/api/billing.ts","webpack:///./src/main/js/components/hoc/withUserOrganizations.tsx","webpack:///./src/main/js/apps/create/components/BillingFormShim.tsx"],"names":["BillingForm","Object","withCurrentUser","BillingFormShim","_super","UpgradeOrganizationModal","_this","apply","this","arguments","mounted","state","ready","__extends","prototype","componentDidMount","extensions","then","setState","componentWillUnmount","render","header","l10n","index_js_exposed","Modal_default","a","contentLabel","noBackdrop","props","insideModal","onRequestClose","onClose","shouldCloseOnOverlayClick","size","className","onCommit","onUpgradeDone","organizationKey","organization","key","subscriptionPlans","_a","onSubmit","processingUpgrade","renderFormFields","renderNextCharge","renderRecap","renderSubmitButton","id","index_es","defaultMessage","values","org","name","UpgradeOrganizationAdvantages","DeferredSpinner_default","loading","buttons","onClick","UpgradeOrganizationBox_UpgradeOrganizationBox","UpgradeOrganizationBox","upgradeOrganizationModal","fetchSubscriptionPlans","billing","handleUpgradeClick","handleUpgradeOrganizationModalClose","handleOrganizationUpgrade","onOrganizationUpgrade","UpgradeOrganizationBox_extends","startingPrice","price","RadioCard_default","title","titleInfo","undefined","utils","es","target","to","components_UpgradeOrganizationModal","VisibilitySelector","handlePublicClick","event","preventDefault","currentTarget","blur","onChange","handlePrivateClick","react__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_0__","href","is-checked","visibility","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__","showDetails","canTurnToPrivate","OrganizationSelect","hideIcons","organizations","optionRenderer","icon","alm","_helpers_almIntegrations__WEBPACK_IMPORTED_MODULE_5__","isPaidOrg","subscription","alt","height","src","sonar_ui_common_helpers_urls__WEBPACK_IMPORTED_MODULE_4__","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","getOptionRenderer","sonar_ui_common_components_controls_Select__WEBPACK_IMPORTED_MODULE_2___default","autoFocus","clearable","labelKey","options","lodash_sortBy__WEBPACK_IMPORTED_MODULE_0___default","o","toLowerCase","placeholder","required","value","valueKey","valueRenderer","content","__webpack_require__","module","i","hmr","transform","insertInto","locals","exports","push","OrganizationInput_OrganizationInput","OrganizationInput","handleLinkClick","stopPropagation","storage","Date","now","toString","router","pathname","tab","autoImport","htmlFor","project_OrganizationInput","react_router_es","AlmRepositoryItem","handleMouseEnter","highlightUpgradeBox","handleMouseLeave","handleToggle","disabled","repository","linkedProjectKey","toggleRepository","AlmRepositoryItem_extends","identityProvider","selected","alreadyImported","Boolean","Tooltip_default","overlay","classnames","imported","onMouseEnter","onMouseLeave","role","LockIcon_default","fill","theme","disableGrayText","Checkbox_default","checked","onCheck","identity_default","icon-half-transparent","helpers_urls","width","label","private","CheckIcon_default","green","link","urls","SetupProjectBox","submitting","canSubmit","selectedRepositories","length","handleFormSubmit","alm_integration","installationKeys","map","repo","installationKey","projects","onProjectCreate","project","projectKey","handleProvisionFail","onProvisionFail","SetupProjectBox_extends","hasSelectedRepositories","partition_default","_b","privateRepos","_c","publicRepos","open","RemoteRepositories","checkAllRepositories","highlight","repositories","search","successfullyUpgraded","fetchRepositories","filterBySearch","includes","handleHighlightUpgradeBox","updateSelectedRepositories","keys","forEach","newRepository","find","r","handleSearch","onCheckAllRepositories","helpers_organizations","nextState","validRepositories","filter","filterByPlan","filterByImportable","keyBy_default","__assign","RemoteRepositories_extends","componentDidUpdate","prevProps","almApplication","hasPrivateRepositories","some","showSearchBox","showCheckAll","showUpgradebox","actions","admin","filteredRepositories","SearchBox_default","minLength","Alert","variant","project_AlmRepositoryItem","create-project-side-with-search","project_SetupProjectBox","types","AutoProjectCreate","call","handleInstallAppClick","handleOrganizationSelect","selectedOrganization","getInitialSelectedOrganization","AutoProjectCreate_extends","boundOrganizations","IdentityProviderLink_default","backgroundColor","iconPath","small","url","installationUrl","project_RemoteRepositories","ManualProjectCreate","checkFreeKey","components","component","alreadyExist","projectKeyError","touched","validating","catch","canChoosePrivate","getOrganization","userOrganizations","projectName","trim","selectedVisibility","fetchMyOrganizations","prevState","handleProjectKeyChange","validateKey","projectNameChanged","projectNameError","validateName","handleProjectNameChange","handleVisibilityChange","test","debounce_default","ManualProjectCreate_extends","system","projectKeyIsInvalid","projectKeyIsValid","projectNameIsInvalid","projectNameIsValid","ValidationInput_default","description","error","help","isInvalid","isValid","is-invalid","is-valid","maxLength","type","CreateProjectPageSonarCloud_CreateProjectPageSonarCloud","CreateProjectPageSonarCloud","handleProjectCreate","projectKeys","skipOnboarding","fetchAlmApplication","application","onTabChange","updateUrl","replace","location","query","CreateProjectPageSonarCloud_assign","CreateProjectPageSonarCloud_extends","almIntegrations","currentUser","pages","showManualTab","Helmet_default","titleTemplate","Tabs_default","tabs","node","create_project_ManualProjectCreate","provision","project_AutoProjectCreate","mapDispatchToProps","users","project_CreateProjectPageSonarCloud","whenLoggedIn","withUserOrganizations","CreateProjectPageSonarQube_CreateProjectPageSonarQube","CreateProjectPageSonarQube","CreateProjectPageSonarQube_extends","project_CreateProjectPageSonarQube","CreateProjectPage","A11ySkipTarget","anchor","CreateProjectPage_assign","react__WEBPACK_IMPORTED_MODULE_0__","_A11yContext__WEBPACK_IMPORTED_MODULE_2__","Consumer","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_1__","weight","d","__webpack_exports__","getAlmMembersUrl","getUserAlmKey","hasAdvancedALMIntegration","isBitbucket","isGithub","isVSTS","sanitizeAlmId","_users__WEBPACK_IMPORTED_MODULE_0__","endsWith","user","externalProvider","almKey","startsWith","librariesExposed","installScript","Promise","resolve","scriptTag","document","createElement","sonar_ui_common_helpers_urls__WEBPACK_IMPORTED_MODULE_0__","onload","getElementsByTagName","appendChild","getExtensionStart","fromCache","_extensionsHandler__WEBPACK_IMPORTED_MODULE_1__","all","e","bind","exposeLibraries","sent","default","start","reject","Step","ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP","ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP","BIND_ORGANIZATION_KEY","BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP","formatPrice","noSign","priceFormatted","sonar_ui_common_helpers_measures__WEBPACK_IMPORTED_MODULE_2__","parseQuery","lodash_memoize__WEBPACK_IMPORTED_MODULE_0___default","urlQuery","almInstallId","sonar_ui_common_helpers_query__WEBPACK_IMPORTED_MODULE_3__","jwt","sonar_ui_common_helpers_strings__WEBPACK_IMPORTED_MODULE_4__","iss","serializeQuery","installation_id","clientKey","WrappedComponent","Wrapper","_helpers_users__WEBPACK_IMPORTED_MODULE_2__","sonar_ui_common_helpers_handleRequiredAuthentication__WEBPACK_IMPORTED_MODULE_1___default","displayName","_utils__WEBPACK_IMPORTED_MODULE_3__","_withCurrentUser__WEBPACK_IMPORTED_MODULE_4__","isPaidOrganization","hasPrivateAccess","isCurrentUserMemberOf","bindAlmOrganization","data","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","getAlmAppInfo","getAlmOrganization","max","slowThreshold","almOrganization","boundOrganization","getRepositories","listUnboundApplications","applications","app","provisionProject","join","getGithubLanguages","apiUrl","sonar_ui_common_components_icons_CheckIcon__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_icons_CheckIcon__WEBPACK_IMPORTED_MODULE_1___default","n","_app_theme__WEBPACK_IMPORTED_MODULE_3__","TRIAL_DURATION_DAYS","Advantage","children","lightGreen","getSubscriptionPlans","giveDowngradeFeedback","_utils__WEBPACK_IMPORTED_MODULE_4__","_apps_account_organizations_actions__WEBPACK_IMPORTED_MODULE_2__","react_redux__WEBPACK_IMPORTED_MODULE_1__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_3__","window","SonarBilling"],"mappings":"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","file":"js/304.1570825310815.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\nimport { getExtensionStart } from '../../../helpers/extensions';\nimport BillingFormShim from './BillingFormShim';\nimport UpgradeOrganizationAdvantages from './UpgradeOrganizationAdvantages';\n\nconst BillingForm = withCurrentUser(BillingFormShim);\n\ninterface Props {\n  insideModal?: boolean;\n  onUpgradeDone: () => void;\n  onClose: () => void;\n  organization: T.Organization;\n  subscriptionPlans: T.SubscriptionPlan[];\n}\n\ninterface State {\n  ready: boolean;\n}\n\nexport default class UpgradeOrganizationModal extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { ready: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    getExtensionStart('billing/billing').then(\n      () => {\n        if (this.mounted) {\n          this.setState({ ready: true });\n        }\n      },\n      () => {}\n    );\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const header = translate('billing.upgrade_box.upgrade_to_paid_plan');\n\n    if (!this.state.ready) {\n      return null;\n    }\n\n    return (\n      <Modal\n        contentLabel={header}\n        noBackdrop={this.props.insideModal}\n        onRequestClose={this.props.onClose}\n        shouldCloseOnOverlayClick={false}\n        size=\"medium\">\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n        <BillingForm\n          onCommit={this.props.onUpgradeDone}\n          organizationKey={this.props.organization.key}\n          subscriptionPlans={this.props.subscriptionPlans}>\n          {({\n            onSubmit,\n            processingUpgrade,\n            renderFormFields,\n            renderNextCharge,\n            renderRecap,\n            renderSubmitButton\n          }) => (\n            <form id=\"organization-paid-plan-form\" onSubmit={onSubmit}>\n              <div className=\"modal-body modal-container\">\n                <div className=\"huge-spacer-bottom\">\n                  <p className=\"spacer-bottom\">\n                    <FormattedMessage\n                      defaultMessage={translate('billing.upgrade.org_x_advantages')}\n                      id=\"billing.coupon.description\"\n                      values={{\n                        org: <strong>{this.props.organization.name}</strong>\n                      }}\n                    />\n                  </p>\n                  <UpgradeOrganizationAdvantages />\n                </div>\n                {renderFormFields()}\n                <div className=\"big-spacer-top\">{renderRecap()}</div>\n              </div>\n              <footer className=\"modal-foot display-flex-center display-flex-space-between\">\n                {renderNextCharge() || <span />}\n                <div>\n                  <DeferredSpinner loading={processingUpgrade} />\n                  {renderSubmitButton()}\n                  <ResetButtonLink onClick={this.props.onClose}>\n                    {translate('cancel')}\n                  </ResetButtonLink>\n                </div>\n              </footer>\n            </form>\n          )}\n        </BillingForm>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { getSubscriptionPlans } from '../../../api/billing';\nimport { formatPrice } from '../organization/utils';\nimport UpgradeOrganizationAdvantages from './UpgradeOrganizationAdvantages';\nimport UpgradeOrganizationModal from './UpgradeOrganizationModal';\n\ninterface Props {\n  className?: string;\n  insideModal?: boolean;\n  onOrganizationUpgrade: () => void;\n  organization: T.Organization;\n}\n\ninterface State {\n  subscriptionPlans: T.SubscriptionPlan[];\n  upgradeOrganizationModal: boolean;\n}\n\nexport default class UpgradeOrganizationBox extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { subscriptionPlans: [], upgradeOrganizationModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSubscriptionPlans();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSubscriptionPlans = () => {\n    return getSubscriptionPlans().then(subscriptionPlans => {\n      if (this.mounted) {\n        this.setState({ subscriptionPlans });\n      }\n    });\n  };\n\n  handleUpgradeClick = () => {\n    this.setState({ upgradeOrganizationModal: true });\n  };\n\n  handleUpgradeOrganizationModalClose = () => {\n    if (this.mounted) {\n      this.setState({ upgradeOrganizationModal: false });\n    }\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.onOrganizationUpgrade();\n    this.handleUpgradeOrganizationModalClose();\n  };\n\n  render() {\n    if (!hasMessage('billing.upgrade_box.header')) {\n      return null;\n    }\n\n    const { subscriptionPlans, upgradeOrganizationModal } = this.state;\n    const startingPrice = subscriptionPlans[0] && subscriptionPlans[0].price;\n\n    return (\n      <>\n        <RadioCard\n          className={this.props.className}\n          title={translate('billing.upgrade_box.header')}\n          titleInfo={\n            startingPrice !== undefined && (\n              <FormattedMessage\n                defaultMessage={translate('billing.price_from_x')}\n                id=\"billing.price_from_x\"\n                values={{\n                  price: <span className=\"big\">{formatPrice(startingPrice)}</span>\n                }}\n              />\n            )\n          }>\n          <>\n            <UpgradeOrganizationAdvantages />\n            <div className=\"big-spacer-left\">\n              <Button className=\"js-upgrade-organization\" onClick={this.handleUpgradeClick}>\n                {translate('billing.paid_plan.upgrade')}\n              </Button>\n              <Link className=\"spacer-left\" target=\"_blank\" to=\"/about/pricing\">\n                {translate('billing.pricing.learn_more')}\n              </Link>\n            </div>\n          </>\n        </RadioCard>\n        {upgradeOrganizationModal && (\n          <UpgradeOrganizationModal\n            insideModal={this.props.insideModal}\n            onClose={this.handleUpgradeOrganizationModalClose}\n            onUpgradeDone={this.handleOrganizationUpgrade}\n            organization={this.props.organization}\n            subscriptionPlans={subscriptionPlans}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  canTurnToPrivate?: boolean;\n  className?: string;\n  onChange: (visibility: T.Visibility) => void;\n  showDetails?: boolean;\n  visibility?: T.Visibility;\n}\n\nexport default class VisibilitySelector extends React.PureComponent<Props> {\n  handlePublicClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.props.onChange('public');\n  };\n\n  handlePrivateClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.props.onChange('private');\n  };\n\n  render() {\n    return (\n      <div className={classNames('visibility-select', this.props.className)}>\n        <a\n          className=\"link-base-color link-no-underline visibility-select-option\"\n          href=\"#\"\n          id=\"visibility-public\"\n          onClick={this.handlePublicClick}>\n          <i\n            className={classNames('icon-radio', {\n              'is-checked': this.props.visibility === 'public'\n            })}\n          />\n          <span className=\"spacer-left\">{translate('visibility.public')}</span>\n        </a>\n        {this.props.showDetails && (\n          <span className=\"visibility-details note\">\n            {translate('visibility.public.description.long')}\n          </span>\n        )}\n\n        {this.props.canTurnToPrivate ? (\n          <>\n            <a\n              className=\"link-base-color link-no-underline huge-spacer-left visibility-select-option\"\n              href=\"#\"\n              id=\"visibility-private\"\n              onClick={this.handlePrivateClick}>\n              <i\n                className={classNames('icon-radio', {\n                  'is-checked': this.props.visibility === 'private'\n                })}\n              />\n              <span className=\"spacer-left\">{translate('visibility.private')}</span>\n            </a>\n            {this.props.showDetails && (\n              <span className=\"visibility-details note\">\n                {translate('visibility.private.description.long')}\n              </span>\n            )}\n          </>\n        ) : (\n          <>\n            <span\n              className=\"huge-spacer-left text-muted cursor-not-allowed visibility-select-option\"\n              id=\"visibility-private\">\n              <i\n                className={classNames('icon-radio', {\n                  'is-checked': this.props.visibility === 'private'\n                })}\n              />\n              <span className=\"spacer-left\">{translate('visibility.private')}</span>\n            </span>\n            {this.props.showDetails && (\n              <span className=\"visibility-details note\">\n                {translate('visibility.private.description.long')}\n              </span>\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { sanitizeAlmId } from '../../../helpers/almIntegrations';\n\ninterface Props {\n  hideIcons?: boolean;\n  onChange: (organization: T.Organization) => void;\n  organization: string;\n  organizations: T.Organization[];\n}\n\nexport default function OrganizationSelect({\n  hideIcons,\n  onChange,\n  organization,\n  organizations\n}: Props) {\n  const optionRenderer = getOptionRenderer(hideIcons);\n  return (\n    <Select\n      autoFocus={!organization}\n      className=\"input-super-large\"\n      clearable={false}\n      id=\"select-organization\"\n      labelKey=\"name\"\n      onChange={onChange}\n      optionRenderer={optionRenderer}\n      options={sortBy(organizations, o => o.name.toLowerCase())}\n      placeholder={translate('onboarding.import_organization.choose_organization')}\n      required={true}\n      value={organization}\n      valueKey=\"key\"\n      valueRenderer={optionRenderer}\n    />\n  );\n}\n\nexport function getOptionRenderer(hideIcons?: boolean) {\n  return function optionRenderer(organization: T.Organization) {\n    const icon = organization.alm\n      ? `sonarcloud/${sanitizeAlmId(organization.alm.key)}`\n      : 'sonarcloud-square-logo';\n    const isPaidOrg = organization.subscription === 'PAID';\n    return (\n      <div className=\"display-flex-space-between\">\n        <span className=\"text-ellipsis flex-1\">\n          {!hideIcons && (\n            <img\n              alt={organization.alm ? organization.alm.key : 'SonarCloud'}\n              className=\"little-spacer-right\"\n              height={14}\n              src={`${getBaseUrl()}/images/${icon}.svg`}\n            />\n          )}\n          {organization.name}\n          <span className=\"note little-spacer-left\">{organization.key}</span>\n        </span>\n        {isPaidOrg && <div className=\"badge\">{translate('organization.paid_plan.badge')}</div>}\n      </div>\n    );\n  };\n}\n","\nvar content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".manual-project-create{max-width:700px}.manual-project-create .visibility-select-option{margin-left:0!important;margin-bottom:8px;display:flex;align-items:center;font-size:14px}.manual-project-create .visibility-details{display:block;margin:8px 0}.manual-project-create .visibility-select-wrapper{padding:8px 0 16px}.manual-project-create .button{margin-top:8px}\", \"\"]);\n\n","exports = module.exports = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".create-project{display:flex!important;justify-content:space-between}.create-project-repository{display:flex;align-items:center;min-width:500px;height:40px;border:1px solid #e6e6e6;padding:8px 16px;margin-bottom:8px;box-sizing:border-box;cursor:pointer;transition:all .3s ease}.create-project-repository.disabled{background-color:#ebebeb;border-color:#ddd;cursor:default}.create-project-repository.imported{cursor:default}.create-project-repository.selected{background-color:#cae3f2;border-color:#236a97}.create-project-repository:not(.imported):not(.disabled):active,.create-project-repository:not(.imported):not(.disabled):focus,.create-project-repository:not(.imported):not(.disabled):hover{border-color:#4b9fd5;box-shadow:none}.create-project-side-with-search{margin-top:32px}.create-project-side-sticky{position:-webkit-sticky;position:sticky;top:68px}.create-project-setup{display:flex;overflow:hidden;opacity:0;flex-direction:column;height:0;width:450px;margin-bottom:0;color:#fff;background-color:#0b3c62;border:none;border-radius:3px;transition:height .5s ease,opacity .4s ease-out,margin-bottom .5s ease-in}.create-project-setup.open{opacity:1;height:160px;margin-bottom:20px}.create-project-setup h2{color:#fff;font-weight:700;font-size:16px}.create-project-setup .boxed-group-inner{display:flex;flex-direction:column;flex-grow:1}.create-project-setup .button{border-color:#4c9bd6;background-color:#4c9bd6;color:#fff;transition:border-color .2s ease,box-shadow .2s ease,background-color .2s ease}.create-project-setup .button:focus,.create-project-setup .button:hover{border-color:#327bb3;background-color:#327bb3}.create-project-actions{min-width:500px;display:flex;justify-content:space-between;align-items:center;padding:8px 0 8px 16px;border-left:1px solid transparent}.create-project-actions .icon-checkbox{margin-right:8px}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { save } from 'sonar-ui-common/helpers/storage';\nimport OrganizationSelect from '../components/OrganizationSelect';\nimport { ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP } from '../organization/utils';\n\ninterface Props {\n  autoImport?: boolean;\n  onChange: (organization: T.Organization) => void;\n  organization: string;\n  organizations: T.Organization[];\n}\n\nexport class OrganizationInput extends React.PureComponent<Props & WithRouterProps> {\n  handleLinkClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    save(ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP, Date.now().toString(10));\n    this.props.router.push({\n      pathname: '/create-organization',\n      state: { tab: this.props.autoImport ? 'auto' : 'manual' }\n    });\n  };\n\n  render() {\n    const { autoImport, onChange, organization, organizations } = this.props;\n    return (\n      <div className=\"form-field spacer-bottom\">\n        <label htmlFor=\"select-organization\">\n          <span className=\"text-middle\">\n            <strong>{translate('onboarding.create_project.organization')}</strong>\n            <em className=\"mandatory\">*</em>\n          </span>\n        </label>\n        <OrganizationSelect\n          hideIcons={!autoImport}\n          onChange={onChange}\n          organization={organization}\n          organizations={organizations}\n        />\n        <a className=\"big-spacer-left js-new-org\" href=\"#\" onClick={this.handleLinkClick}>\n          {autoImport\n            ? translate('onboarding.create_project.import_new_org')\n            : translate('onboarding.create_project.create_new_org')}\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(OrganizationInput);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { identity } from 'lodash';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport LockIcon from 'sonar-ui-common/components/icons/LockIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { colors } from '../../../app/theme';\nimport { getProjectUrl } from '../../../helpers/urls';\n\ninterface Props {\n  disabled: boolean;\n  highlightUpgradeBox: (highlight: boolean) => void;\n  identityProvider: T.IdentityProvider;\n  repository: T.AlmRepository;\n  selected: boolean;\n  toggleRepository: (repository: T.AlmRepository) => void;\n}\n\nexport default class AlmRepositoryItem extends React.PureComponent<Props> {\n  handleMouseEnter = () => {\n    this.props.highlightUpgradeBox(true);\n  };\n\n  handleMouseLeave = () => {\n    this.props.highlightUpgradeBox(false);\n  };\n\n  handleToggle = () => {\n    if (!this.props.disabled && !this.props.repository.linkedProjectKey) {\n      this.props.toggleRepository(this.props.repository);\n    }\n  };\n\n  render() {\n    const { disabled, identityProvider, repository, selected } = this.props;\n    const alreadyImported = Boolean(repository.linkedProjectKey);\n    return (\n      <Tooltip\n        overlay={\n          disabled\n            ? translate('onboarding.create_project.subscribe_to_import_private_repositories')\n            : undefined\n        }>\n        <li>\n          <div\n            className={classNames('create-project-repository', {\n              disabled,\n              imported: alreadyImported,\n              selected\n            })}\n            onClick={this.handleToggle}\n            onMouseEnter={disabled ? this.handleMouseEnter : undefined}\n            onMouseLeave={disabled ? this.handleMouseLeave : undefined}\n            role=\"listitem\">\n            <div className=\"flex-1 display-flex-center\">\n              {disabled ? (\n                <LockIcon fill={colors.disableGrayText} />\n              ) : (\n                <Checkbox\n                  checked={selected || alreadyImported}\n                  disabled={disabled || alreadyImported}\n                  onCheck={identity}\n                />\n              )}\n              <img\n                alt={identityProvider.name}\n                className={classNames('spacer-left', { 'icon-half-transparent': disabled })}\n                height={14}\n                src={`${getBaseUrl()}/images/sonarcloud/${identityProvider.key}.svg`}\n                width={14}\n              />\n              <span className=\"spacer-left\">{this.props.repository.label}</span>\n              {repository.private && (\n                <div className=\"badge spacer-left\">{translate('visibility.private')}</div>\n              )}\n            </div>\n\n            {repository.linkedProjectKey && (\n              <span>\n                <CheckIcon className=\"little-spacer-right\" fill={colors.green} />\n                <FormattedMessage\n                  defaultMessage={translate('onboarding.create_project.repository_imported')}\n                  id=\"onboarding.create_project.repository_imported\"\n                  values={{\n                    link: (\n                      <Link to={getProjectUrl(repository.linkedProjectKey)}>\n                        {translate('onboarding.create_project.see_project')}\n                      </Link>\n                    )\n                  }}\n                />\n              </span>\n            )}\n          </div>\n        </li>\n      </Tooltip>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { partition } from 'lodash';\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { provisionProject } from '../../../api/alm-integration';\n\ninterface Props {\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  onProvisionFail: () => Promise<void>;\n  organization: T.Organization;\n  selectedRepositories: T.AlmRepository[];\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SetupProjectBox extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  canSubmit = () => {\n    return !this.state.submitting && this.props.selectedRepositories.length > 0;\n  };\n\n  handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (this.canSubmit()) {\n      const { selectedRepositories } = this.props;\n      this.setState({ submitting: true });\n      provisionProject({\n        installationKeys: selectedRepositories.map(repo => repo.installationKey),\n        organization: this.props.organization.key\n      }).then(\n        ({ projects }) =>\n          this.props.onProjectCreate(\n            projects.map(project => project.projectKey),\n            this.props.organization.key\n          ),\n        this.handleProvisionFail\n      );\n    }\n  };\n\n  handleProvisionFail = () => {\n    return this.props.onProvisionFail().then(() => {\n      if (this.mounted) {\n        this.setState({ submitting: false });\n      }\n    });\n  };\n\n  render() {\n    const { selectedRepositories } = this.props;\n    const hasSelectedRepositories = selectedRepositories.length > 0;\n    const [privateRepos = [], publicRepos = []] = partition(\n      selectedRepositories,\n      repo => repo.private\n    );\n    return (\n      <form\n        className={classNames('create-project-setup boxed-group', {\n          open: hasSelectedRepositories\n        })}\n        onSubmit={this.handleFormSubmit}>\n        <div className=\"boxed-group-header\">\n          <h2 className=\"spacer-top\">\n            {selectedRepositories.length > 1\n              ? translateWithParameters(\n                  'onboarding.create_project.x_repositories_selected',\n                  selectedRepositories.length\n                )\n              : translate('onboarding.create_project.1_repository_selected')}\n          </h2>\n        </div>\n        <div className=\"boxed-group-inner\">\n          <div className=\"flex-1\">\n            {publicRepos.length === 1 && (\n              <p>{translate('onboarding.create_project.1_repository_created_as_public')}</p>\n            )}\n            {publicRepos.length > 1 && (\n              <p>\n                {translateWithParameters(\n                  'onboarding.create_project.x_repository_created_as_public',\n                  publicRepos.length\n                )}\n              </p>\n            )}\n            {privateRepos.length === 1 && (\n              <p>{translate('onboarding.create_project.1_repository_created_as_private')}</p>\n            )}\n            {privateRepos.length > 1 && (\n              <p>\n                {translateWithParameters(\n                  'onboarding.create_project.x_repository_created_as_private',\n                  privateRepos.length\n                )}\n              </p>\n            )}\n          </div>\n          <div>\n            <SubmitButton className=\"button-large\" disabled={this.state.submitting}>\n              {translate('set_up')}\n            </SubmitButton>\n            <DeferredSpinner className=\"spacer-left\" loading={this.state.submitting} />\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { keyBy } from 'lodash';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { getRepositories } from '../../../api/alm-integration';\nimport { isPaidOrganization } from '../../../helpers/organizations';\nimport UpgradeOrganizationBox from '../components/UpgradeOrganizationBox';\nimport AlmRepositoryItem from './AlmRepositoryItem';\nimport SetupProjectBox from './SetupProjectBox';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  onOrganizationUpgrade: () => void;\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  organization: T.Organization;\n}\n\ntype SelectedRepositories = T.Dict<T.AlmRepository | undefined>;\n\ninterface State {\n  checkAllRepositories: boolean;\n  highlight: boolean;\n  loading: boolean;\n  repositories: T.AlmRepository[];\n  search: string;\n  selectedRepositories: SelectedRepositories;\n  successfullyUpgraded: boolean;\n}\n\nexport default class RemoteRepositories extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    checkAllRepositories: false,\n    highlight: false,\n    loading: true,\n    repositories: [],\n    search: '',\n    selectedRepositories: {},\n    successfullyUpgraded: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchRepositories();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.organization.key !== this.props.organization.key) {\n      this.setState({ loading: true, selectedRepositories: {} });\n      this.fetchRepositories();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchRepositories = () => {\n    const { organization } = this.props;\n    return getRepositories({ organization: organization.key }).then(\n      ({ repositories }) => {\n        if (this.mounted) {\n          this.setState({ loading: false, repositories });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  filterBySearch = (search: String) => (repo: T.AlmRepository) => {\n    return repo.label.toLowerCase().includes(search.toLowerCase());\n  };\n\n  handleHighlightUpgradeBox = (highlight: boolean) => {\n    this.setState({ highlight });\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.onOrganizationUpgrade();\n    if (this.mounted) {\n      this.setState({ successfullyUpgraded: true });\n    }\n  };\n\n  handleProvisionFail = () => {\n    return this.fetchRepositories().then(() => {\n      if (this.mounted) {\n        this.setState(({ repositories, selectedRepositories }) => {\n          const updateSelectedRepositories: SelectedRepositories = {};\n          Object.keys(selectedRepositories).forEach(installationKey => {\n            const newRepository = repositories.find(r => r.installationKey === installationKey);\n            if (newRepository && !newRepository.linkedProjectKey) {\n              updateSelectedRepositories[newRepository.installationKey] = newRepository;\n            }\n          });\n          return { selectedRepositories: updateSelectedRepositories };\n        });\n      }\n    });\n  };\n\n  handleSearch = (search: string) => {\n    this.setState({ search, checkAllRepositories: false, selectedRepositories: {} });\n  };\n\n  onCheckAllRepositories = () => {\n    this.setState(({ checkAllRepositories, repositories, search }) => {\n      const { organization } = this.props;\n\n      const isPaidOrg = isPaidOrganization(organization);\n      const filterByPlan = (repo: T.AlmRepository) => (isPaidOrg ? true : !repo.private);\n      const filterByImportable = (repo: T.AlmRepository) => !repo.linkedProjectKey;\n\n      const nextState = {\n        selectedRepositories: {},\n        checkAllRepositories: !checkAllRepositories\n      };\n\n      if (nextState.checkAllRepositories) {\n        const validRepositories = repositories.filter(\n          repo =>\n            this.filterBySearch(search)(repo) && filterByPlan(repo) && filterByImportable(repo)\n        );\n        nextState.selectedRepositories = keyBy(validRepositories, 'installationKey');\n      }\n\n      return nextState;\n    });\n  };\n\n  toggleRepository = (repository: T.AlmRepository) => {\n    this.setState(({ selectedRepositories }) => ({\n      selectedRepositories: {\n        ...selectedRepositories,\n        [repository.installationKey]: selectedRepositories[repository.installationKey]\n          ? undefined\n          : repository\n      }\n    }));\n  };\n\n  render() {\n    const { highlight, loading, repositories, search, selectedRepositories } = this.state;\n    const { almApplication, organization } = this.props;\n    const isPaidOrg = isPaidOrganization(organization);\n    const hasPrivateRepositories = repositories.some(repository => Boolean(repository.private));\n    const showSearchBox = repositories.length > 5;\n    const showCheckAll = repositories.length > 1;\n    const showUpgradebox =\n      !isPaidOrg && hasPrivateRepositories && organization.actions && organization.actions.admin;\n    const filteredRepositories = repositories.filter(this.filterBySearch(search));\n\n    return (\n      <div className=\"create-project\">\n        <div className=\"flex-1 huge-spacer-right\">\n          <div className=\"spacer-bottom create-project-actions\">\n            <div>\n              {showCheckAll && (\n                <Checkbox\n                  checked={this.state.checkAllRepositories}\n                  disabled={filteredRepositories.length === 0}\n                  onCheck={this.onCheckAllRepositories}>\n                  {translate('onboarding.create_project.select_all_repositories')}\n                </Checkbox>\n              )}\n            </div>\n            {showSearchBox && (\n              <SearchBox\n                minLength={1}\n                onChange={this.handleSearch}\n                placeholder={translate('search.search_for_repositories')}\n                value={this.state.search}\n              />\n            )}\n          </div>\n\n          {this.state.successfullyUpgraded && (\n            <Alert variant=\"success\">\n              {translateWithParameters(\n                'onboarding.create_project.subscribtion_success_x',\n                organization.name\n              )}\n            </Alert>\n          )}\n          <DeferredSpinner loading={loading}>\n            <ul>\n              {filteredRepositories.length === 0 && (\n                <li className=\"big-spacer-top note\">\n                  {showUpgradebox\n                    ? translateWithParameters('no_results_for_x', search)\n                    : translate('onboarding.create_project.no_repositories')}\n                </li>\n              )}\n              {filteredRepositories.map(repo => (\n                <AlmRepositoryItem\n                  disabled={Boolean(repo.private && !isPaidOrg)}\n                  highlightUpgradeBox={this.handleHighlightUpgradeBox}\n                  identityProvider={almApplication}\n                  key={repo.installationKey}\n                  repository={repo}\n                  selected={Boolean(selectedRepositories[repo.installationKey])}\n                  toggleRepository={this.toggleRepository}\n                />\n              ))}\n            </ul>\n          </DeferredSpinner>\n        </div>\n        {organization && (\n          <div className={classNames({ 'create-project-side-with-search': showSearchBox })}>\n            <div className=\"create-project-side-sticky\">\n              <SetupProjectBox\n                onProjectCreate={this.props.onProjectCreate}\n                onProvisionFail={this.handleProvisionFail}\n                organization={organization}\n                selectedRepositories={Object.keys(selectedRepositories)\n                  .map(r => selectedRepositories[r])\n                  .filter(isDefined)}\n              />\n              {showUpgradebox && (\n                <UpgradeOrganizationBox\n                  className={classNames({ highlight })}\n                  onOrganizationUpgrade={this.handleOrganizationUpgrade}\n                  organization={organization}\n                />\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport IdentityProviderLink from 'sonar-ui-common/components/controls/IdentityProviderLink';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { save } from 'sonar-ui-common/helpers/storage';\nimport {\n  ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP,\n  ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP\n} from '../organization/utils';\nimport OrganizationInput from './OrganizationInput';\nimport RemoteRepositories from './RemoteRepositories';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  boundOrganizations: T.Organization[];\n  onOrganizationUpgrade: () => void;\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  organization?: string;\n}\n\ninterface State {\n  selectedOrganization: string;\n}\n\nexport default class AutoProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { selectedOrganization: this.getInitialSelectedOrganization(props) };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getInitialSelectedOrganization(props: Props) {\n    if (props.organization) {\n      return props.organization;\n    } else if (props.boundOrganizations.length === 1) {\n      return props.boundOrganizations[0].key;\n    } else {\n      return '';\n    }\n  }\n\n  handleInstallAppClick = () => {\n    save(ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP, Date.now().toString(10));\n    save(ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP, Date.now().toString(10));\n  };\n\n  handleOrganizationSelect = ({ key }: T.Organization) => {\n    this.setState({ selectedOrganization: key });\n  };\n\n  render() {\n    const { almApplication, boundOrganizations, onProjectCreate } = this.props;\n\n    if (boundOrganizations.length === 0) {\n      return (\n        <>\n          <p className=\"spacer-bottom\">\n            {translate('onboarding.create_project.install_app_description', almApplication.key)}\n          </p>\n          <IdentityProviderLink\n            backgroundColor={almApplication.backgroundColor}\n            className=\"display-inline-block\"\n            iconPath={almApplication.iconPath}\n            name={almApplication.name}\n            onClick={this.handleInstallAppClick}\n            small={true}\n            url={almApplication.installationUrl}>\n            {translate(\n              'onboarding.import_organization.choose_organization_button',\n              almApplication.key\n            )}\n          </IdentityProviderLink>\n        </>\n      );\n    }\n\n    const { selectedOrganization } = this.state;\n    const organization = boundOrganizations.find(o => o.key === selectedOrganization);\n\n    return (\n      <>\n        <OrganizationInput\n          autoImport={true}\n          onChange={this.handleOrganizationSelect}\n          organization={selectedOrganization}\n          organizations={this.props.boundOrganizations}\n        />\n        {organization && (\n          <RemoteRepositories\n            almApplication={almApplication}\n            onOrganizationUpgrade={this.props.onOrganizationUpgrade}\n            onProjectCreate={onProjectCreate}\n            organization={organization}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createProject, doesComponentExists } from '../../../api/components';\nimport VisibilitySelector from '../../../components/common/VisibilitySelector';\nimport { isSonarCloud } from '../../../helpers/system';\nimport UpgradeOrganizationBox from '../components/UpgradeOrganizationBox';\nimport './ManualProjectCreate.css';\nimport OrganizationInput from './OrganizationInput';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n  fetchMyOrganizations?: () => Promise<void>;\n  onProjectCreate: (projectKeys: string[]) => void;\n  organization?: string;\n  userOrganizations?: T.Organization[];\n}\n\ninterface State {\n  projectName: string;\n  projectNameChanged: boolean;\n  projectNameError?: string;\n  projectKey: string;\n  projectKeyError?: string;\n  selectedOrganization?: T.Organization;\n  selectedVisibility?: T.Visibility;\n  submitting: boolean;\n  touched: boolean;\n  validating: boolean;\n}\n\ntype ValidState = State & Required<Pick<State, 'projectKey' | 'projectName'>>;\n\nexport default class ManualProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      projectKey: '',\n      projectName: '',\n      projectNameChanged: false,\n      selectedOrganization: this.getInitialSelectedOrganization(props),\n      submitting: false,\n      touched: false,\n      validating: false\n    };\n    this.checkFreeKey = debounce(this.checkFreeKey, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkFreeKey = (key: string) => {\n    return doesComponentExists({ component: key })\n      .then(alreadyExist => {\n        if (this.mounted && key === this.state.projectKey) {\n          if (!alreadyExist) {\n            this.setState({ projectKeyError: undefined, validating: false });\n          } else {\n            this.setState({\n              projectKeyError: translate('onboarding.create_project.project_key.taken'),\n              touched: true,\n              validating: false\n            });\n          }\n        }\n      })\n      .catch(() => {\n        if (this.mounted && key === this.state.projectKey) {\n          this.setState({ projectKeyError: undefined, validating: false });\n        }\n      });\n  };\n\n  canChoosePrivate = (selectedOrganization: T.Organization | undefined) => {\n    return Boolean(selectedOrganization && selectedOrganization.subscription === 'PAID');\n  };\n\n  canSubmit(state: State): state is ValidState {\n    const {\n      projectKey,\n      projectKeyError,\n      projectName,\n      projectNameError,\n      selectedOrganization\n    } = state;\n    return Boolean(\n      projectKeyError === undefined &&\n        projectNameError === undefined &&\n        projectKey.length > 0 &&\n        projectName.length > 0 &&\n        (!isSonarCloud() || selectedOrganization)\n    );\n  }\n\n  getInitialSelectedOrganization = (props: Props) => {\n    if (props.organization) {\n      return this.getOrganization(props.organization);\n    } else if (props.userOrganizations && props.userOrganizations.length === 1) {\n      return props.userOrganizations[0];\n    } else {\n      return undefined;\n    }\n  };\n\n  getOrganization = (organizationKey: string) => {\n    return (\n      this.props.userOrganizations &&\n      this.props.userOrganizations.find(({ key }: T.Organization) => key === organizationKey)\n    );\n  };\n\n  handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { state } = this;\n    if (this.canSubmit(state)) {\n      this.setState({ submitting: true });\n      createProject({\n        project: state.projectKey,\n        name: (state.projectName || state.projectKey).trim(),\n        organization: state.selectedOrganization && state.selectedOrganization.key,\n        visibility: this.state.selectedVisibility\n      }).then(\n        ({ project }) => this.props.onProjectCreate([project.key]),\n        () => {\n          if (this.mounted) {\n            this.setState({ submitting: false });\n          }\n        }\n      );\n    }\n  };\n\n  handleOrganizationSelect = ({ key }: T.Organization) => {\n    const selectedOrganization = this.getOrganization(key);\n    let { selectedVisibility } = this.state;\n\n    if (selectedVisibility === undefined) {\n      selectedVisibility = this.canChoosePrivate(selectedOrganization) ? 'private' : 'public';\n    }\n\n    this.setState({\n      selectedOrganization,\n      selectedVisibility\n    });\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.fetchMyOrganizations!().then(\n      () => {\n        this.setState(prevState => {\n          if (prevState.selectedOrganization) {\n            const selectedOrganization = this.getOrganization(prevState.selectedOrganization.key);\n            return {\n              selectedOrganization\n            };\n          }\n          return null;\n        });\n      },\n      () => {}\n    );\n  };\n\n  handleProjectKeyChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const projectKey = event.currentTarget.value || '';\n    const projectKeyError = this.validateKey(projectKey);\n\n    this.setState(prevState => {\n      const projectName = prevState.projectNameChanged ? prevState.projectName : projectKey;\n      return {\n        projectKey,\n        projectKeyError,\n        projectName,\n        projectNameError: this.validateName(projectName),\n        touched: true,\n        validating: projectKeyError === undefined\n      };\n    });\n\n    if (projectKeyError === undefined) {\n      this.checkFreeKey(projectKey);\n    }\n  };\n\n  handleProjectNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const projectName = event.currentTarget.value;\n    this.setState({\n      projectName,\n      projectNameChanged: true,\n      projectNameError: this.validateName(projectName)\n    });\n  };\n\n  handleVisibilityChange = (selectedVisibility: T.Visibility) => {\n    this.setState({ selectedVisibility });\n  };\n\n  validateKey = (projectKey: string) => {\n    return projectKey.length > 400 || !/^[\\w-.:]*[a-zA-Z]+[\\w-.:]*$/.test(projectKey)\n      ? translate('onboarding.create_project.project_key.error')\n      : undefined;\n  };\n\n  validateName = (projectName: string) => {\n    return projectName.length === 0 || projectName.length > 255\n      ? translate('onboarding.create_project.display_name.error')\n      : undefined;\n  };\n\n  render() {\n    const {\n      projectKey,\n      projectKeyError,\n      projectName,\n      projectNameError,\n      selectedOrganization,\n      submitting,\n      touched,\n      validating\n    } = this.state;\n    const projectKeyIsInvalid = touched && projectKeyError !== undefined;\n    const projectKeyIsValid = touched && !validating && projectKeyError === undefined;\n    const projectNameIsInvalid = touched && projectNameError !== undefined;\n    const projectNameIsValid = touched && projectNameError === undefined;\n    const canChoosePrivate = this.canChoosePrivate(selectedOrganization);\n\n    return (\n      <div className=\"create-project\">\n        <div className=\"flex-1 huge-spacer-right\">\n          <form className=\"manual-project-create\" onSubmit={this.handleFormSubmit}>\n            {isSonarCloud() && this.props.userOrganizations && (\n              <OrganizationInput\n                onChange={this.handleOrganizationSelect}\n                organization={selectedOrganization ? selectedOrganization.key : ''}\n                organizations={this.props.userOrganizations}\n              />\n            )}\n\n            <ValidationInput\n              className=\"form-field\"\n              description={translate('onboarding.create_project.project_key.description')}\n              error={projectKeyError}\n              help={translate('onboarding.create_project.project_key.help')}\n              id=\"project-key\"\n              isInvalid={projectKeyIsInvalid}\n              isValid={projectKeyIsValid}\n              label={translate('onboarding.create_project.project_key')}\n              required={true}>\n              <input\n                autoFocus={true}\n                className={classNames('input-super-large', {\n                  'is-invalid': projectKeyIsInvalid,\n                  'is-valid': projectKeyIsValid\n                })}\n                id=\"project-key\"\n                maxLength={400}\n                minLength={1}\n                onChange={this.handleProjectKeyChange}\n                type=\"text\"\n                value={projectKey}\n              />\n            </ValidationInput>\n\n            <ValidationInput\n              className=\"form-field\"\n              description={translate('onboarding.create_project.display_name.description')}\n              error={projectNameError}\n              help={translate('onboarding.create_project.display_name.help')}\n              id=\"project-name\"\n              isInvalid={projectNameIsInvalid}\n              isValid={projectNameIsValid}\n              label={translate('onboarding.create_project.display_name')}\n              required={true}>\n              <input\n                className={classNames('input-super-large', {\n                  'is-invalid': projectNameIsInvalid,\n                  'is-valid': projectNameIsValid\n                })}\n                id=\"project-name\"\n                maxLength={255}\n                minLength={1}\n                onChange={this.handleProjectNameChange}\n                type=\"text\"\n                value={projectName}\n              />\n            </ValidationInput>\n\n            {isSonarCloud() && selectedOrganization && (\n              <div\n                className={classNames('visibility-select-wrapper', {\n                  open: Boolean(this.state.selectedOrganization)\n                })}>\n                <VisibilitySelector\n                  canTurnToPrivate={canChoosePrivate}\n                  onChange={this.handleVisibilityChange}\n                  showDetails={true}\n                  visibility={canChoosePrivate ? this.state.selectedVisibility : 'public'}\n                />\n              </div>\n            )}\n\n            <SubmitButton disabled={!this.canSubmit(this.state) || submitting}>\n              {translate('set_up')}\n            </SubmitButton>\n            <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n          </form>\n        </div>\n\n        {isSonarCloud() && selectedOrganization && (\n          <div className=\"create-project-side-sticky\">\n            <UpgradeOrganizationBox\n              className={classNames('animated', { open: !canChoosePrivate })}\n              onOrganizationUpgrade={this.handleOrganizationUpgrade}\n              organization={selectedOrganization}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport Tabs from 'sonar-ui-common/components/controls/Tabs';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addWhitePageClass, removeWhitePageClass } from 'sonar-ui-common/helpers/pages';\nimport { getAlmAppInfo } from '../../../api/alm-integration';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { withUserOrganizations } from '../../../components/hoc/withUserOrganizations';\nimport { hasAdvancedALMIntegration } from '../../../helpers/almIntegrations';\nimport { getOrganizationUrl, getProjectUrl } from '../../../helpers/urls';\nimport { skipOnboarding } from '../../../store/users';\nimport AutoProjectCreate from './AutoProjectCreate';\nimport ManualProjectCreate from './ManualProjectCreate';\nimport './style.css';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n  fetchMyOrganizations: () => Promise<void>;\n  skipOnboarding: () => void;\n  userOrganizations: T.Organization[];\n}\n\ninterface State {\n  almApplication?: T.AlmApplication;\n  loading: boolean;\n}\n\ntype TabKeys = 'auto' | 'manual';\n\ninterface LocationState {\n  organization?: string;\n  tab?: TabKeys;\n}\n\nexport class CreateProjectPageSonarCloud extends React.PureComponent<\n  Props & WithRouterProps,\n  State\n> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (hasAdvancedALMIntegration(this.props.currentUser)) {\n      this.fetchAlmApplication();\n    } else {\n      this.setState({ loading: false });\n    }\n    addWhitePageClass();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeWhitePageClass();\n  }\n\n  handleProjectCreate = (projectKeys: string[], organization?: string) => {\n    this.props.skipOnboarding();\n    if (projectKeys.length > 1) {\n      this.props.router.push({\n        pathname: (organization ? getOrganizationUrl(organization) : '') + '/projects'\n      });\n    } else if (projectKeys.length === 1) {\n      this.props.router.push(getProjectUrl(projectKeys[0]));\n    }\n  };\n\n  fetchAlmApplication = () => {\n    return getAlmAppInfo().then(\n      ({ application }) => {\n        if (this.mounted) {\n          this.setState({ almApplication: application, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  onTabChange = (tab: TabKeys) => {\n    this.updateUrl({ tab });\n  };\n\n  updateUrl = (state: Partial<LocationState> = {}) => {\n    this.props.router.replace({\n      pathname: this.props.location.pathname,\n      query: this.props.location.query,\n      state: { ...(this.props.location.state || {}), ...state }\n    });\n  };\n\n  render() {\n    const { currentUser, location, userOrganizations } = this.props;\n    const { almApplication, loading } = this.state;\n    const state: LocationState = location.state || {};\n    const header = translate('onboarding.create_project.header');\n    const showManualTab = state.tab === 'manual';\n\n    return (\n      <>\n        <Helmet title={header} titleTemplate=\"%s\" />\n        <div className=\"page page-limited huge-spacer-top huge-spacer-bottom\">\n          <header className=\"page-header huge-spacer-bottom\">\n            <h1 className=\"page-title huge\">\n              <strong>{header}</strong>\n            </h1>\n          </header>\n          {loading ? (\n            <DeferredSpinner />\n          ) : (\n            <>\n              {almApplication && (\n                <Tabs<TabKeys>\n                  onChange={this.onTabChange}\n                  selected={state.tab || 'auto'}\n                  tabs={[\n                    {\n                      key: 'auto',\n                      node: translate('onboarding.create_project.select_repositories')\n                    },\n                    { key: 'manual', node: translate('onboarding.create_project.setup_manually') }\n                  ]}\n                />\n              )}\n\n              {showManualTab || !almApplication ? (\n                <ManualProjectCreate\n                  currentUser={currentUser}\n                  fetchMyOrganizations={this.props.fetchMyOrganizations}\n                  onProjectCreate={this.handleProjectCreate}\n                  organization={state.organization}\n                  userOrganizations={userOrganizations.filter(\n                    ({ actions = {} }) => actions.provision\n                  )}\n                />\n              ) : (\n                <AutoProjectCreate\n                  almApplication={almApplication}\n                  boundOrganizations={userOrganizations.filter(\n                    ({ alm, actions = {} }) => alm && actions.provision\n                  )}\n                  onOrganizationUpgrade={this.props.fetchMyOrganizations}\n                  onProjectCreate={this.handleProjectCreate}\n                  organization={state.organization}\n                />\n              )}\n            </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = { skipOnboarding };\n\nexport default whenLoggedIn(\n  withUserOrganizations(\n    connect(\n      null,\n      mapDispatchToProps\n    )(CreateProjectPageSonarCloud)\n  )\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addWhitePageClass, removeWhitePageClass } from 'sonar-ui-common/helpers/pages';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport ManualProjectCreate from './ManualProjectCreate';\nimport './style.css';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n}\n\nexport class CreateProjectPageSonarQube extends React.PureComponent<Props & WithRouterProps> {\n  componentDidMount() {\n    addWhitePageClass();\n  }\n\n  componentWillUnmount() {\n    removeWhitePageClass();\n  }\n\n  handleProjectCreate = (projectKeys: string[]) => {\n    if (projectKeys.length === 1) {\n      this.props.router.push(getProjectUrl(projectKeys[0]));\n    }\n  };\n\n  render() {\n    const { currentUser } = this.props;\n    const header = translate('my_account.create_new.TRK');\n    return (\n      <>\n        <Helmet title={header} titleTemplate=\"%s\" />\n        <div className=\"page page-limited huge-spacer-top huge-spacer-bottom\">\n          <header className=\"page-header bordered-bottom big-spacer-bottom\">\n            <h1 className=\"page-title huge big-spacer-bottom\">\n              <strong>{header}</strong>\n            </h1>\n          </header>\n          <ManualProjectCreate\n            currentUser={currentUser}\n            onProjectCreate={this.handleProjectCreate}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default whenLoggedIn(CreateProjectPageSonarQube);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport A11ySkipTarget from '../../../app/components/a11y/A11ySkipTarget';\nimport { isSonarCloud } from '../../../helpers/system';\nimport CreateProjectPageSonarCloud from './CreateProjectPageSonarCloud';\nimport CreateProjectPageSonarQube from './CreateProjectPageSonarQube';\n\nexport default function CreateProjectPage(props: WithRouterProps) {\n  return (\n    <>\n      <A11ySkipTarget anchor=\"create_project_main\" />\n      {isSonarCloud() ? (\n        <CreateProjectPageSonarCloud {...props} />\n      ) : (\n        <CreateProjectPageSonarQube {...props} />\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function getAlmMembersUrl(key: string, url: string): string {\n  if (!url.endsWith('/')) {\n    url += '/';\n  }\n  if (isGithub(key)) {\n    return url.replace('github.com/', 'github.com/orgs/') + 'people';\n  }\n  return url + 'profile/members';\n}\n\nexport function getUserAlmKey(user: T.CurrentUser) {\n  return isLoggedIn(user) && user.externalProvider\n    ? sanitizeAlmId(user.externalProvider)\n    : undefined;\n}\n\nexport function hasAdvancedALMIntegration(user: T.CurrentUser) {\n  return (\n    isLoggedIn(user) && (isBitbucket(user.externalProvider) || isGithub(user.externalProvider))\n  );\n}\n\nexport function isBitbucket(almKey?: string): boolean {\n  return almKey ? almKey.startsWith('bitbucket') : false;\n}\n\nexport function isGithub(almKey?: string): boolean {\n  return almKey === 'github';\n}\n\nexport function isVSTS(almKey?: string): boolean {\n  return almKey === 'microsoft';\n}\n\nexport function sanitizeAlmId(almKey: string) {\n  if (isBitbucket(almKey)) {\n    return 'bitbucket';\n  }\n  return almKey;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { getExtensionFromCache } from './extensionsHandler';\n\nlet librariesExposed = false;\n\nexport function installScript(url: string, target: 'body' | 'head' = 'body'): Promise<any> {\n  return new Promise(resolve => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = `${getBaseUrl()}${url}`;\n    scriptTag.onload = resolve;\n    document.getElementsByTagName(target)[0].appendChild(scriptTag);\n  });\n}\n\nexport async function getExtensionStart(key: string) {\n  const fromCache = getExtensionFromCache(key);\n  if (fromCache) {\n    return Promise.resolve(fromCache);\n  }\n\n  if (!librariesExposed) {\n    // Async import allows to reduce initial vendor bundle size\n    const exposeLibraries = (await import('../app/components/extensions/exposeLibraries')).default;\n    exposeLibraries();\n    librariesExposed = true;\n  }\n\n  await installScript(`/static/${key}.js`);\n\n  const start = getExtensionFromCache(key);\n  if (start) {\n    return start;\n  }\n  return Promise.reject();\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { memoize } from 'lodash';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { cleanQuery, parseAsOptionalString, serializeString } from 'sonar-ui-common/helpers/query';\nimport { decodeJwt } from 'sonar-ui-common/helpers/strings';\nimport { isBitbucket, isGithub } from '../../../helpers/almIntegrations';\n\nexport const ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP =\n  'sonarcloud.import_org.binding_in_progress';\n\nexport const ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP =\n  'sonarcloud.import_org.redirect_to_projects';\n\nexport const BIND_ORGANIZATION_KEY = 'sonarcloud.bind_org.key';\n\nexport const BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP = 'sonarcloud.bind_org.redirect_to_org';\n\nexport enum Step {\n  OrganizationDetails,\n  Plan\n}\n\nexport function formatPrice(price?: number, noSign?: boolean) {\n  const priceFormatted = formatMeasure(price, 'FLOAT')\n    .replace(/[.|,]0$/, '')\n    .replace(/([.|,]\\d)$/, '$10');\n  return noSign ? priceFormatted : translateWithParameters('billing.price_format', priceFormatted);\n}\n\nexport interface Query {\n  almInstallId?: string;\n  almKey?: string;\n}\n\nexport const parseQuery = memoize(\n  (urlQuery: T.RawQuery = {}): Query => {\n    let almInstallId = undefined;\n    let almKey = undefined;\n\n    if (urlQuery['installation_id']) {\n      almKey = 'github';\n      almInstallId = parseAsOptionalString(urlQuery['installation_id']);\n    } else if (urlQuery['clientKey']) {\n      almKey = 'bitbucket';\n      almInstallId = parseAsOptionalString(urlQuery['clientKey']);\n    } else if (urlQuery['jwt']) {\n      const jwt = decodeJwt(urlQuery['jwt']);\n      if (jwt && jwt.iss) {\n        almKey = 'bitbucket';\n        almInstallId = jwt.iss;\n      }\n    }\n    return { almInstallId, almKey };\n  }\n);\n\nexport const serializeQuery = (query: Query): T.RawQuery =>\n  cleanQuery({\n    installation_id: isGithub(query.almKey) ? serializeString(query.almInstallId) : undefined,\n    clientKey: isBitbucket(query.almKey) ? serializeString(query.almInstallId) : undefined\n  });\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport handleRequiredAuthentication from 'sonar-ui-common/helpers/handleRequiredAuthentication';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getWrappedDisplayName } from './utils';\nimport { withCurrentUser } from './withCurrentUser';\n\nexport function whenLoggedIn<P>(WrappedComponent: React.ComponentType<P>) {\n  class Wrapper extends React.Component<P & { currentUser: T.CurrentUser }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'whenLoggedIn');\n\n    componentDidMount() {\n      if (!isLoggedIn(this.props.currentUser)) {\n        handleRequiredAuthentication();\n      }\n    }\n\n    render() {\n      if (isLoggedIn(this.props.currentUser)) {\n        return <WrappedComponent {...this.props} />;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  return withCurrentUser(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function isPaidOrganization(organization: T.Organization | undefined): boolean {\n  return Boolean(organization && organization.subscription === 'PAID');\n}\n\nexport function hasPrivateAccess(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return (\n    !isPaidOrganization(organization) ||\n    isCurrentUserMemberOf(currentUser, organization, userOrganizations)\n  );\n}\n\nexport function isCurrentUserMemberOf(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return Boolean(\n    organization &&\n      isLoggedIn(currentUser) &&\n      ((organization.actions && organization.actions.admin) ||\n        userOrganizations.some(org => org.key === organization.key))\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport {\n  getCorsJSON,\n  getJSON,\n  post,\n  postJSON,\n  requestTryAndRepeatUntil\n} from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { AlmLanguagesStats } from '../apps/tutorials/analyzeProject/utils';\n\nexport function bindAlmOrganization(data: { installationId: string; organization: string }) {\n  return post('/api/alm_integration/bind_organization', data).catch(throwGlobalError);\n}\n\nexport function getAlmAppInfo(): Promise<{ application: T.AlmApplication }> {\n  return getJSON('/api/alm_integration/show_app_info').catch(throwGlobalError);\n}\n\nexport interface GetAlmOrganizationResponse {\n  almOrganization: T.AlmOrganization;\n  boundOrganization?: T.OrganizationBase;\n}\n\nexport function getAlmOrganization(data: {\n  installationId: string;\n}): Promise<GetAlmOrganizationResponse> {\n  return requestTryAndRepeatUntil(\n    () => getJSON('/api/alm_integration/show_organization', data),\n    { max: 25, slowThreshold: 20 },\n    () => true,\n    [404]\n  )\n    .catch(throwGlobalError)\n    .then(({ almOrganization, boundOrganization }) => ({\n      almOrganization: {\n        ...almOrganization,\n        name: almOrganization.name || almOrganization.key\n      },\n      boundOrganization\n    }));\n}\n\nexport function getRepositories(data: {\n  organization: string;\n}): Promise<{ repositories: T.AlmRepository[] }> {\n  return getJSON('/api/alm_integration/list_repositories', data).catch(throwGlobalError);\n}\n\nexport function listUnboundApplications(): Promise<T.AlmUnboundApplication[]> {\n  return getJSON('/api/alm_integration/list_unbound_applications').then(\n    ({ applications }) =>\n      applications.map((app: T.AlmUnboundApplication) => ({ ...app, name: app.name || app.key })),\n    throwGlobalError\n  );\n}\n\nexport function provisionProject(data: {\n  installationKeys: string[];\n  organization: string;\n}): Promise<{ projects: Array<{ projectKey: string }> }> {\n  return postJSON('/api/alm_integration/provision_projects', {\n    ...data,\n    installationKeys: data.installationKeys.join(',')\n  }).catch(throwGlobalError);\n}\n\nexport function getGithubLanguages(url: string): Promise<AlmLanguagesStats> {\n  // We don't want to throwGlobalError\n  const apiUrl = url.replace('https://github.com/', 'https://api.github.com/repos/');\n  return getCorsJSON(`${apiUrl}/languages`);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\n\nconst TRIAL_DURATION_DAYS = 14;\n\nexport default function UpgradeOrganizationAdvantages() {\n  return (\n    <ul className=\"note\">\n      <Advantage>{translate('billing.upgrade_box.unlimited_private_projects')}</Advantage>\n      <Advantage>{translate('billing.upgrade_box.strict_control_private_data')}</Advantage>\n      <Advantage>{translate('billing.upgrade_box.cancel_anytime')}</Advantage>\n      <Advantage>\n        <strong>\n          {translateWithParameters('billing.upgrade_box.free_trial_x', TRIAL_DURATION_DAYS)}\n        </strong>\n      </Advantage>\n    </ul>\n  );\n}\n\nexport function Advantage({ children }: { children: React.ReactNode }) {\n  return (\n    <li className=\"display-flex-center little-spacer-bottom\">\n      <CheckIcon className=\"spacer-right\" fill={colors.lightGreen} />\n      {children}\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getSubscriptionPlans(): Promise<T.SubscriptionPlan[]> {\n  return getJSON('/api/billing/show_subscription_plans').then(\n    ({ subscriptionPlans }) => subscriptionPlans,\n    throwGlobalError\n  );\n}\n\nexport function giveDowngradeFeedback(data: {\n  organization: string;\n  feedback: string;\n  additionalFeedback?: string;\n}): Promise<void> {\n  return post('/api/billing/send_feedback', data);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMyOrganizations } from '../../apps/account/organizations/actions';\nimport { getMyOrganizations, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\ninterface OwnProps {\n  fetchMyOrganizations: () => Promise<void>;\n  userOrganizations: T.Organization[];\n}\n\nexport function withUserOrganizations<P>(\n  WrappedComponent: React.ComponentType<P & Partial<OwnProps>>\n) {\n  class Wrapper extends React.Component<P & OwnProps> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withUserOrganizations');\n\n    componentDidMount() {\n      this.props.fetchMyOrganizations();\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  const mapDispatchToProps = { fetchMyOrganizations: fetchMyOrganizations as any };\n\n  function mapStateToProps(state: Store) {\n    return { userOrganizations: getMyOrganizations(state) };\n  }\n\n  return connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface ChildrenProps {\n  onSubmit: React.FormEventHandler;\n  processingUpgrade: boolean;\n  renderFormFields: () => React.ReactNode;\n  renderNextCharge: (className?: string) => React.ReactNode;\n  renderRecap: () => React.ReactNode;\n  renderSubmitButton: (submitText?: string) => React.ReactNode;\n  renderSubmitGroup: (submitText?: string) => React.ReactNode;\n}\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  initialCountry?: string;\n  currentUser: T.CurrentUser;\n  onCommit: () => void | Promise<void>;\n  onFailToUpgrade?: () => void;\n  organizationKey: string | (() => Promise<string>);\n  subscriptionPlans: T.SubscriptionPlan[];\n}\n\nexport default class BillingFormShim extends React.Component<Props> {\n  render() {\n    const { BillingForm } = (window as any).SonarBilling;\n    return <BillingForm {...this.props} />;\n  }\n}\n"],"sourceRoot":""}