{"version":3,"sources":["webpack:///./src/main/js/apps/projectActivity/components/EventInner.tsx","webpack:///./src/main/js/apps/projectActivity/components/forms/ChangeEventForm.tsx","webpack:///./src/main/js/apps/projectActivity/components/forms/RemoveEventForm.tsx","webpack:///./src/main/js/apps/projectActivity/components/Event.tsx","webpack:///./src/main/js/apps/projectActivity/components/Events.tsx","webpack:///./src/main/js/apps/projectBaseline/styles.css?3c1d","webpack:///./src/main/js/apps/projectBaseline/styles.css","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingAnalysis.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BranchAnalysisList.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BranchBaselineSettingModal.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BranchList.tsx","webpack:///./src/main/js/apps/projectBaseline/components/ProjectBaselineSelector.tsx","webpack:///./src/main/js/apps/projectBaseline/components/App.tsx","webpack:///./src/main/js/apps/projectBaseline/components/AppContainer.ts","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/intl/DateFormatter.tsx","webpack:///./src/main/js/components/intl/DateTimeFormatter.tsx","webpack:///./src/main/js/apps/projectActivity/utils.ts","webpack:///./src/main/js/components/intl/TimeFormatter.tsx","webpack:///./src/main/js/components/icons-components/BranchIcon.tsx","webpack:///./src/main/js/app/components/ComponentContext.tsx","webpack:///./src/main/js/api/projectActivity.ts","webpack:///./src/main/js/apps/projectActivity/components/DefinitionChangeEventInner.tsx","webpack:///./src/main/js/apps/projectActivity/components/RichQualityGateEventInner.tsx","webpack:///./src/main/js/api/newCodePeriod.ts","webpack:///./src/main/js/apps/projectBaseline/utils.ts","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingDays.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingPreviousVersion.tsx"],"names":["EventInner","_ref","event","Object","RichQualityGateEventInner","index_js_exposed","DefinitionChangeEventInner","ComponentContext","Consumer","_ref2","branchLike","className","ProjectEventIcon_default","a","classnames","category","l10n","title","description","name","ChangeEventForm_ChangeEventForm","[object Object]","props","super","this","changeInput","setState","target","value","handleSubmit","changeEvent","key","state","ConfirmModal_default","confirmButtonText","confirmDisable","header","onClose","onConfirm","size","autoFocus","onChange","type","RemoveEventForm_RemoveEventForm","deleteEvent","analysis","isDestructive","removeEventQuestion","Event_Event","mounted","changing","deleting","startChanging","stopChanging","startDeleting","stopDeleting","_this$props","canAdmin","isOther","isVersion","canChange","canDelete","isFirst","showActions","Tooltip_default","overlay","buttons","onClick","concat","Events","sortedEvents","sortBy_default","events","map","content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","BaselineSettingAnalysis","disabled","onSelect","selected","RadioCard_default","BranchAnalysisList_BranchAnalysisList","badges","analyses","loading","range","scroll","handleScroll","e","currentTarget","updateScroll","scrollTop","registerBadgeNode","version","el","getAttribute","setAttribute","String","offsetTop","shouldStick","badge","Number","handleRangeChange","fetchAnalyses","rootNodeRef","throttle_default","selectedNode","document","querySelector","current","scrolling","parent","bottomOffset","initial","arguments","length","branch","component","projectActivity","project","from","dates","date_fns","Date","then","result","find","assign","date","scrollToSelected","label","_this$state","byVersionByDay","projectActivity_utils","customMetrics","graph","hasFilteredData","keys","byDay","Select_default","autoBlur","clearable","getRangeOptions","searchable","onScroll","ref","DeferredSpinner_default","idx","days","first","sticky","mouseEnterDelay","day","data-day","DateFormatter","long","data-date","valueOf","onSelectAnalysis","TimeFormatter","formattedTime","dateTime","toISOString","Promise","resolve","is-checked","BranchBaselineSettingModal_BranchBaselineSettingModal","preventDefault","analysisDate","utils","saving","api_newCodePeriod","effectiveValue","requestClose","handleSelectAnalysis","handleSelectDays","handleSelectSetting","getValueFromProps","newCodePeriod","_this$state2","currentSetting","currentSettingValue","_validateSetting","isChanged","isValid","Modal_default","contentLabel","onRequestClose","onSubmit","role","BaselineSettingPreviousVersion","isDefault","BaselineSettingDays","onChangeDays","BranchList_BranchList","branches","updateBranchNewCodePeriod","newSetting","updated","b","slice","openEditModal","editedBranch","closeEditModal","fetchBranches","branchLikes","helpers_branches","filter","sortedBranches","sortAndFilterBranches","branchSettings","newCodePeriods","ncp","inherited","branchesWithBaseline","branchKey","_newCodePeriod$type","DateTimeFormatter","BranchIcon","isMain","renderNewCodePeriodSetting","ActionsDropdown_default","ActionsDropdown","resetToDefault","ProjectBaselineSelector","branchesEnabled","generalSetting","overrideGeneralSetting","Radio_default","checked","onCheck","onToggleSpecificSetting","setting","renderGeneralSetting","onSelectSetting","onSelectDays","invisible","onCancel","DEFAULT_GENERAL_SETTING","__webpack_exports__","es","rootReducer","resetSetting","handleCancel","_ref$generalSetting","getUpdatedState","handleToggleSpecificSetting","fetchLeakPeriodSetting","params","defaultDays","Boolean","all","_ref3","_slicedToArray","index_es","defaultMessage","id","values","link","react_router_es","to","Suggestions","suggestions","renderHeader","inheritedSetting","d","react__WEBPACK_IMPORTED_MODULE_0__","_SuggestionsContext__WEBPACK_IMPORTED_MODULE_1__","addSuggestions","removeSuggestions","SuggestionsInner","prevProps","longFormatterOption","react_intl__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","formatterOption","year","month","children","hour","minute","EVENT_TYPES","APPLICATION_EVENT_TYPES","DEFAULT_GRAPH","GRAPH_TYPES","GRAPHS_METRICS_DISPLAYED","issues","coverage","duplications","GRAPHS_METRICS","PROJECT_ACTIVITY_GRAPH","PROJECT_ACTIVITY_GRAPH_CUSTOM","activityQueryChanged","prevQuery","nextQuery","datesQueryChanged","customMetricsChanged","lodash_isEqual__WEBPACK_IMPORTED_MODULE_1___default","hasDataValues","serie","data","some","point","y","hasHistoryData","series","hasHistoryDataValue","historyQueryChanged","isCustomGraph","selectedDateQueryChanged","selectedDate","generateSeries","measuresHistory","metrics","displayedMetrics","lodash_sortBy__WEBPACK_IMPORTED_MODULE_0___default","measure","indexOf","metric","uncoveredLines","linesToCover","history","x","translatedName","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_7__","generateCoveredLinesMetric","Array","isArray","findMetric","splitSeriesInGraphs","maxGraph","maxSeries","lodash_flatMap__WEBPACK_IMPORTED_MODULE_3___default","lodash_groupBy__WEBPACK_IMPORTED_MODULE_2___default","lodash_chunk__WEBPACK_IMPORTED_MODULE_4___default","getSeriesMetricType","getAnalysesByVersionByDay","query","reduce","acc","currentVersion","versionEvent","newVersion","date_fns_start_of_day__WEBPACK_IMPORTED_MODULE_5__","sonar_ui_common_helpers_dates__WEBPACK_IMPORTED_MODULE_6__","getTime","toString","matchFilters","isAfterFrom","isBeforeTo","hasSelectedCategoryEvents","getDisplayedHistoryMetrics","getHistoryMetrics","getProjectActivityGraph","customGraphs","sonar_ui_common_helpers_storage__WEBPACK_IMPORTED_MODULE_9__","split","parseGraph","sonar_ui_common_helpers_query__WEBPACK_IMPORTED_MODULE_8__","includes","parseQuery","urlQuery","serializeQuery","serializeUrlQuery","custom_metrics","selected_date","second","_a","__rest","_helpers_branches__WEBPACK_IMPORTED_MODULE_4__","sonar_ui_common_components_icons_PullRequestIcon__WEBPACK_IMPORTED_MODULE_2___default","sonar_ui_common_components_icons_ShortLivingBranchIcon__WEBPACK_IMPORTED_MODULE_3___default","sonar_ui_common_components_icons_LongLivingBranchIcon__WEBPACK_IMPORTED_MODULE_1___default","getProjectActivity","createEvent","deleteAnalysis","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","catch","r","isDefinitionChangeEvent","classnames__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react_intl__WEBPACK_IMPORTED_MODULE_2__","react_router__WEBPACK_IMPORTED_MODULE_3__","sonar_ui_common_components_controls_buttons__WEBPACK_IMPORTED_MODULE_4__","sonar_ui_common_components_icons_DropdownIcon__WEBPACK_IMPORTED_MODULE_5__","sonar_ui_common_components_icons_DropdownIcon__WEBPACK_IMPORTED_MODULE_5___default","n","sonar_ui_common_components_icons_LongLivingBranchIcon__WEBPACK_IMPORTED_MODULE_6__","sonar_ui_common_components_icons_LongLivingBranchIcon__WEBPACK_IMPORTED_MODULE_6___default","sonar_ui_common_components_icons_ProjectEventIcon__WEBPACK_IMPORTED_MODULE_7__","sonar_ui_common_components_icons_ProjectEventIcon__WEBPACK_IMPORTED_MODULE_7___default","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_8__","sonar_ui_common_helpers_path__WEBPACK_IMPORTED_MODULE_9__","_helpers_branches__WEBPACK_IMPORTED_MODULE_10__","_helpers_urls__WEBPACK_IMPORTED_MODULE_11__","definitionChange","expanded","stopPropagation","toggleProjectsList","renderProjectLink","renderBranch","mainBranch","changeType","message","newBranch","oldBranch","turned","projects","renderProjectChange","isRichQualityGateEvent","sonar_ui_common_components_icons_ProjectEventIcon__WEBPACK_IMPORTED_MODULE_6__","sonar_ui_common_components_icons_ProjectEventIcon__WEBPACK_IMPORTED_MODULE_6___default","sonar_ui_common_components_ui_Level__WEBPACK_IMPORTED_MODULE_7__","sonar_ui_common_components_ui_Level__WEBPACK_IMPORTED_MODULE_7___default","_helpers_urls__WEBPACK_IMPORTED_MODULE_9__","qualityGate","stillFailing","status","level","small","failing","getNewCodePeriod","setNewCodePeriod","resetNewCodePeriod","listBranchesNewCodePeriod","validateDays","parsed","parseInt","isNaN","getSettingValue","validateSetting","_state$analysis","sonar_ui_common_components_controls_RadioCard__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_controls_RadioCard__WEBPACK_IMPORTED_MODULE_1___default","sonar_ui_common_components_controls_ValidationInput__WEBPACK_IMPORTED_MODULE_2__","sonar_ui_common_components_controls_ValidationInput__WEBPACK_IMPORTED_MODULE_2___default","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","error","isInvalid","required","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"js/305.m.aefabe6f.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport ProjectEventIcon from 'sonar-ui-common/components/icons/ProjectEventIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ComponentContext } from '../../../app/components/ComponentContext';\nimport { DefinitionChangeEventInner, isDefinitionChangeEvent } from './DefinitionChangeEventInner';\nimport { isRichQualityGateEvent, RichQualityGateEventInner } from './RichQualityGateEventInner';\n\ninterface Props {\n  event: T.AnalysisEvent;\n}\n\nexport default function EventInner({ event }: Props) {\n  if (isRichQualityGateEvent(event)) {\n    return <RichQualityGateEventInner event={event} />;\n  } else if (isDefinitionChangeEvent(event)) {\n    return (\n      <ComponentContext.Consumer>\n        {({ branchLike }) => <DefinitionChangeEventInner branchLike={branchLike} event={event} />}\n      </ComponentContext.Consumer>\n    );\n  } else {\n    return (\n      <div className=\"project-activity-event-inner\">\n        <div className=\"project-activity-event-inner-main\">\n          <ProjectEventIcon\n            className={classNames(\n              'project-activity-event-icon',\n              'little-spacer-right',\n              event.category\n            )}\n          />\n\n          <span className=\"project-activity-event-inner-text\">\n            <span className=\"note little-spacer-right\">\n              {translate('event.category', event.category)}:\n            </span>\n            <strong title={event.description}>{event.name}</strong>\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  changeEvent: (event: string, name: string) => Promise<void>;\n  event: T.AnalysisEvent;\n  header: string;\n  onClose: () => void;\n}\n\ninterface State {\n  name: string;\n}\n\nexport default class ChangeEventForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { name: props.event.name };\n  }\n\n  changeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: event.target.value });\n  };\n\n  handleSubmit = () => {\n    return this.props.changeEvent(this.props.event.key, this.state.name);\n  };\n\n  render() {\n    const { name } = this.state;\n    return (\n      <ConfirmModal\n        confirmButtonText={translate('change_verb')}\n        confirmDisable={!name || name === this.props.event.name}\n        header={this.props.header}\n        onClose={this.props.onClose}\n        onConfirm={this.handleSubmit}\n        size=\"small\">\n        <div className=\"modal-field\">\n          <label>{translate('name')}</label>\n          <input autoFocus={true} onChange={this.changeInput} type=\"text\" value={name} />\n        </div>\n      </ConfirmModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  analysis: string;\n  deleteEvent: (analysis: string, event: string) => Promise<void>;\n  event: T.AnalysisEvent;\n  header: string;\n  removeEventQuestion: string;\n  onClose: () => void;\n}\n\nexport default class RemoveEventForm extends React.PureComponent<Props> {\n  handleSubmit = () => {\n    return this.props.deleteEvent(this.props.analysis, this.props.event.key);\n  };\n\n  render() {\n    return (\n      <ConfirmModal\n        confirmButtonText={translate('delete')}\n        header={this.props.header}\n        isDestructive={true}\n        onClose={this.props.onClose}\n        onConfirm={this.handleSubmit}>\n        {translate(this.props.removeEventQuestion)}\n      </ConfirmModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton, EditButton } from 'sonar-ui-common/components/controls/buttons';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport EventInner from './EventInner';\nimport ChangeEventForm from './forms/ChangeEventForm';\nimport RemoveEventForm from './forms/RemoveEventForm';\n\ninterface Props {\n  analysis: string;\n  canAdmin?: boolean;\n  changeEvent: (event: string, name: string) => Promise<void>;\n  deleteEvent: (analysis: string, event: string) => Promise<void>;\n  event: T.AnalysisEvent;\n  isFirst?: boolean;\n}\n\ninterface State {\n  changing: boolean;\n  deleting: boolean;\n}\n\nexport default class Event extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { changing: false, deleting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  startChanging = () => {\n    this.setState({ changing: true });\n  };\n\n  stopChanging = () => {\n    if (this.mounted) {\n      this.setState({ changing: false });\n    }\n  };\n\n  startDeleting = () => {\n    this.setState({ deleting: true });\n  };\n\n  stopDeleting = () => {\n    if (this.mounted) {\n      this.setState({ deleting: false });\n    }\n  };\n\n  render() {\n    const { event, canAdmin } = this.props;\n    const isOther = event.category === 'OTHER';\n    const isVersion = !isOther && event.category === 'VERSION';\n    const canChange = isOther || isVersion;\n    const canDelete = isOther || (isVersion && !this.props.isFirst);\n    const showActions = canAdmin && (canChange || canDelete);\n\n    return (\n      <div className=\"project-activity-event\">\n        <EventInner event={this.props.event} />\n\n        {showActions && (\n          <div className=\"project-activity-event-actions spacer-left\">\n            {canChange && (\n              <Tooltip overlay={translate('project_activity.events.tooltip.edit')}>\n                <EditButton className=\"js-change-event button-small\" onClick={this.startChanging} />\n              </Tooltip>\n            )}\n            {canDelete && (\n              <Tooltip overlay={translate('project_activity.events.tooltip.delete')}>\n                <DeleteButton\n                  className=\"js-delete-event button-small\"\n                  onClick={this.startDeleting}\n                />\n              </Tooltip>\n            )}\n          </div>\n        )}\n\n        {this.state.changing && (\n          <ChangeEventForm\n            changeEvent={this.props.changeEvent}\n            event={this.props.event}\n            header={\n              isVersion\n                ? translate('project_activity.change_version')\n                : translate('project_activity.change_custom_event')\n            }\n            onClose={this.stopChanging}\n          />\n        )}\n\n        {this.state.deleting && (\n          <RemoveEventForm\n            analysis={this.props.analysis}\n            deleteEvent={this.props.deleteEvent}\n            event={this.props.event}\n            header={\n              isVersion\n                ? translate('project_activity.remove_version')\n                : translate('project_activity.remove_custom_event')\n            }\n            onClose={this.stopDeleting}\n            removeEventQuestion={`project_activity.${\n              isVersion ? 'remove_version' : 'remove_custom_event'\n            }.question`}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport Event from './Event';\n\ninterface Props {\n  analysis: string;\n  canAdmin?: boolean;\n  changeEvent: (event: string, name: string) => Promise<void>;\n  deleteEvent: (analysis: string, event: string) => Promise<void>;\n  events: T.AnalysisEvent[];\n  isFirst?: boolean;\n}\n\nexport default function Events(props: Props) {\n  const sortedEvents = sortBy(\n    props.events,\n    // versions last\n    event => (event.category === 'VERSION' ? 1 : 0),\n    // then the rest sorted by category\n    'category'\n  );\n\n  return (\n    <div className=\"project-activity-events\">\n      {sortedEvents.map(event => (\n        <Event\n          analysis={props.analysis}\n          canAdmin={props.canAdmin}\n          changeEvent={props.changeEvent}\n          deleteEvent={props.deleteEvent}\n          event={event}\n          isFirst={props.isFirst}\n          key={event.key}\n        />\n      ))}\n    </div>\n  );\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".project-baseline{padding:32px}.project-baseline-selector>.branch-baseline-setting-modal{max-height:60vh;padding-top:2px}.project-baseline-selector .general-setting{margin-left:7px}.branch-baseline-selector>hr{margin:0 -32px 32px}.branch-analysis-list-wrapper,.branch-baseline-setting-modal{display:flex;flex-direction:column}.branch-analysis-list-wrapper{overflow:hidden;position:relative;min-height:200px}.branch-analysis-list{overflow-y:auto;padding-left:12px;padding-right:15px;min-height:50px}.branch-analysis-list>ul{padding-top:18px}.branch-analysis-date{margin-bottom:16px;font-size:15px;font-weight:700}.branch-analysis-day{margin-top:8px;margin-bottom:24px}.branch-analysis{display:flex;justify-content:space-between;cursor:pointer;padding:8px;border-top:1px solid #e6e6e6;border-bottom:1px solid #e6e6e6}.branch-analysis+.branch-analysis{border-top:none}.branch-analysis:hover{background-color:#cae3f2}.branch-analysis>.project-activity-events{flex:1 0 50%}.branch-analysis-time{width:150px}.branch-analysis-version-badge{margin-left:-12px;padding-top:8px;padding-bottom:8px;background-color:#fff}.branch-analysis-version-badge.sticky+.branch-analysis-days-list{padding-top:36px}.branch-analysis-version-badge.first,.branch-analysis-version-badge.sticky{position:absolute;top:1px;left:13px;right:16px;padding-top:24px;z-index:1}.branch-analysis-version-badge .badge{max-width:385px;border-radius:0 2px 2px 0;font-weight:700;font-size:12px;letter-spacing:0;overflow:hidden;text-overflow:ellipsis}.project-activity-event-icon.VERSION{color:#4b9fd5}.project-activity-event-icon.QUALITY_GATE{color:#9139d4}.project-activity-event-icon.QUALITY_PROFILE{color:#ccc}.project-activity-event-icon.DEFINITION_CHANGE{color:#33a759}.project-activity-event-icon.OTHER{color:#442d1b}.invisible{visibility:hidden}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  disabled?: boolean;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingAnalysis({ disabled, onSelect, selected }: Props) {\n  return (\n    <RadioCard\n      disabled={disabled}\n      onClick={() => onSelect('SPECIFIC_ANALYSIS')}\n      selected={selected}\n      title={translate('baseline.specific_analysis')}>\n      <p className=\"big-spacer-bottom\">{translate('baseline.specific_analysis.description')}</p>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { subDays } from 'date-fns';\nimport { throttle } from 'lodash';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { parseDate, toShortNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { scrollToElement } from 'sonar-ui-common/helpers/scrolling';\nimport { getProjectActivity } from '../../../api/projectActivity';\nimport DateFormatter from '../../../components/intl/DateFormatter';\nimport TimeFormatter from '../../../components/intl/TimeFormatter';\nimport Events from '../../projectActivity/components/Events';\nimport { getAnalysesByVersionByDay } from '../../projectActivity/utils';\n\ninterface Props {\n  analysis: string;\n  branch: string;\n  component: string;\n  onSelectAnalysis: (analysis: T.ParsedAnalysis) => void;\n}\n\ninterface State {\n  analyses: T.ParsedAnalysis[];\n  loading: boolean;\n  range: number;\n  scroll: number;\n}\n\nexport default class BranchAnalysisList extends React.PureComponent<Props, State> {\n  mounted = false;\n  badges: T.Dict<HTMLDivElement> = {};\n  rootNodeRef: React.RefObject<HTMLDivElement>;\n  state: State = {\n    analyses: [],\n    loading: true,\n    range: 30,\n    scroll: 0\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.rootNodeRef = React.createRef<HTMLDivElement>();\n    this.updateScroll = throttle(this.updateScroll, 20);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchAnalyses(true);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  scrollToSelected() {\n    const selectedNode = document.querySelector('.branch-analysis.selected');\n    if (this.rootNodeRef.current && selectedNode) {\n      scrollToElement(selectedNode, { parent: this.rootNodeRef.current, bottomOffset: 40 });\n    }\n  }\n\n  fetchAnalyses(initial = false) {\n    const { analysis, branch, component } = this.props;\n    const { range } = this.state;\n    this.setState({ loading: true });\n\n    return getProjectActivity({\n      branch,\n      project: component,\n      from: range ? toShortNotSoISOString(subDays(new Date(), range)) : undefined\n    }).then((result: { analyses: T.Analysis[] }) => {\n      // If the selected analysis wasn't found in the default 30 days range, redo the search\n      if (initial && analysis && !result.analyses.find(a => a.key === analysis)) {\n        this.handleRangeChange({ value: 0 });\n        return;\n      }\n\n      this.setState(\n        {\n          analyses: result.analyses.map(analysis => ({\n            ...analysis,\n            date: parseDate(analysis.date)\n          })) as T.ParsedAnalysis[],\n          loading: false\n        },\n        () => {\n          this.scrollToSelected();\n        }\n      );\n    });\n  }\n\n  handleScroll = (e: React.SyntheticEvent<HTMLDivElement>) => {\n    if (e.currentTarget) {\n      this.updateScroll(e.currentTarget.scrollTop);\n    }\n  };\n\n  updateScroll = (scroll: number) => {\n    this.setState({ scroll });\n  };\n\n  registerBadgeNode = (version: string) => (el: HTMLDivElement) => {\n    if (el) {\n      if (!el.getAttribute('originOffsetTop')) {\n        el.setAttribute('originOffsetTop', String(el.offsetTop));\n      }\n      this.badges[version] = el;\n    }\n  };\n\n  shouldStick = (version: string) => {\n    const badge = this.badges[version];\n    return badge && Number(badge.getAttribute('originOffsetTop')) < this.state.scroll + 10;\n  };\n\n  getRangeOptions() {\n    return [\n      {\n        label: translate('baseline.branch_analyses.ranges.30days'),\n        value: 30\n      },\n      {\n        label: translate('baseline.branch_analyses.ranges.allTime'),\n        value: 0\n      }\n    ];\n  }\n\n  handleRangeChange = ({ value }: { value: number }) => {\n    this.setState({ range: value }, () => this.fetchAnalyses());\n  };\n\n  render() {\n    const { analyses, loading, range } = this.state;\n\n    const byVersionByDay = getAnalysesByVersionByDay(analyses, {\n      category: '',\n      customMetrics: [],\n      graph: '',\n      project: this.props.component\n    });\n\n    const hasFilteredData =\n      byVersionByDay.length > 1 ||\n      (byVersionByDay.length === 1 && Object.keys(byVersionByDay[0].byDay).length > 0);\n\n    return (\n      <>\n        <div className=\"spacer-bottom\">\n          {translate('baseline.analysis_from')}\n          <Select\n            autoBlur={true}\n            className=\"input-medium spacer-left\"\n            clearable={false}\n            onChange={this.handleRangeChange}\n            options={this.getRangeOptions()}\n            searchable={false}\n            value={range}\n          />\n        </div>\n        <div className=\"branch-analysis-list-wrapper\">\n          <div\n            className=\"bordered branch-analysis-list\"\n            onScroll={this.handleScroll}\n            ref={this.rootNodeRef}>\n            {loading && <DeferredSpinner className=\"big-spacer-top\" />}\n\n            {!loading && !hasFilteredData ? (\n              <div className=\"big-spacer-top big-spacer-bottom strong\">\n                {translate('baseline.no_analyses')}\n              </div>\n            ) : (\n              <ul>\n                {byVersionByDay.map((version, idx) => {\n                  const days = Object.keys(version.byDay);\n                  if (days.length <= 0) {\n                    return null;\n                  }\n                  return (\n                    <li key={version.key || 'noversion'}>\n                      {version.version && (\n                        <div\n                          className={classNames('branch-analysis-version-badge', {\n                            first: idx === 0,\n                            sticky: this.shouldStick(version.version)\n                          })}\n                          ref={this.registerBadgeNode(version.version)}>\n                          <Tooltip\n                            mouseEnterDelay={0.5}\n                            overlay={`${translate('version')} ${version.version}`}>\n                            <span className=\"badge\">{version.version}</span>\n                          </Tooltip>\n                        </div>\n                      )}\n                      <ul className=\"branch-analysis-days-list\">\n                        {days.map(day => (\n                          <li\n                            className=\"branch-analysis-day\"\n                            data-day={toShortNotSoISOString(Number(day))}\n                            key={day}>\n                            <div className=\"branch-analysis-date\">\n                              <DateFormatter date={Number(day)} long={true} />\n                            </div>\n                            <ul className=\"branch-analysis-analyses-list\">\n                              {version.byDay[day] != null &&\n                                version.byDay[day].map(analysis => (\n                                  <li\n                                    className={classNames('branch-analysis', {\n                                      selected: analysis.key === this.props.analysis\n                                    })}\n                                    data-date={parseDate(analysis.date).valueOf()}\n                                    key={analysis.key}\n                                    onClick={() => this.props.onSelectAnalysis(analysis)}>\n                                    <div className=\"branch-analysis-time spacer-right\">\n                                      <TimeFormatter date={parseDate(analysis.date)} long={false}>\n                                        {formattedTime => (\n                                          <time\n                                            className=\"text-middle\"\n                                            dateTime={parseDate(analysis.date).toISOString()}>\n                                            {formattedTime}\n                                          </time>\n                                        )}\n                                      </TimeFormatter>\n                                    </div>\n\n                                    {analysis.events.length > 0 && (\n                                      <Events\n                                        analysis={analysis.key}\n                                        changeEvent={() => Promise.resolve()}\n                                        deleteEvent={() => Promise.resolve()}\n                                        events={analysis.events}\n                                        isFirst={analyses[0].key === analysis.key}\n                                      />\n                                    )}\n\n                                    <div className=\"analysis-selection-button\">\n                                      <i\n                                        className={classNames('icon-radio', {\n                                          'is-checked': analysis.key === this.props.analysis\n                                        })}\n                                      />\n                                    </div>\n                                  </li>\n                                ))}\n                            </ul>\n                          </li>\n                        ))}\n                      </ul>\n                    </li>\n                  );\n                })}\n              </ul>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { toNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { setNewCodePeriod } from '../../../api/newCodePeriod';\nimport { getSettingValue, validateSetting } from '../utils';\nimport BaselineSettingAnalysis from './BaselineSettingAnalysis';\nimport BaselineSettingDays from './BaselineSettingDays';\nimport BaselineSettingPreviousVersion from './BaselineSettingPreviousVersion';\nimport BranchAnalysisList from './BranchAnalysisList';\n\ninterface Props {\n  branch: T.BranchWithNewCodePeriod;\n  component: string;\n  onClose: (branch?: string, newSetting?: T.NewCodePeriod) => void;\n}\n\ninterface State {\n  analysis: string;\n  analysisDate?: Date;\n  days: string;\n  saving: boolean;\n  selected?: T.NewCodePeriodSettingType;\n}\n\nexport default class BranchBaselineSettingModal extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      analysis: this.getValueFromProps('SPECIFIC_ANALYSIS') || '',\n      days: this.getValueFromProps('NUMBER_OF_DAYS') || '30',\n      saving: false,\n      selected: this.props.branch.newCodePeriod && this.props.branch.newCodePeriod.type\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getValueFromProps(type: T.NewCodePeriodSettingType) {\n    return this.props.branch.newCodePeriod && this.props.branch.newCodePeriod.type === type\n      ? this.props.branch.newCodePeriod.value\n      : null;\n  }\n\n  handleSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const { branch, component } = this.props;\n    const { analysis, analysisDate, days, selected: type } = this.state;\n\n    const value = getSettingValue({ type, analysis, days });\n\n    if (type) {\n      this.setState({ saving: true });\n      setNewCodePeriod({\n        project: component,\n        type,\n        value,\n        branch: branch.name\n      }).then(\n        () => {\n          this.setState({\n            saving: false\n          });\n          this.props.onClose(branch.name, {\n            type,\n            value,\n            effectiveValue: analysisDate && toNotSoISOString(analysisDate)\n          });\n        },\n        () => {\n          this.setState({\n            saving: false\n          });\n        }\n      );\n    }\n  };\n\n  requestClose = () => this.props.onClose();\n\n  handleSelectAnalysis = (analysis: T.ParsedAnalysis) =>\n    this.setState({ analysis: analysis.key, analysisDate: analysis.date });\n\n  handleSelectDays = (days: string) => this.setState({ days });\n\n  handleSelectSetting = (selected: T.NewCodePeriodSettingType) => this.setState({ selected });\n\n  render() {\n    const { branch } = this.props;\n    const { analysis, days, saving, selected } = this.state;\n\n    const header = translateWithParameters('baseline.new_code_period_for_branch_x', branch.name);\n\n    const currentSetting = branch.newCodePeriod && branch.newCodePeriod.type;\n    const currentSettingValue = branch.newCodePeriod && branch.newCodePeriod.value;\n\n    const { isChanged, isValid } = validateSetting({\n      analysis,\n      currentSetting,\n      currentSettingValue,\n      days,\n      selected\n    });\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.requestClose} size=\"large\">\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body modal-container branch-baseline-setting-modal\">\n            <div className=\"display-flex-row huge-spacer-bottom\" role=\"radiogroup\">\n              <BaselineSettingPreviousVersion\n                isDefault={false}\n                onSelect={this.handleSelectSetting}\n                selected={selected === 'PREVIOUS_VERSION'}\n              />\n              <BaselineSettingDays\n                days={days}\n                isChanged={isChanged}\n                isValid={isValid}\n                onChangeDays={this.handleSelectDays}\n                onSelect={this.handleSelectSetting}\n                selected={selected === 'NUMBER_OF_DAYS'}\n              />\n              <BaselineSettingAnalysis\n                onSelect={this.handleSelectSetting}\n                selected={selected === 'SPECIFIC_ANALYSIS'}\n              />\n            </div>\n            {selected === 'SPECIFIC_ANALYSIS' && (\n              <BranchAnalysisList\n                analysis={analysis}\n                branch={branch.name}\n                component={this.props.component}\n                onSelectAnalysis={this.handleSelectAnalysis}\n              />\n            )}\n          </div>\n          <footer className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={saving} />\n            <SubmitButton disabled={!isChanged || saving || !isValid}>\n              {translate('save')}\n            </SubmitButton>\n            <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { listBranchesNewCodePeriod, resetNewCodePeriod } from '../../../api/newCodePeriod';\nimport BranchIcon from '../../../components/icons-components/BranchIcon';\nimport DateTimeFormatter from '../../../components/intl/DateTimeFormatter';\nimport { isLongLivingBranch, isMainBranch, sortBranchesAsTree } from '../../../helpers/branches';\nimport BranchBaselineSettingModal from './BranchBaselineSettingModal';\n\ninterface Props {\n  branchLikes: T.BranchLike[];\n  component: T.Component;\n  inheritedSetting: T.NewCodePeriod;\n}\n\ninterface State {\n  branches: T.BranchWithNewCodePeriod[];\n  editedBranch?: T.BranchWithNewCodePeriod;\n  loading: boolean;\n}\n\nexport default class BranchList extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    branches: [],\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchBranches();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  sortAndFilterBranches(branchLikes: T.BranchLike[] = []) {\n    return sortBranchesAsTree(\n      branchLikes.filter(b => isMainBranch(b) || isLongLivingBranch(b))\n    ) as T.Branch[];\n  }\n\n  fetchBranches() {\n    const project = this.props.component.key;\n    this.setState({ loading: true });\n\n    const sortedBranches = this.sortAndFilterBranches(this.props.branchLikes);\n\n    listBranchesNewCodePeriod({ project }).then(\n      branchSettings => {\n        const newCodePeriods = branchSettings.newCodePeriods\n          ? branchSettings.newCodePeriods.filter(ncp => !ncp.inherited)\n          : [];\n\n        const branchesWithBaseline = sortedBranches.map(b => {\n          const newCodePeriod = newCodePeriods.find(ncp => ncp.branchKey === b.name);\n          if (!newCodePeriod) {\n            return b;\n          }\n          const { type = 'PREVIOUS_VERSION', value, effectiveValue } = newCodePeriod;\n          return {\n            ...b,\n            newCodePeriod: { type, value, effectiveValue }\n          };\n        });\n\n        this.setState({ branches: branchesWithBaseline, loading: false });\n      },\n      () => {\n        this.setState({ loading: false });\n      }\n    );\n  }\n\n  updateBranchNewCodePeriod = (branch: string, newSetting: T.NewCodePeriod | undefined) => {\n    const { branches } = this.state;\n\n    const updated = branches.find(b => b.name === branch);\n    if (updated) {\n      updated.newCodePeriod = newSetting;\n    }\n    return branches.slice(0);\n  };\n\n  openEditModal = (branch: T.BranchWithNewCodePeriod) => {\n    this.setState({ editedBranch: branch });\n  };\n\n  closeEditModal = (branch?: string, newSetting?: T.NewCodePeriod) => {\n    if (branch) {\n      this.setState({\n        branches: this.updateBranchNewCodePeriod(branch, newSetting),\n        editedBranch: undefined\n      });\n    } else {\n      this.setState({ editedBranch: undefined });\n    }\n  };\n\n  resetToDefault(branch: string) {\n    return resetNewCodePeriod({\n      project: this.props.component.key,\n      branch\n    }).then(() => {\n      this.setState({ branches: this.updateBranchNewCodePeriod(branch, undefined) });\n    });\n  }\n\n  renderNewCodePeriodSetting(newCodePeriod: T.NewCodePeriod) {\n    switch (newCodePeriod.type) {\n      case 'SPECIFIC_ANALYSIS':\n        return (\n          <>\n            {`${translate('baseline.specific_analysis')}: `}\n            {newCodePeriod.effectiveValue ? (\n              <DateTimeFormatter date={newCodePeriod.effectiveValue} />\n            ) : (\n              '?'\n            )}\n          </>\n        );\n      case 'NUMBER_OF_DAYS':\n        return `${translate('baseline.number_days')}: ${newCodePeriod.value}`;\n      case 'PREVIOUS_VERSION':\n        return translate('baseline.previous_version');\n      default:\n        return newCodePeriod.type;\n    }\n  }\n\n  render() {\n    const { branches, editedBranch, loading } = this.state;\n\n    if (branches.length < 1) {\n      return null;\n    }\n\n    if (loading) {\n      return <DeferredSpinner />;\n    }\n\n    return (\n      <>\n        <table className=\"data zebra\">\n          <thead>\n            <tr>\n              <th>{translate('branch_list.branch')}</th>\n              <th className=\"nowrap huge-spacer-right\">\n                {translate('branch_list.current_setting')}\n              </th>\n              <th className=\"thin nowrap\">{translate('branch_list.actions')}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {branches.map(branch => (\n              <tr key={branch.name}>\n                <td className=\"nowrap\">\n                  <BranchIcon branchLike={branch} className=\"little-spacer-right\" />\n                  {branch.name}\n                  {branch.isMain && (\n                    <div className=\"badge spacer-left\">{translate('branches.main_branch')}</div>\n                  )}\n                </td>\n                <td className=\"huge-spacer-right nowrap\">\n                  {branch.newCodePeriod\n                    ? this.renderNewCodePeriodSetting(branch.newCodePeriod)\n                    : translate('branch_list.default_setting')}\n                </td>\n                <td className=\"text-right\">\n                  <ActionsDropdown>\n                    <ActionsDropdownItem onClick={() => this.openEditModal(branch)}>\n                      {translate('edit')}\n                    </ActionsDropdownItem>\n                    {branch.newCodePeriod && (\n                      <ActionsDropdownItem onClick={() => this.resetToDefault(branch.name)}>\n                        {translate('reset_to_default')}\n                      </ActionsDropdownItem>\n                    )}\n                  </ActionsDropdown>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {editedBranch && (\n          <BranchBaselineSettingModal\n            branch={editedBranch}\n            component={this.props.component.key}\n            onClose={this.closeEditModal}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Radio from 'sonar-ui-common/components/controls/Radio';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { validateSetting } from '../utils';\nimport BaselineSettingAnalysis from './BaselineSettingAnalysis';\nimport BaselineSettingDays from './BaselineSettingDays';\nimport BaselineSettingPreviousVersion from './BaselineSettingPreviousVersion';\nimport BranchAnalysisList from './BranchAnalysisList';\n\nexport interface ProjectBaselineSelectorProps {\n  analysis?: string;\n  branchesEnabled?: boolean;\n  component: string;\n  currentSetting?: T.NewCodePeriodSettingType;\n  currentSettingValue?: string;\n  days: string;\n  generalSetting: T.NewCodePeriod;\n  onCancel: () => void;\n  onSelectAnalysis: (analysis: T.ParsedAnalysis) => void;\n  onSelectDays: (value: string) => void;\n  onSelectSetting: (value?: T.NewCodePeriodSettingType) => void;\n  onSubmit: (e: React.SyntheticEvent<HTMLFormElement>) => void;\n  onToggleSpecificSetting: (selection: boolean) => void;\n  saving: boolean;\n  selected?: T.NewCodePeriodSettingType;\n  overrideGeneralSetting: boolean;\n}\n\nfunction renderGeneralSetting(generalSetting: T.NewCodePeriod) {\n  let setting: string;\n  let description: string;\n  if (generalSetting.type === 'NUMBER_OF_DAYS') {\n    setting = `${translate('baseline.number_days')} (${translateWithParameters(\n      'duration.days',\n      generalSetting.value || '?'\n    )})`;\n    description = translate('baseline.number_days.description');\n  } else {\n    setting = translate('baseline.previous_version');\n    description = translate('baseline.previous_version.description');\n  }\n\n  return (\n    <div className=\"general-setting\">\n      <strong>{setting}</strong>: {description}\n    </div>\n  );\n}\n\nexport default function ProjectBaselineSelector(props: ProjectBaselineSelectorProps) {\n  const {\n    analysis,\n    branchesEnabled,\n    component,\n    currentSetting,\n    currentSettingValue,\n    days,\n    generalSetting,\n    saving,\n    selected,\n    overrideGeneralSetting\n  } = props;\n\n  const { isChanged, isValid } = validateSetting({\n    analysis,\n    currentSetting,\n    currentSettingValue,\n    days,\n    selected,\n    overrideGeneralSetting\n  });\n\n  return (\n    <form className=\"project-baseline-selector\" onSubmit={props.onSubmit}>\n      <div className=\"big-spacer-top spacer-bottom\" role=\"radiogroup\">\n        <Radio\n          checked={!overrideGeneralSetting}\n          className=\"big-spacer-bottom\"\n          onCheck={() => props.onToggleSpecificSetting(false)}\n          value=\"general\">\n          {translate('project_baseline.general_setting')}\n        </Radio>\n        <div className=\"big-spacer-left\">{renderGeneralSetting(generalSetting)}</div>\n\n        <Radio\n          checked={overrideGeneralSetting}\n          className=\"huge-spacer-top\"\n          onCheck={() => props.onToggleSpecificSetting(true)}\n          value=\"specific\">\n          {translate('project_baseline.specific_setting')}\n        </Radio>\n      </div>\n\n      <div className=\"big-spacer-left big-spacer-right branch-baseline-setting-modal\">\n        <div className=\"display-flex-row big-spacer-bottom\" role=\"radiogroup\">\n          <BaselineSettingPreviousVersion\n            disabled={!overrideGeneralSetting}\n            onSelect={props.onSelectSetting}\n            selected={overrideGeneralSetting && selected === 'PREVIOUS_VERSION'}\n          />\n          <BaselineSettingDays\n            days={days}\n            disabled={!overrideGeneralSetting}\n            isChanged={isChanged}\n            isValid={isValid}\n            onChangeDays={props.onSelectDays}\n            onSelect={props.onSelectSetting}\n            selected={overrideGeneralSetting && selected === 'NUMBER_OF_DAYS'}\n          />\n          {!branchesEnabled && (\n            <BaselineSettingAnalysis\n              disabled={!overrideGeneralSetting}\n              onSelect={props.onSelectSetting}\n              selected={overrideGeneralSetting && selected === 'SPECIFIC_ANALYSIS'}\n            />\n          )}\n        </div>\n        {selected === 'SPECIFIC_ANALYSIS' && (\n          <BranchAnalysisList\n            analysis={analysis || ''}\n            branch=\"master\"\n            component={component}\n            onSelectAnalysis={props.onSelectAnalysis}\n          />\n        )}\n      </div>\n      <div className={classNames('big-spacer-top', { invisible: !isChanged })}>\n        <p className=\"spacer-bottom\">{translate('baseline.next_analysis_notice')}</p>\n        <DeferredSpinner className=\"spacer-right\" loading={saving} />\n        <SubmitButton disabled={saving || !isValid || !isChanged}>{translate('save')}</SubmitButton>\n        <ResetButtonLink className=\"spacer-left\" onClick={props.onCancel}>\n          {translate('cancel')}\n        </ResetButtonLink>\n      </div>\n    </form>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getNewCodePeriod, resetNewCodePeriod, setNewCodePeriod } from '../../../api/newCodePeriod';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport '../styles.css';\nimport { getSettingValue } from '../utils';\nimport BranchList from './BranchList';\nimport ProjectBaselineSelector from './ProjectBaselineSelector';\n\ninterface Props {\n  branchLikes: T.BranchLike[];\n  branchesEnabled?: boolean;\n  canAdmin?: boolean;\n  component: T.Component;\n}\n\ninterface State {\n  analysis?: string;\n  currentSetting?: T.NewCodePeriodSettingType;\n  currentSettingValue?: string;\n  days: string;\n  generalSetting?: T.NewCodePeriod;\n  loading: boolean;\n  overrideGeneralSetting?: boolean;\n  saving: boolean;\n  selected?: T.NewCodePeriodSettingType;\n}\n\nconst DEFAULT_GENERAL_SETTING: { type: T.NewCodePeriodSettingType } = {\n  type: 'PREVIOUS_VERSION'\n};\n\nexport default class App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    days: '30',\n    loading: true,\n    saving: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchLeakPeriodSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getUpdatedState(params: {\n    currentSetting?: T.NewCodePeriodSettingType;\n    currentSettingValue?: string;\n    generalSetting: T.NewCodePeriod;\n  }) {\n    const { currentSetting, currentSettingValue, generalSetting } = params;\n\n    const defaultDays =\n      (!currentSetting && generalSetting.type === 'NUMBER_OF_DAYS' && generalSetting.value) || '30';\n\n    return {\n      loading: false,\n      currentSetting,\n      currentSettingValue,\n      generalSetting,\n      selected: currentSetting || generalSetting.type,\n      overrideGeneralSetting: Boolean(currentSetting),\n      days: (currentSetting === 'NUMBER_OF_DAYS' && currentSettingValue) || defaultDays,\n      analysis: (currentSetting === 'SPECIFIC_ANALYSIS' && currentSettingValue) || ''\n    };\n  }\n\n  fetchLeakPeriodSetting() {\n    this.setState({ loading: true });\n\n    Promise.all([\n      getNewCodePeriod(),\n      getNewCodePeriod({\n        branch: !this.props.branchesEnabled ? 'master' : undefined,\n        project: this.props.component.key\n      })\n    ]).then(\n      ([generalSetting, setting]) => {\n        if (this.mounted) {\n          if (!generalSetting.type) {\n            generalSetting = DEFAULT_GENERAL_SETTING;\n          }\n          const currentSettingValue = setting.value;\n          const currentSetting = setting.inherited ? undefined : setting.type || 'PREVIOUS_VERSION';\n\n          this.setState(\n            this.getUpdatedState({ generalSetting, currentSetting, currentSettingValue })\n          );\n        }\n      },\n      () => {\n        this.setState({ loading: false });\n      }\n    );\n  }\n\n  resetSetting = () => {\n    this.setState({ saving: true });\n    resetNewCodePeriod({ project: this.props.component.key }).then(\n      () => {\n        this.setState({\n          saving: false,\n          currentSetting: undefined,\n          selected: undefined\n        });\n      },\n      () => {\n        this.setState({ saving: false });\n      }\n    );\n  };\n\n  handleSelectAnalysis = (analysis: T.ParsedAnalysis) => this.setState({ analysis: analysis.key });\n\n  handleSelectDays = (days: string) => this.setState({ days });\n\n  handleCancel = () =>\n    this.setState(\n      ({ generalSetting = DEFAULT_GENERAL_SETTING, currentSetting, currentSettingValue }) =>\n        this.getUpdatedState({ generalSetting, currentSetting, currentSettingValue })\n    );\n\n  handleSelectSetting = (selected?: T.NewCodePeriodSettingType) => this.setState({ selected });\n\n  handleToggleSpecificSetting = (overrideGeneralSetting: boolean) =>\n    this.setState({ overrideGeneralSetting });\n\n  handleSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const { component } = this.props;\n    const { analysis, days, selected: type, overrideGeneralSetting } = this.state;\n\n    if (!overrideGeneralSetting) {\n      this.resetSetting();\n      return;\n    }\n\n    const value = getSettingValue({ type, analysis, days });\n\n    if (type) {\n      this.setState({ saving: true });\n      setNewCodePeriod({\n        project: component.key,\n        type,\n        value\n      }).then(\n        () => {\n          this.setState({\n            saving: false,\n            currentSetting: type,\n            currentSettingValue: value || undefined\n          });\n        },\n        () => {\n          this.setState({ saving: false });\n        }\n      );\n    }\n  };\n\n  renderHeader() {\n    return (\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('project_baseline.page')}</h1>\n        <p className=\"page-description\">\n          <FormattedMessage\n            defaultMessage={translate('project_baseline.page.description')}\n            id=\"project_baseline.page.description\"\n            values={{\n              link: (\n                <Link to=\"/documentation/project-administration/new-code-period/\">\n                  {translate('project_baseline.page.description.link')}\n                </Link>\n              )\n            }}\n          />\n          <br />\n          {this.props.canAdmin && (\n            <FormattedMessage\n              defaultMessage={translate('project_baseline.page.description2')}\n              id=\"project_baseline.page.description2\"\n              values={{\n                link: (\n                  <Link to=\"/admin/settings?category=new_code_period\">\n                    {translate('project_baseline.page.description2.link')}\n                  </Link>\n                )\n              }}\n            />\n          )}\n        </p>\n      </header>\n    );\n  }\n\n  render() {\n    const { branchLikes, branchesEnabled, component } = this.props;\n    const {\n      analysis,\n      currentSetting,\n      days,\n      generalSetting,\n      loading,\n      currentSettingValue,\n      overrideGeneralSetting,\n      saving,\n      selected\n    } = this.state;\n\n    return (\n      <>\n        <Suggestions suggestions=\"project_baseline\" />\n        <div className=\"page page-limited\">\n          {this.renderHeader()}\n          {loading ? (\n            <DeferredSpinner />\n          ) : (\n            <div className=\"panel-white project-baseline\">\n              {branchesEnabled && <h2>{translate('project_baseline.default_setting')}</h2>}\n\n              {generalSetting && overrideGeneralSetting !== undefined && (\n                <ProjectBaselineSelector\n                  analysis={analysis}\n                  branchesEnabled={branchesEnabled}\n                  component={component.key}\n                  currentSetting={currentSetting}\n                  currentSettingValue={currentSettingValue}\n                  days={days}\n                  generalSetting={generalSetting}\n                  onCancel={this.handleCancel}\n                  onSelectAnalysis={this.handleSelectAnalysis}\n                  onSelectDays={this.handleSelectDays}\n                  onSelectSetting={this.handleSelectSetting}\n                  onSubmit={this.handleSubmit}\n                  onToggleSpecificSetting={this.handleToggleSpecificSetting}\n                  overrideGeneralSetting={overrideGeneralSetting}\n                  saving={saving}\n                  selected={selected}\n                />\n              )}\n              {generalSetting && branchesEnabled && (\n                <div className=\"huge-spacer-top branch-baseline-selector\">\n                  <hr />\n                  <h2>{translate('project_baseline.configure_branches')}</h2>\n                  <BranchList\n                    branchLikes={branchLikes}\n                    component={component}\n                    inheritedSetting={\n                      currentSetting\n                        ? {\n                            type: currentSetting,\n                            value: currentSettingValue\n                          }\n                        : generalSetting\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { getAppState, Store } from '../../../store/rootReducer';\nimport App from './App';\n\nconst mapStateToProps = (state: Store) => ({\n  branchesEnabled: getAppState(state).branchesEnabled,\n  canAdmin: getAppState(state).canAdmin\n});\n\nexport default connect(mapStateToProps)(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { year: 'numeric', month: 'short', day: '2-digit' };\n\nexport const longFormatterOption = { year: 'numeric', month: 'long', day: 'numeric' };\n\nexport default function DateFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedDate>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n}\n\nexport const formatterOption = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric'\n};\n\nexport default function DateTimeFormatter({ children, date }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...formatterOption}>\n      {children}\n    </FormattedDate>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as startOfDay from 'date-fns/start_of_day';\nimport { chunk, flatMap, groupBy, isEqual, sortBy } from 'lodash';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\nimport { getLocalizedMetricName, translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  cleanQuery,\n  parseAsArray,\n  parseAsDate,\n  parseAsString,\n  serializeDate,\n  serializeString,\n  serializeStringArray\n} from 'sonar-ui-common/helpers/query';\nimport { get } from 'sonar-ui-common/helpers/storage';\n\nexport interface Query {\n  category: string;\n  customMetrics: string[];\n  from?: Date;\n  graph: string;\n  project: string;\n  selectedDate?: Date;\n  to?: Date;\n}\n\nexport interface Point {\n  x: Date;\n  y: number | string | undefined;\n}\n\nexport interface Serie {\n  data: Point[];\n  name: string;\n  translatedName: string;\n  type: string;\n}\n\nexport interface HistoryItem {\n  date: Date;\n  value?: string;\n}\n\nexport interface MeasureHistory {\n  metric: string;\n  history: HistoryItem[];\n}\n\nexport const EVENT_TYPES = ['VERSION', 'QUALITY_GATE', 'QUALITY_PROFILE', 'OTHER'];\nexport const APPLICATION_EVENT_TYPES = ['QUALITY_GATE', 'DEFINITION_CHANGE', 'OTHER'];\nexport const DEFAULT_GRAPH = 'issues';\nexport const GRAPH_TYPES = ['issues', 'coverage', 'duplications', 'custom'];\nexport const GRAPHS_METRICS_DISPLAYED: T.Dict<string[]> = {\n  issues: ['bugs', 'code_smells', 'vulnerabilities'],\n  coverage: ['lines_to_cover', 'uncovered_lines'],\n  duplications: ['ncloc', 'duplicated_lines']\n};\nexport const GRAPHS_METRICS: T.Dict<string[]> = {\n  issues: GRAPHS_METRICS_DISPLAYED['issues'].concat([\n    'reliability_rating',\n    'security_rating',\n    'sqale_rating'\n  ]),\n  coverage: GRAPHS_METRICS_DISPLAYED['coverage'].concat(['coverage']),\n  duplications: GRAPHS_METRICS_DISPLAYED['duplications'].concat(['duplicated_lines_density'])\n};\n\nexport const PROJECT_ACTIVITY_GRAPH = 'sonar_project_activity.graph';\nexport const PROJECT_ACTIVITY_GRAPH_CUSTOM = 'sonar_project_activity.graph.custom';\n\nexport function activityQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return prevQuery.category !== nextQuery.category || datesQueryChanged(prevQuery, nextQuery);\n}\n\nexport function customMetricsChanged(prevQuery: Query, nextQuery: Query) {\n  return !isEqual(prevQuery.customMetrics, nextQuery.customMetrics);\n}\n\nexport function datesQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return !isEqual(prevQuery.from, nextQuery.from) || !isEqual(prevQuery.to, nextQuery.to);\n}\n\nexport function hasDataValues(serie: Serie) {\n  return serie.data.some(point => Boolean(point.y || point.y === 0));\n}\n\nexport function hasHistoryData(series: Serie[]) {\n  return series.some(serie => serie.data && serie.data.length > 1);\n}\n\nexport function hasHistoryDataValue(series: Serie[]) {\n  return series.some(serie => serie.data && serie.data.length > 1 && hasDataValues(serie));\n}\n\nexport function historyQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return prevQuery.graph !== nextQuery.graph;\n}\n\nexport function isCustomGraph(graph: string) {\n  return graph === 'custom';\n}\n\nexport function selectedDateQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return !isEqual(prevQuery.selectedDate, nextQuery.selectedDate);\n}\n\nexport function generateCoveredLinesMetric(\n  uncoveredLines: MeasureHistory,\n  measuresHistory: MeasureHistory[]\n) {\n  const linesToCover = measuresHistory.find(measure => measure.metric === 'lines_to_cover');\n  return {\n    data: linesToCover\n      ? uncoveredLines.history.map((analysis, idx) => ({\n          x: analysis.date,\n          y: Number(linesToCover.history[idx].value) - Number(analysis.value)\n        }))\n      : [],\n    name: 'covered_lines',\n    translatedName: translate('project_activity.custom_metric.covered_lines'),\n    type: 'INT'\n  };\n}\n\nfunction findMetric(key: string, metrics: T.Metric[] | T.Dict<T.Metric>) {\n  if (Array.isArray(metrics)) {\n    return metrics.find(metric => metric.key === key);\n  }\n  return metrics[key];\n}\n\nexport function generateSeries(\n  measuresHistory: MeasureHistory[],\n  graph: string,\n  metrics: T.Metric[] | T.Dict<T.Metric>,\n  displayedMetrics: string[]\n): Serie[] {\n  if (displayedMetrics.length <= 0 || typeof measuresHistory === 'undefined') {\n    return [];\n  }\n  return sortBy(\n    measuresHistory\n      .filter(measure => displayedMetrics.indexOf(measure.metric) >= 0)\n      .map(measure => {\n        if (measure.metric === 'uncovered_lines' && !isCustomGraph(graph)) {\n          return generateCoveredLinesMetric(measure, measuresHistory);\n        }\n        const metric = findMetric(measure.metric, metrics);\n        return {\n          data: measure.history.map(analysis => ({\n            x: analysis.date,\n            y: metric && metric.type === 'LEVEL' ? analysis.value : Number(analysis.value)\n          })),\n          name: measure.metric,\n          translatedName: metric ? getLocalizedMetricName(metric) : measure.metric,\n          type: metric ? metric.type : 'INT'\n        };\n      }),\n    serie =>\n      displayedMetrics.indexOf(serie.name === 'covered_lines' ? 'uncovered_lines' : serie.name)\n  );\n}\n\nexport function splitSeriesInGraphs(series: Serie[], maxGraph: number, maxSeries: number) {\n  return flatMap(groupBy(series, serie => serie.type), type => chunk(type, maxSeries)).slice(\n    0,\n    maxGraph\n  );\n}\n\nexport function getSeriesMetricType(series: Serie[]) {\n  return series.length > 0 ? series[0].type : 'INT';\n}\n\ninterface AnalysesByDay {\n  byDay: T.Dict<T.ParsedAnalysis[]>;\n  version: string | null;\n  key: string | null;\n}\n\nexport function getAnalysesByVersionByDay(analyses: T.ParsedAnalysis[], query: Query) {\n  return analyses.reduce<AnalysesByDay[]>((acc, analysis) => {\n    let currentVersion = acc[acc.length - 1];\n    const versionEvent = analysis.events.find(event => event.category === 'VERSION');\n    if (versionEvent) {\n      const newVersion = { version: versionEvent.name, key: versionEvent.key, byDay: {} };\n      if (!currentVersion || Object.keys(currentVersion.byDay).length > 0) {\n        acc.push(newVersion);\n      } else {\n        acc[acc.length - 1] = newVersion;\n      }\n      currentVersion = newVersion;\n    } else if (!currentVersion) {\n      // APPs don't have version events, so let's create a fake one\n      currentVersion = { version: null, key: null, byDay: {} };\n      acc.push(currentVersion);\n    }\n\n    const day = startOfDay(parseDate(analysis.date))\n      .getTime()\n      .toString();\n\n    let matchFilters = true;\n    if (query.category || query.from || query.to) {\n      const isAfterFrom = !query.from || analysis.date >= query.from;\n      const isBeforeTo = !query.to || analysis.date <= query.to;\n      const hasSelectedCategoryEvents =\n        !query.category || analysis.events.find(event => event.category === query.category) != null;\n      matchFilters = isAfterFrom && isBeforeTo && hasSelectedCategoryEvents;\n    }\n\n    if (matchFilters) {\n      if (!currentVersion.byDay[day]) {\n        currentVersion.byDay[day] = [];\n      }\n      currentVersion.byDay[day].push(analysis);\n    }\n    return acc;\n  }, []);\n}\n\nexport function getDisplayedHistoryMetrics(graph: string, customMetrics: string[]) {\n  return isCustomGraph(graph) ? customMetrics : GRAPHS_METRICS_DISPLAYED[graph];\n}\n\nexport function getHistoryMetrics(graph: string, customMetrics: string[]) {\n  return isCustomGraph(graph) ? customMetrics : GRAPHS_METRICS[graph];\n}\n\nexport function getProjectActivityGraph(project: string) {\n  const customGraphs = get(PROJECT_ACTIVITY_GRAPH_CUSTOM, project);\n  return {\n    graph: get(PROJECT_ACTIVITY_GRAPH, project) || 'issues',\n    customGraphs: customGraphs ? customGraphs.split(',') : []\n  };\n}\n\nfunction parseGraph(value?: string) {\n  const graph = parseAsString(value);\n  return GRAPH_TYPES.includes(graph) ? graph : DEFAULT_GRAPH;\n}\n\nfunction serializeGraph(value: string) {\n  return value === DEFAULT_GRAPH ? undefined : value;\n}\n\nexport function parseQuery(urlQuery: T.RawQuery): Query {\n  return {\n    category: parseAsString(urlQuery['category']),\n    customMetrics: parseAsArray(urlQuery['custom_metrics'], parseAsString),\n    from: parseAsDate(urlQuery['from']),\n    graph: parseGraph(urlQuery['graph']),\n    project: parseAsString(urlQuery['id']),\n    to: parseAsDate(urlQuery['to']),\n    selectedDate: parseAsDate(urlQuery['selected_date'])\n  };\n}\n\nexport function serializeQuery(query: Query): T.RawQuery {\n  return cleanQuery({\n    category: serializeString(query.category),\n    from: serializeDate(query.from),\n    project: serializeString(query.project),\n    to: serializeDate(query.to)\n  });\n}\n\nexport function serializeUrlQuery(query: Query): T.RawQuery {\n  return cleanQuery({\n    category: serializeString(query.category),\n    custom_metrics: serializeStringArray(query.customMetrics),\n    from: serializeDate(query.from),\n    graph: serializeGraph(query.graph),\n    id: serializeString(query.project),\n    to: serializeDate(query.to),\n    selected_date: serializeDate(query.selectedDate)\n  });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedTime } from 'react-intl';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { hour: 'numeric', minute: 'numeric' };\n\nexport const longFormatterOption = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n\nexport default function TimeFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedTime value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedTime>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { IconProps } from 'sonar-ui-common/components/icons/Icon';\nimport LongLivingBranchIcon from 'sonar-ui-common/components/icons/LongLivingBranchIcon';\nimport PullRequestIcon from 'sonar-ui-common/components/icons/PullRequestIcon';\nimport ShortLivingBranchIcon from 'sonar-ui-common/components/icons/ShortLivingBranchIcon';\nimport { isPullRequest, isShortLivingBranch } from '../../helpers/branches';\n\ninterface Props extends IconProps {\n  branchLike: T.BranchLike;\n}\n\nexport default function BranchIcon({ branchLike, ...props }: Props) {\n  if (isPullRequest(branchLike)) {\n    return <PullRequestIcon {...props} />;\n  } else if (isShortLivingBranch(branchLike)) {\n    return <ShortLivingBranchIcon {...props} />;\n  } else {\n    return <LongLivingBranchIcon {...props} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface ComponentContextType {\n  branchLike: T.BranchLike | undefined;\n  component: T.Component | undefined;\n}\n\nexport const ComponentContext = React.createContext<ComponentContextType>({\n  branchLike: undefined,\n  component: undefined\n});\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getProjectActivity(\n  data: {\n    project: string;\n    category?: string;\n    from?: string;\n    p?: number;\n    ps?: number;\n  } & T.BranchParameters\n): Promise<{ analyses: T.Analysis[]; paging: T.Paging }> {\n  return getJSON('/api/project_analyses/search', data).catch(throwGlobalError);\n}\n\ninterface CreateEventResponse {\n  analysis: string;\n  key: string;\n  name: string;\n  category: string;\n  description?: string;\n}\n\nexport function createEvent(\n  analysis: string,\n  name: string,\n  category?: string,\n  description?: string\n): Promise<CreateEventResponse> {\n  const data: RequestData = { analysis, name };\n  if (category) {\n    data.category = category;\n  }\n  if (description) {\n    data.description = description;\n  }\n  return postJSON('/api/project_analyses/create_event', data).then(r => r.event, throwGlobalError);\n}\n\nexport function deleteEvent(event: string): Promise<void | Response> {\n  return post('/api/project_analyses/delete_event', { event }).catch(throwGlobalError);\n}\n\nexport function changeEvent(\n  event: string,\n  name?: string,\n  description?: string\n): Promise<CreateEventResponse> {\n  const data: RequestData = { event };\n  if (name) {\n    data.name = name;\n  }\n  if (description) {\n    data.description = description;\n  }\n  return postJSON('/api/project_analyses/update_event', data).then(r => r.event, throwGlobalError);\n}\n\nexport function deleteAnalysis(analysis: string): Promise<void | Response> {\n  return post('/api/project_analyses/delete', { analysis }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport LongLivingBranchIcon from 'sonar-ui-common/components/icons/LongLivingBranchIcon';\nimport ProjectEventIcon from 'sonar-ui-common/components/icons/ProjectEventIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { limitComponentName } from 'sonar-ui-common/helpers/path';\nimport { isMainBranch } from '../../../helpers/branches';\nimport { getProjectUrl } from '../../../helpers/urls';\n\nexport type DefinitionChangeEvent = T.AnalysisEvent &\n  Required<Pick<T.AnalysisEvent, 'definitionChange'>>;\n\nexport function isDefinitionChangeEvent(event: T.AnalysisEvent): event is DefinitionChangeEvent {\n  return event.category === 'DEFINITION_CHANGE' && event.definitionChange !== undefined;\n}\n\ninterface Props {\n  branchLike: T.BranchLike | undefined;\n  event: DefinitionChangeEvent;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nexport class DefinitionChangeEventInner extends React.PureComponent<Props, State> {\n  state: State = { expanded: false };\n\n  stopPropagation = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.stopPropagation();\n  };\n\n  toggleProjectsList = () => {\n    this.setState(state => ({ expanded: !state.expanded }));\n  };\n\n  renderProjectLink = (project: { key: string; name: string }, branch: string | undefined) => (\n    <Link\n      onClick={this.stopPropagation}\n      title={project.name}\n      to={getProjectUrl(project.key, branch)}>\n      {limitComponentName(project.name, 28)}\n    </Link>\n  );\n\n  renderBranch = (branch = translate('branches.main_branch')) => (\n    <span className=\"nowrap\" title={branch}>\n      <LongLivingBranchIcon className=\"little-spacer-left text-text-top\" />\n      {branch}\n    </span>\n  );\n\n  renderProjectChange(project: {\n    changeType: string;\n    key: string;\n    name: string;\n    branch?: string;\n    newBranch?: string;\n    oldBranch?: string;\n  }) {\n    const mainBranch = !this.props.branchLike || isMainBranch(this.props.branchLike);\n\n    if (project.changeType === 'ADDED') {\n      const message = mainBranch\n        ? 'event.definition_change.added'\n        : 'event.definition_change.branch_added';\n      return (\n        <div className=\"text-ellipsis\">\n          <FormattedMessage\n            defaultMessage={translate(message)}\n            id={message}\n            values={{\n              project: this.renderProjectLink(project, project.branch),\n              branch: this.renderBranch(project.branch)\n            }}\n          />\n        </div>\n      );\n    } else if (project.changeType === 'REMOVED') {\n      const message = mainBranch\n        ? 'event.definition_change.removed'\n        : 'event.definition_change.branch_removed';\n      return (\n        <div className=\"text-ellipsis\">\n          <FormattedMessage\n            defaultMessage={translate(message)}\n            id={message}\n            values={{\n              project: this.renderProjectLink(project, project.branch),\n              branch: this.renderBranch(project.branch)\n            }}\n          />\n        </div>\n      );\n    } else if (project.changeType === 'BRANCH_CHANGED') {\n      return (\n        <FormattedMessage\n          defaultMessage={translate('event.definition_change.branch_replaced')}\n          id=\"event.definition_change.branch_replaced\"\n          values={{\n            project: this.renderProjectLink(project, project.newBranch),\n            oldBranch: this.renderBranch(project.oldBranch),\n            newBranch: this.renderBranch(project.newBranch)\n          }}\n        />\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const { event } = this.props;\n    const { expanded } = this.state;\n    return (\n      <div className=\"project-activity-event-inner\">\n        <div className=\"project-activity-event-inner-main\">\n          <ProjectEventIcon\n            className={classNames(\n              'project-activity-event-icon',\n              'little-spacer-right',\n              event.category\n            )}\n          />\n\n          <div className=\"project-activity-event-inner-text flex-1\">\n            <span className=\"note little-spacer-right\">\n              {translate('event.category', event.category)}\n            </span>\n          </div>\n\n          <ResetButtonLink\n            className=\"project-activity-event-inner-more-link\"\n            onClick={this.toggleProjectsList}\n            stopPropagation={true}>\n            {expanded ? translate('hide') : translate('more')}\n            <DropdownIcon className=\"little-spacer-left\" turned={expanded} />\n          </ResetButtonLink>\n        </div>\n\n        {expanded && (\n          <ul className=\"project-activity-event-inner-more-content\">\n            {event.definitionChange.projects.map(project => (\n              <li className=\"display-flex-center little-spacer-top\" key={project.key}>\n                {this.renderProjectChange(project)}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport ProjectEventIcon from 'sonar-ui-common/components/icons/ProjectEventIcon';\nimport Level from 'sonar-ui-common/components/ui/Level';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getProjectUrl } from '../../../helpers/urls';\n\nexport type RichQualityGateEvent = T.AnalysisEvent & Required<Pick<T.AnalysisEvent, 'qualityGate'>>;\n\nexport function isRichQualityGateEvent(event: T.AnalysisEvent): event is RichQualityGateEvent {\n  return event.category === 'QUALITY_GATE' && event.qualityGate !== undefined;\n}\n\ninterface Props {\n  event: RichQualityGateEvent;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nexport class RichQualityGateEventInner extends React.PureComponent<Props, State> {\n  state: State = { expanded: false };\n\n  stopPropagation = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.stopPropagation();\n  };\n\n  toggleProjectsList = () => {\n    this.setState(state => ({ expanded: !state.expanded }));\n  };\n\n  render() {\n    const { event } = this.props;\n    const { expanded } = this.state;\n    return (\n      <div className=\"project-activity-event-inner\">\n        <div className=\"project-activity-event-inner-main\">\n          <ProjectEventIcon\n            className={classNames(\n              'project-activity-event-icon',\n              'little-spacer-right',\n              event.category\n            )}\n          />\n\n          <div className=\"project-activity-event-inner-text flex-1\">\n            <span className=\"note little-spacer-right\">\n              {translate('event.category', event.category)}:\n            </span>\n            {event.qualityGate.stillFailing ? (\n              <FormattedMessage\n                defaultMessage={translate('event.quality_gate.still_x')}\n                id=\"event.quality_gate.still_x\"\n                values={{ status: <Level level={event.qualityGate.status} small={true} /> }}\n              />\n            ) : (\n              <Level level={event.qualityGate.status} small={true} />\n            )}\n          </div>\n\n          {event.qualityGate.failing.length > 0 && (\n            <ResetButtonLink\n              className=\"project-activity-event-inner-more-link\"\n              onClick={this.toggleProjectsList}\n              stopPropagation={true}>\n              {expanded ? translate('hide') : translate('more')}\n              <DropdownIcon className=\"little-spacer-left\" turned={expanded} />\n            </ResetButtonLink>\n          )}\n        </div>\n\n        {expanded && (\n          <ul className=\"project-activity-event-inner-more-content\">\n            {event.qualityGate.failing.map(project => (\n              <li className=\"display-flex-center little-spacer-top\" key={project.key}>\n                <Level\n                  className=\"little-spacer-right\"\n                  level={event.qualityGate.status}\n                  small={true}\n                />\n                <div className=\"flex-1 text-ellipsis\">\n                  <Link\n                    onClick={this.stopPropagation}\n                    title={project.name}\n                    to={getProjectUrl(project.key, project.branch)}>\n                    {project.name}\n                  </Link>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNewCodePeriod(data?: {\n  project?: string;\n  branch?: string;\n}): Promise<T.Omit<T.NewCodePeriod, 'effectiveValue'>> {\n  return getJSON('/api/new_code_periods/show', data).catch(throwGlobalError);\n}\n\nexport function setNewCodePeriod(data: {\n  project?: string;\n  branch?: string;\n  type: T.NewCodePeriodSettingType;\n  value?: string;\n}): Promise<void> {\n  return post('/api/new_code_periods/set', data).catch(throwGlobalError);\n}\n\nexport function resetNewCodePeriod(data: { project?: string; branch?: string }): Promise<void> {\n  return post('/api/new_code_periods/unset', data).catch(throwGlobalError);\n}\n\nexport function listBranchesNewCodePeriod(data: {\n  project: string;\n}): Promise<{ newCodePeriods: T.NewCodePeriodBranch[] }> {\n  return getJSON('/api/new_code_periods/list', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function validateDays(days: string) {\n  const parsed = parseInt(days, 10);\n\n  return !(days.length < 1 || isNaN(parsed) || parsed < 1 || String(parsed) !== days);\n}\n\nexport function getSettingValue({\n  analysis,\n  days,\n  type\n}: {\n  analysis?: string;\n  days?: string;\n  type?: T.NewCodePeriodSettingType;\n}) {\n  switch (type) {\n    case 'NUMBER_OF_DAYS':\n      return days;\n    case 'SPECIFIC_ANALYSIS':\n      return analysis;\n    default:\n      return undefined;\n  }\n}\n\nexport function validateSetting(state: {\n  analysis?: string;\n  currentSetting?: T.NewCodePeriodSettingType;\n  currentSettingValue?: string;\n  days: string;\n  selected?: T.NewCodePeriodSettingType;\n  overrideGeneralSetting?: boolean;\n}) {\n  const {\n    analysis = '',\n    currentSetting,\n    currentSettingValue,\n    days,\n    selected,\n    overrideGeneralSetting\n  } = state;\n\n  let isChanged;\n  if (!currentSetting && overrideGeneralSetting !== undefined) {\n    isChanged = overrideGeneralSetting;\n  } else {\n    isChanged =\n      overrideGeneralSetting === false ||\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && days !== currentSettingValue) ||\n      (selected === 'SPECIFIC_ANALYSIS' && analysis !== currentSettingValue);\n  }\n\n  const isValid =\n    overrideGeneralSetting === false ||\n    selected === 'PREVIOUS_VERSION' ||\n    (selected === 'SPECIFIC_ANALYSIS' && analysis.length > 0) ||\n    (selected === 'NUMBER_OF_DAYS' && validateDays(days));\n\n  return { isChanged, isValid };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  className?: string;\n  days: string;\n  disabled?: boolean;\n  isChanged: boolean;\n  isValid: boolean;\n  onChangeDays: (value: string) => void;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingDays(props: Props) {\n  const { className, days, disabled, isChanged, isValid, onChangeDays, onSelect, selected } = props;\n  return (\n    <RadioCard\n      className={className}\n      disabled={disabled}\n      onClick={() => onSelect('NUMBER_OF_DAYS')}\n      selected={selected}\n      title={translate('baseline.number_days')}>\n      <>\n        <p className=\"big-spacer-bottom\">{translate('baseline.number_days.description')}</p>\n        {selected && (\n          <ValidationInput\n            error={undefined}\n            id=\"baseline_number_of_days\"\n            isInvalid={isChanged && !isValid}\n            isValid={isChanged && isValid}\n            label={translate('baseline.specify_days')}\n            required={true}>\n            <input onChange={e => onChangeDays(e.currentTarget.value)} type=\"text\" value={days} />\n          </ValidationInput>\n        )}\n      </>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  disabled?: boolean;\n  isDefault?: boolean;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingPreviousVersion(props: Props) {\n  const { disabled, isDefault, onSelect, selected } = props;\n  return (\n    <RadioCard\n      disabled={disabled}\n      onClick={() => onSelect('PREVIOUS_VERSION')}\n      selected={selected}\n      title={\n        translate('baseline.previous_version') + (isDefault ? ` (${translate('default')})` : '')\n      }>\n      <p>{translate('baseline.previous_version.description')}</p>\n    </RadioCard>\n  );\n}\n"],"sourceRoot":""}