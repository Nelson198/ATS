{"version":3,"sources":["webpack:///./src/main/js/apps/create/organization/AlmApplicationInstalling.tsx","webpack:///./src/main/js/apps/create/organization/AutoOrganizationBind.tsx","webpack:///./src/main/js/apps/create/components/OrganizationAvatarInput.tsx","webpack:///./src/main/js/apps/create/components/OrganizationKeyInput.tsx","webpack:///./src/main/js/apps/create/components/OrganizationUrlInput.tsx","webpack:///./src/main/js/apps/create/organization/OrganizationDetailsForm.tsx","webpack:///./src/main/js/apps/create/organization/OrganizationDetailsStep.tsx","webpack:///./src/main/js/apps/create/components/FreeCardPlan.tsx","webpack:///./src/main/js/apps/create/organization/PlanSelect.tsx","webpack:///./src/main/js/apps/create/components/PaidCardPlan.tsx","webpack:///./src/main/js/apps/create/organization/PlanStep.tsx","webpack:///./src/main/js/apps/create/organization/AutoOrganizationCreate.tsx","webpack:///./src/main/js/apps/create/organization/ManualOrganizationCreate.tsx","webpack:///./src/main/js/apps/create/organization/RemoteOrganizationChoose.tsx","webpack:///./src/main/js/apps/create/organization/CreateOrganization.tsx","webpack:///./src/main/js/apps/create/organization/actions.ts","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/helpers/almIntegrations.ts","webpack:///./src/main/js/helpers/extensions.ts","webpack:///./src/main/js/app/utils/addGlobalSuccessMessage.ts","webpack:///./src/main/js/apps/create/organization/utils.ts","webpack:///./src/main/js/components/hoc/whenLoggedIn.tsx","webpack:///./src/main/js/api/alm-integration.ts","webpack:///./src/main/js/apps/tutorials/styles.css?5461","webpack:///./src/main/js/apps/tutorials/components/Step.tsx","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationAdvantages.tsx","webpack:///./src/main/js/api/billing.ts","webpack:///./src/main/js/components/hoc/withUserOrganizations.tsx","webpack:///./src/main/js/apps/tutorials/styles.css","webpack:///./src/main/js/apps/create/components/BillingFormShim.tsx","webpack:///./src/main/js/apps/organizations/actions.ts","webpack:///./src/main/js/apps/create/components/OrganizationSelect.tsx"],"names":["AlmApplicationInstalling","_ref","almKey","index_js_exposed","DeferredSpinner_default","a","customSpinner","className","Object","l10n","almIntegrations","AutoOrganizationBind_AutoOrganizationBind","[object Object]","props","super","this","mounted","handleChange","key","setState","organization","handleSubmit","event","preventDefault","state","submitting","onBindOrganization","then","stopSubmitting","getInitialSelectedOrganization","unboundOrganizations","length","_this$state","id","onSubmit","OrganizationSelect","onChange","organizations","Alert","display","variant","react_router_es","target","to","pathname","buttons","disabled","OrganizationAvatarInput_OrganizationAvatarInput","error","undefined","editing","touched","value","currentTarget","trim","validateUrl","handleBlur","handleFocus","initialValue","Boolean","url","valid_url","isInvalid","isValidUrl","isValid","ValidationInput_default","description","label","name","OrganizationAvatar","avatar","classnames","is-invalid","is-valid","onBlur","onFocus","placeholder","type","OrganizationKeyInput_OrganizationKeyInput","checkFreeKey","validating","catch","validateKey","debounce_default","test","required","helpers_urls","replace","autoFocus","maxLength","OrganizationUrlInput_OrganizationUrlInput","OrganizationDetailsForm_OrganizationDetailsForm","handleAdditionalClick","additional","handleAvatarUpdate","handleDescriptionUpdate","handleKeyUpdate","handleNameUpdate","handleUrlUpdate","canSubmit","onContinue","infoBlock","onClick","DropdownIcon_default","turned","hidden","htmlFor","rows","submitText","OrganizationDetailsStep_OrganizationDetailsStep","renderForm","children","renderResult","AlertSuccessIcon_default","Step","finished","onOpen","open","stepNumber","stepTitle","FreeCardPlan","_a","almName","hasWarning","FreeCardPlan_rest","showInfo","showWarning","RadioCard_default","assign","title","titleInfo","utils","index_es","defaultMessage","values","alm","Plan","PaidCardPlan","isRecommended","startingPrice","PaidCardPlan_rest","recommended","price","UpgradeOrganizationAdvantages","PlanSelect_PlanSelect","handleFreePlanClick","Free","handlePaidPlanClick","Paid","_this$props","almApplication","almOrganization","plan","hasPrivateRepo","privateRepos","onlyPrivateRepo","publicRepos","cards","selected","aria-label","role","reverse","BillingForm","withCurrentUser","BillingFormShim","PlanStep_PlanStep","handlePlanChange","handleFreePlanSubmit","createOrganization","onDone","subscriptionPlans","ready","onCommit","onFailToUpgrade","onUpgradeFail","organizationKey","renderFormFields","renderSubmitGroup","extensions","Filters","AutoOrganizationCreate_AutoOrganizationCreate","handleBindOrganization","alm_integration","installationId","almInstallId","onOrgCreated","handleCreateOrganization","membersSync","personal","almUrl","Promise","reject","handleOptionChange","filter","Create","_this$props2","step","hasUnboundOrgs","handleOrgDetailsStepOpen","OrganizationDetails","alt","src","concat","width","handleCancelImport","RadioToggle_default","onCheck","options","Bind","href","rel","handleOrgDetailsFinish","ManualOrganizationCreate_ManualOrganizationCreate","organization_RemoteOrganizationChoose","unboundInstallationId","router","push","query","handleInstallAppClick","storage","Date","now","toString","handleInstallationChange","renderOption","height","almUnboundApplications","boundOrganization","boundAvatar","small","boundName","IdentityProviderLink_default","backgroundColor","iconPath","installationUrl","Select_default","clearable","labelKey","optionRenderer","sortBy_default","o","toLowerCase","valueKey","valueRenderer","CreateOrganization_CreateOrganization","_this","almOrgLoading","bindingExistingOrg","loading","deleteOrganization","fetchAlmApplication","application","fetchAlmOrganization","_ref2","resolve","setValidOrgKey","_ref3","isStoredTimestampValid","urls","fetchAlmUnboundApplications","fetchSubscriptionPlans","billing","updateUrlQuery","handleOrgCreated","skipOnboarding","tab","handlePlanDone","timestampKey","storedTimestamp","difference_in_minutes","Number","onTabChange","updateUrlState","getHeader","strings","keys","times_default","i","join","_ref4","find","Math","ceil","random","stopLoading","arguments","location","renderContent","_ref5$tab","commonProps","hasAutoImport","Tabs_default","tabs","node","userOrganizations","_ref6","_ref6$actions","actions","admin","pages","currentUser","bindAndRedirectToOrganizationSettings","initRequests","all","prevProps","prevQuery","addGlobalSuccessMessage","header","startedPrice","Helmet","titleTemplate","A11ySkipTarget","anchor","mapDispatchToProps","__rest","dispatch","newOrganization","store_organizations","users","__webpack_exports__","whenLoggedIn","withUserOrganizations","es","__webpack_require__","d","react__WEBPACK_IMPORTED_MODULE_0__","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_1__","_A11yContext__WEBPACK_IMPORTED_MODULE_2__","Consumer","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","_this$props$label","weight","getAlmMembersUrl","getUserAlmKey","hasAdvancedALMIntegration","isBitbucket","isGithub","isVSTS","sanitizeAlmId","_users__WEBPACK_IMPORTED_MODULE_0__","endsWith","user","externalProvider","startsWith","installScript","getExtensionStart","sonar_ui_common_helpers_urls__WEBPACK_IMPORTED_MODULE_0__","_extensionsHandler__WEBPACK_IMPORTED_MODULE_1__","librariesExposed","scriptTag","document","createElement","onload","getElementsByTagName","appendChild","async","fromCache","exposeLibraries","e","bind","default","start","_store_globalMessages__WEBPACK_IMPORTED_MODULE_0__","_getStore__WEBPACK_IMPORTED_MODULE_1__","message","ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP","ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP","BIND_ORGANIZATION_KEY","BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP","formatPrice","noSign","priceFormatted","sonar_ui_common_helpers_measures__WEBPACK_IMPORTED_MODULE_2__","parseQuery","lodash_memoize__WEBPACK_IMPORTED_MODULE_0___default","urlQuery","sonar_ui_common_helpers_query__WEBPACK_IMPORTED_MODULE_3__","jwt","sonar_ui_common_helpers_strings__WEBPACK_IMPORTED_MODULE_4__","iss","serializeQuery","installation_id","_helpers_almIntegrations__WEBPACK_IMPORTED_MODULE_5__","clientKey","sonar_ui_common_helpers_handleRequiredAuthentication__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_helpers_handleRequiredAuthentication__WEBPACK_IMPORTED_MODULE_1___default","n","_helpers_users__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","_withCurrentUser__WEBPACK_IMPORTED_MODULE_4__","WrappedComponent","Wrapper","displayName","bindAlmOrganization","getAlmAppInfo","getAlmOrganization","getRepositories","listUnboundApplications","provisionProject","getGithubLanguages","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","data","max","slowThreshold","applications","map","app","installationKeys","apiUrl","content","module","hmr","transform","insertInto","locals","exports","classnames__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","is-open","is-finished","clickable","tabIndex","sonar_ui_common_components_icons_CheckIcon__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_icons_CheckIcon__WEBPACK_IMPORTED_MODULE_1___default","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__","_app_theme__WEBPACK_IMPORTED_MODULE_3__","TRIAL_DURATION_DAYS","Advantage","fill","lightGreen","getSubscriptionPlans","giveDowngradeFeedback","react_redux__WEBPACK_IMPORTED_MODULE_1__","_apps_account_organizations_actions__WEBPACK_IMPORTED_MODULE_2__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_3__","_utils__WEBPACK_IMPORTED_MODULE_4__","fetchMyOrganizations","window","SonarBilling","updateOrganization","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_0__","_api_organizations__WEBPACK_IMPORTED_MODULE_1__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_2__","_store_organizations__WEBPACK_IMPORTED_MODULE_3__","changes","hideIcons","icon","isPaidOrg","subscription","sonar_ui_common_helpers_urls__WEBPACK_IMPORTED_MODULE_4__","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","getOptionRenderer","sonar_ui_common_components_controls_Select__WEBPACK_IMPORTED_MODULE_2___default","lodash_sortBy__WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/306.m.6f14da8f.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { sanitizeAlmId } from '../../../helpers/almIntegrations';\n\nexport default function AlmApplicationInstalling({ almKey }: { almKey?: string }) {\n  return (\n    <DeferredSpinner\n      customSpinner={\n        <div className=\"sonarcloud page page-limited\">\n          <div className=\"huge-spacer-top text-center\">\n            <i className=\"spinner\" />\n            <p className=\"big-spacer-top\">\n              {translateWithParameters(\n                'onboarding.import_organization.installing',\n                almKey ? translate(sanitizeAlmId(almKey)) : 'ALM'\n              )}\n            </p>\n          </div>\n        </div>\n      }\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { isGithub } from '../../../helpers/almIntegrations';\nimport OrganizationSelect from '../components/OrganizationSelect';\n\ninterface Props {\n  almKey: string;\n  onBindOrganization: (organization: string) => Promise<void>;\n  unboundOrganizations: T.Organization[];\n}\n\ninterface State {\n  organization: string;\n  submitting: boolean;\n}\n\nexport default class AutoOrganizationBind extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { organization: this.getInitialSelectedOrganization(props), submitting: false };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getInitialSelectedOrganization(props: Props) {\n    if (props.unboundOrganizations.length === 1) {\n      return props.unboundOrganizations[0].key;\n    }\n    return '';\n  }\n\n  handleChange = ({ key }: T.Organization) => {\n    this.setState({ organization: key });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { organization } = this.state;\n    if (organization) {\n      this.setState({ submitting: true });\n      this.props.onBindOrganization(organization).then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  render() {\n    const { almKey } = this.props;\n    const { organization, submitting } = this.state;\n    return (\n      <form id=\"bind-organization-form\" onSubmit={this.handleSubmit}>\n        <OrganizationSelect\n          onChange={this.handleChange}\n          organization={organization}\n          organizations={this.props.unboundOrganizations}\n        />\n        {isGithub(almKey) && (\n          <Alert className=\"abs-width-400 big-spacer-top\" display=\"block\" variant=\"info\">\n            {translateWithParameters(\n              'onboarding.import_organization.bind_members_not_sync_info_x',\n              translate('organization', almKey)\n            )}\n            <Link\n              className=\"spacer-left\"\n              target=\"_blank\"\n              to={{ pathname: '/documentation/organizations/manage-team/' }}>\n              {translate('learn_more')}\n            </Link>\n          </Alert>\n        )}\n        <div className=\"display-flex-center big-spacer-top\">\n          <SubmitButton disabled={submitting || !organization}>\n            {translate('onboarding.import_organization.bind')}\n          </SubmitButton>\n          {submitting && <DeferredSpinner className=\"spacer-left\" />}\n        </div>\n      </form>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isWebUri } from 'valid-url';\nimport OrganizationAvatar from '../../../components/common/OrganizationAvatar';\n\ninterface Props {\n  initialValue?: string;\n  name?: string;\n  onChange: (value: string | undefined) => void;\n}\n\ninterface State {\n  editing: boolean;\n  error?: string;\n  touched: boolean;\n  value: string;\n}\n\nexport default class OrganizationAvatarInput extends React.PureComponent<Props, State> {\n  state: State = { error: undefined, editing: false, touched: false, value: '' };\n\n  componentDidMount() {\n    if (this.props.initialValue) {\n      const value = this.props.initialValue;\n      const error = this.validateUrl(value);\n      this.setState({ error, touched: Boolean(error), value });\n    }\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value.trim();\n    const error = this.validateUrl(value);\n    this.setState({ error, touched: true, value });\n    this.props.onChange(error === undefined ? value : undefined);\n  };\n\n  handleBlur = () => {\n    this.setState({ editing: false });\n  };\n\n  handleFocus = () => {\n    this.setState({ editing: true });\n  };\n\n  validateUrl(url: string) {\n    if (url.length > 0 && !isWebUri(url)) {\n      return translate('onboarding.create_organization.url.error');\n    }\n    return undefined;\n  }\n\n  render() {\n    const isInvalid = this.state.touched && !this.state.editing && this.state.error !== undefined;\n    const isValidUrl = this.state.error === undefined && this.state.value !== '';\n    const isValid = this.state.touched && isValidUrl;\n    return (\n      <ValidationInput\n        description={translate('onboarding.create_organization.avatar.description')}\n        error={this.state.error}\n        id=\"organization-avatar\"\n        isInvalid={isInvalid}\n        isValid={isValid}\n        label={translate('onboarding.create_organization.avatar')}>\n        <>\n          {(isValidUrl || this.props.name) && (\n            <OrganizationAvatar\n              className=\"display-block spacer-bottom\"\n              organization={{\n                avatar: isValidUrl ? this.state.value : undefined,\n                name: this.props.name || ''\n              }}\n            />\n          )}\n          <input\n            className={classNames('input-super-large', 'text-middle', {\n              'is-invalid': isInvalid,\n              'is-valid': isValid\n            })}\n            id=\"organization-avatar\"\n            onBlur={this.handleBlur}\n            onChange={this.handleChange}\n            onFocus={this.handleFocus}\n            placeholder={translate('onboarding.create_organization.avatar.placeholder')}\n            type=\"text\"\n            value={this.state.value}\n          />\n        </>\n      </ValidationInput>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getHostUrl } from 'sonar-ui-common/helpers/urls';\nimport { getOrganization } from '../../../api/organizations';\n\ninterface Props {\n  initialValue?: string;\n  onChange: (value: string | undefined) => void;\n}\n\ninterface State {\n  error?: string;\n  touched: boolean;\n  validating: boolean;\n  value: string;\n}\n\nexport default class OrganizationKeyInput extends React.PureComponent<Props, State> {\n  mounted = false;\n  constructor(props: Props) {\n    super(props);\n    this.state = { error: undefined, touched: false, validating: false, value: '' };\n    this.checkFreeKey = debounce(this.checkFreeKey, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.props.initialValue !== undefined) {\n      this.setState({ value: this.props.initialValue });\n      this.validateKey(this.props.initialValue);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkFreeKey = (key: string) => {\n    this.setState({ validating: true });\n    return getOrganization(key)\n      .then(organization => {\n        if (this.mounted) {\n          if (organization === undefined) {\n            this.setState({ error: undefined, validating: false });\n            this.props.onChange(key);\n          } else {\n            this.setState({\n              error: translate('onboarding.create_organization.organization_name.taken'),\n              touched: true,\n              validating: false\n            });\n            this.props.onChange(undefined);\n          }\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ error: undefined, validating: false });\n          this.props.onChange(key);\n        }\n      });\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    this.setState({ touched: true, value });\n    this.validateKey(value);\n  };\n\n  validateKey(key: string) {\n    if (key.length > 255 || !/^[a-z0-9][a-z0-9-]*[a-z0-9]?$/.test(key)) {\n      this.setState({\n        error: translate('onboarding.create_organization.organization_name.error'),\n        touched: true\n      });\n      this.props.onChange(undefined);\n    } else {\n      this.checkFreeKey(key);\n    }\n  }\n\n  render() {\n    const isInvalid = this.state.touched && this.state.error !== undefined;\n    const isValid = this.state.touched && !this.state.validating && this.state.error === undefined;\n    return (\n      <ValidationInput\n        error={this.state.error}\n        id=\"organization-key\"\n        isInvalid={isInvalid}\n        isValid={isValid}\n        label={translate('onboarding.create_organization.organization_name')}\n        required={true}>\n        <div className=\"display-inline-flex-baseline\">\n          <span className=\"little-spacer-right\">\n            {getHostUrl().replace(/https*:\\/\\//, '') + '/organizations/'}\n          </span>\n          <input\n            autoFocus={true}\n            className={classNames('input-super-large', {\n              'is-invalid': isInvalid,\n              'is-valid': isValid\n            })}\n            id=\"organization-key\"\n            maxLength={255}\n            onChange={this.handleChange}\n            type=\"text\"\n            value={this.state.value}\n          />\n        </div>\n      </ValidationInput>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isWebUri } from 'valid-url';\n\ninterface Props {\n  initialValue?: string;\n  onChange: (value: string | undefined) => void;\n}\n\ninterface State {\n  editing: boolean;\n  error?: string;\n  touched: boolean;\n  value: string;\n}\n\nexport default class OrganizationUrlInput extends React.PureComponent<Props, State> {\n  state: State = { error: undefined, editing: false, touched: false, value: '' };\n\n  componentDidMount() {\n    if (this.props.initialValue) {\n      const value = this.props.initialValue;\n      const error = this.validateUrl(value);\n      this.setState({ error, touched: Boolean(error), value });\n    }\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value.trim();\n    const error = this.validateUrl(value);\n    this.setState({ error, touched: true, value });\n    this.props.onChange(error === undefined ? value : undefined);\n  };\n\n  handleBlur = () => {\n    this.setState({ editing: false });\n  };\n\n  handleFocus = () => {\n    this.setState({ editing: true });\n  };\n\n  validateUrl(url: string) {\n    if (url.length > 0 && !isWebUri(url)) {\n      return translate('onboarding.create_organization.url.error');\n    }\n    return undefined;\n  }\n\n  render() {\n    const isInvalid = this.state.touched && !this.state.editing && this.state.error !== undefined;\n    const isValid = this.state.touched && this.state.error === undefined && this.state.value !== '';\n    return (\n      <ValidationInput\n        error={this.state.error}\n        id=\"organization-url\"\n        isInvalid={isInvalid}\n        isValid={isValid}\n        label={translate('onboarding.create_organization.url')}>\n        <input\n          className={classNames('input-super-large', 'text-middle', {\n            'is-invalid': isInvalid,\n            'is-valid': isValid\n          })}\n          id=\"organization-url\"\n          onBlur={this.handleBlur}\n          onChange={this.handleChange}\n          onFocus={this.handleFocus}\n          type=\"text\"\n          value={this.state.value}\n        />\n      </ValidationInput>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport OrganizationAvatarInput from '../components/OrganizationAvatarInput';\nimport OrganizationKeyInput from '../components/OrganizationKeyInput';\nimport OrganizationUrlInput from '../components/OrganizationUrlInput';\n\ntype RequiredOrganization = Required<T.OrganizationBase>;\n\ninterface Props {\n  infoBlock?: React.ReactNode;\n  onContinue: (organization: T.Organization) => Promise<void>;\n  organization?: T.Organization;\n  submitText: string;\n}\n\ninterface State {\n  additional: boolean;\n  avatar?: string;\n  description?: string;\n  key?: string;\n  name?: string;\n  submitting: boolean;\n  url?: string;\n}\n\ntype ValidState = Pick<State, Exclude<keyof State, RequiredOrganization>> & RequiredOrganization;\n\nexport default class OrganizationDetailsForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    const { organization } = props;\n    this.state = {\n      additional: false,\n      avatar: (organization && organization.avatar) || '',\n      description: (organization && organization.description) || '',\n      key: (organization && organization.key) || undefined,\n      name: (organization && organization.name) || '',\n      submitting: false,\n      url: (organization && organization.url) || ''\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  canSubmit(state: State): state is ValidState {\n    return Boolean(\n      state.key !== undefined &&\n        state.name !== undefined &&\n        state.description !== undefined &&\n        state.avatar !== undefined &&\n        state.url !== undefined\n    );\n  }\n\n  handleAdditionalClick = () => {\n    this.setState(state => ({ additional: !state.additional }));\n  };\n\n  handleAvatarUpdate = (avatar: string | undefined) => {\n    this.setState({ avatar });\n  };\n\n  handleDescriptionUpdate = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ description: event.currentTarget.value });\n  };\n\n  handleKeyUpdate = (key: string | undefined) => {\n    this.setState({ key });\n  };\n\n  handleNameUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handleUrlUpdate = (url: string | undefined) => {\n    this.setState({ url });\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const { state } = this;\n    if (this.canSubmit(state)) {\n      this.setState({ submitting: true });\n      this.props\n        .onContinue({\n          avatar: state.avatar,\n          description: state.description,\n          key: state.key,\n          name: state.name,\n          url: state.url\n        })\n        .then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  render() {\n    const { submitting } = this.state;\n    const { infoBlock } = this.props;\n    return (\n      <form id=\"organization-form\" onSubmit={this.handleSubmit}>\n        <OrganizationKeyInput initialValue={this.state.key} onChange={this.handleKeyUpdate} />\n        <div className=\"big-spacer-top\">\n          <ResetButtonLink onClick={this.handleAdditionalClick}>\n            {translate(\n              this.state.additional\n                ? 'onboarding.create_organization.hide_additional_info'\n                : 'onboarding.create_organization.add_additional_info'\n            )}\n            <DropdownIcon className=\"little-spacer-left\" turned={this.state.additional} />\n          </ResetButtonLink>\n        </div>\n        <div className=\"js-additional-info\" hidden={!this.state.additional}>\n          <div className=\"big-spacer-top\">\n            <label htmlFor=\"organization-display-name\">\n              <strong>{translate('onboarding.create_organization.display_name')}</strong>\n            </label>\n            <div className=\"little-spacer-top\">\n              <input\n                className=\"input-super-large text-middle\"\n                id=\"organization-display-name\"\n                maxLength={255}\n                onChange={this.handleNameUpdate}\n                type=\"text\"\n                value={this.state.name}\n              />\n            </div>\n            <div className=\"note abs-width-400\">\n              {translate('onboarding.create_organization.display_name.description')}\n            </div>\n          </div>\n          <div className=\"big-spacer-top\">\n            <OrganizationAvatarInput\n              initialValue={this.state.avatar}\n              name={this.state.name}\n              onChange={this.handleAvatarUpdate}\n            />\n          </div>\n          <div className=\"big-spacer-top\">\n            <label htmlFor=\"organization-description\">\n              <strong>{translate('onboarding.create_organization.description')}</strong>\n            </label>\n            <div className=\"little-spacer-top\">\n              <textarea\n                className=\"input-super-large text-middle\"\n                id=\"organization-description\"\n                maxLength={256}\n                onChange={this.handleDescriptionUpdate}\n                rows={3}\n                value={this.state.description}\n              />\n            </div>\n          </div>\n          <div className=\"big-spacer-top\">\n            <OrganizationUrlInput initialValue={this.state.url} onChange={this.handleUrlUpdate} />\n          </div>\n        </div>\n\n        {infoBlock}\n\n        <div className=\"display-flex-center big-spacer-top\">\n          <SubmitButton disabled={submitting || !this.canSubmit(this.state)}>\n            {this.props.submitText}\n          </SubmitButton>\n          {submitting && <DeferredSpinner className=\"spacer-left\" />}\n        </div>\n      </form>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Step from '../../tutorials/components/Step';\n\ninterface Props {\n  children: React.ReactNode;\n  finished: boolean;\n  onOpen: () => void;\n  open: boolean;\n  organization?: T.Organization;\n  stepTitle?: string;\n}\nexport default class OrganizationDetailsStep extends React.PureComponent<Props> {\n  renderForm = () => {\n    return <div className=\"boxed-group-inner\">{this.props.children}</div>;\n  };\n\n  renderResult = () => {\n    const { organization } = this.props;\n    return organization ? (\n      <div className=\"boxed-group-actions display-flex-center\">\n        <AlertSuccessIcon className=\"spacer-right\" />\n        <strong className=\"text-limited\">{organization.key}</strong>\n      </div>\n    ) : null;\n  };\n\n  render() {\n    return (\n      <Step\n        finished={this.props.finished}\n        onOpen={this.props.onOpen}\n        open={this.props.open}\n        renderForm={this.renderForm}\n        renderResult={this.renderResult}\n        stepNumber={1}\n        stepTitle={\n          this.props.stepTitle || translate('onboarding.create_organization.enter_org_details')\n        }\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport RadioCard, { RadioCardProps } from 'sonar-ui-common/components/controls/RadioCard';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatPrice } from '../organization/utils';\n\ninterface Props extends RadioCardProps {\n  almName?: string;\n  hasWarning: boolean;\n}\n\nexport default function FreeCardPlan({ almName, hasWarning, ...props }: Props) {\n  const showInfo = almName && props.disabled;\n  const showWarning = almName && hasWarning && !props.disabled;\n\n  return (\n    <RadioCard title={translate('billing.free_plan.title')} titleInfo={formatPrice(0)} {...props}>\n      <div className=\"spacer-left\">\n        <ul className=\"big-spacer-left note\">\n          <li className=\"little-spacer-bottom\">\n            {translate('billing.free_plan.all_projects_analyzed_public')}\n          </li>\n          <li>{translate('billing.free_plan.anyone_can_browse_source_code')}</li>\n        </ul>\n      </div>\n      {showWarning && (\n        <Alert variant=\"warning\">\n          <FormattedMessage\n            defaultMessage={translate('billing.free_plan.private_repo_warning')}\n            id=\"billing.free_plan.private_repo_warning\"\n            values={{ alm: almName }}\n          />\n        </Alert>\n      )}\n      {showInfo && (\n        <Alert variant=\"info\">\n          <FormattedMessage\n            defaultMessage={translate('billing.free_plan.not_available_info')}\n            id=\"billing.free_plan.not_available_info\"\n            values={{ alm: almName }}\n          />\n        </Alert>\n      )}\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport FreeCardPlan from '../components/FreeCardPlan';\nimport PaidCardPlan from '../components/PaidCardPlan';\n\nexport enum Plan {\n  Free = 'free',\n  Paid = 'paid'\n}\n\ninterface Props {\n  almApplication?: T.AlmApplication;\n  almOrganization?: T.AlmOrganization;\n  onChange: (plan: Plan) => void;\n  plan: Plan;\n  startingPrice: number;\n}\n\nexport default class PlanSelect extends React.PureComponent<Props> {\n  handleFreePlanClick = () => {\n    this.props.onChange(Plan.Free);\n  };\n\n  handlePaidPlanClick = () => {\n    this.props.onChange(Plan.Paid);\n  };\n\n  render() {\n    const { almApplication, almOrganization, plan } = this.props;\n    const hasPrivateRepo = Boolean(almOrganization && almOrganization.privateRepos > 0);\n    const onlyPrivateRepo = Boolean(\n      hasPrivateRepo && almOrganization && almOrganization.publicRepos === 0\n    );\n\n    const cards = [\n      <PaidCardPlan\n        isRecommended={hasPrivateRepo}\n        key=\"paid\"\n        onClick={this.handlePaidPlanClick}\n        selected={plan === Plan.Paid}\n        startingPrice={this.props.startingPrice}\n      />,\n      <FreeCardPlan\n        almName={almApplication && almApplication.name}\n        disabled={onlyPrivateRepo}\n        hasWarning={hasPrivateRepo && plan === Plan.Free}\n        key=\"free\"\n        onClick={this.handleFreePlanClick}\n        selected={plan === Plan.Free}\n      />\n    ];\n\n    return (\n      <div\n        aria-label={translate('onboarding.create_organization.choose_plan')}\n        className=\"display-flex-row huge-spacer-bottom\"\n        role=\"radiogroup\">\n        {hasPrivateRepo ? cards : cards.reverse()}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport RadioCard, { RadioCardProps } from 'sonar-ui-common/components/controls/RadioCard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatPrice } from '../organization/utils';\nimport UpgradeOrganizationAdvantages from './UpgradeOrganizationAdvantages';\n\ninterface Props extends RadioCardProps {\n  isRecommended: boolean;\n  startingPrice?: number;\n}\n\nexport default function PaidCardPlan({ isRecommended, startingPrice, ...props }: Props) {\n  return (\n    <RadioCard\n      recommended={isRecommended ? translate('billing.paid_plan.recommended') : undefined}\n      title={translate('billing.paid_plan.title')}\n      titleInfo={\n        startingPrice !== undefined && (\n          <FormattedMessage\n            defaultMessage={translate('billing.price_from_x')}\n            id=\"billing.price_from_x\"\n            values={{\n              price: <span className=\"big\">{formatPrice(startingPrice)}</span>\n            }}\n          />\n        )\n      }\n      {...props}>\n      <UpgradeOrganizationAdvantages />\n      <div className=\"big-spacer-left\">\n        <Link className=\"spacer-left\" target=\"_blank\" to=\"/about/pricing\">\n          {translate('billing.pricing.learn_more')}\n        </Link>\n      </div>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\nimport { getExtensionStart } from '../../../helpers/extensions';\nimport Step from '../../tutorials/components/Step';\nimport BillingFormShim from '../components/BillingFormShim';\nimport PlanSelect, { Plan } from './PlanSelect';\n\nconst BillingForm = withCurrentUser(BillingFormShim);\n\ninterface Props {\n  almApplication?: T.AlmApplication;\n  almOrganization?: T.AlmOrganization;\n  createOrganization: () => Promise<string>;\n  onDone: () => void;\n  onUpgradeFail?: () => void;\n  open: boolean;\n  subscriptionPlans: T.SubscriptionPlan[];\n}\n\ninterface State {\n  plan: Plan;\n  ready: boolean;\n  submitting: boolean;\n}\n\nexport default class PlanStep extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      plan: props.almOrganization && props.almOrganization.privateRepos > 0 ? Plan.Paid : Plan.Free,\n      ready: false,\n      submitting: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getExtensionStart('billing/billing').then(\n      () => {\n        if (this.mounted) {\n          this.setState({ ready: true });\n        }\n      },\n      () => {}\n    );\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handlePlanChange = (plan: Plan) => {\n    this.setState({ plan });\n  };\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleFreePlanSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.setState({ submitting: true });\n    return this.props.createOrganization().then(() => {\n      this.props.onDone();\n      this.stopSubmitting();\n    }, this.stopSubmitting);\n  };\n\n  renderForm = () => {\n    const { submitting } = this.state;\n    const { subscriptionPlans } = this.props;\n    const startingPrice = subscriptionPlans && subscriptionPlans[0] && subscriptionPlans[0].price;\n    return (\n      <div className=\"boxed-group-inner\">\n        {this.state.ready && (\n          <>\n            <PlanSelect\n              almApplication={this.props.almApplication}\n              almOrganization={this.props.almOrganization}\n              onChange={this.handlePlanChange}\n              plan={this.state.plan}\n              startingPrice={startingPrice}\n            />\n\n            {this.state.plan === Plan.Paid ? (\n              <BillingForm\n                onCommit={this.props.onDone}\n                onFailToUpgrade={this.props.onUpgradeFail}\n                organizationKey={this.props.createOrganization}\n                subscriptionPlans={this.props.subscriptionPlans}>\n                {({ onSubmit, renderFormFields, renderSubmitGroup }) => (\n                  <form id=\"organization-paid-plan-form\" onSubmit={onSubmit}>\n                    {renderFormFields()}\n                    <div className=\"billing-input-large big-spacer-top\">\n                      {renderSubmitGroup(\n                        translate('onboarding.create_organization.create_and_upgrade')\n                      )}\n                    </div>\n                  </form>\n                )}\n              </BillingForm>\n            ) : (\n              <form\n                className=\"display-flex-center big-spacer-top\"\n                id=\"organization-free-plan-form\"\n                onSubmit={this.handleFreePlanSubmit}>\n                <SubmitButton disabled={submitting}>\n                  {translate('my_account.create_organization')}\n                </SubmitButton>\n                {submitting && <DeferredSpinner className=\"spacer-left\" />}\n              </form>\n            )}\n          </>\n        )}\n      </div>\n    );\n  };\n\n  render() {\n    const { almOrganization } = this.props;\n    const stepTitle = translate(\n      almOrganization && almOrganization.privateRepos > 0 && almOrganization.publicRepos === 0\n        ? 'onboarding.create_organization.enter_payment_details'\n        : 'onboarding.create_organization.choose_plan'\n    );\n\n    return (\n      <Step\n        finished={false}\n        onOpen={() => {}}\n        open={this.props.open}\n        renderForm={this.renderForm}\n        renderResult={() => null}\n        stepNumber={2}\n        stepTitle={stepTitle}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport RadioToggle from 'sonar-ui-common/components/controls/RadioToggle';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { bindAlmOrganization } from '../../../api/alm-integration';\nimport { getAlmMembersUrl, isGithub, sanitizeAlmId } from '../../../helpers/almIntegrations';\nimport AutoOrganizationBind from './AutoOrganizationBind';\nimport OrganizationDetailsForm from './OrganizationDetailsForm';\nimport OrganizationDetailsStep from './OrganizationDetailsStep';\nimport PlanStep from './PlanStep';\nimport { Step } from './utils';\n\nenum Filters {\n  Bind = 'bind',\n  Create = 'create'\n}\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  almInstallId: string;\n  almOrganization: T.AlmOrganization;\n  className?: string;\n  createOrganization: (\n    organization: T.Organization & { installationId?: string }\n  ) => Promise<string>;\n  handleCancelImport: () => void;\n  handleOrgDetailsFinish: (organization: T.Organization) => Promise<void>;\n  handleOrgDetailsStepOpen: () => void;\n  onDone: () => void;\n  onOrgCreated: (organization: string) => void;\n  onUpgradeFail: () => void;\n  organization?: T.Organization;\n  step: Step;\n  subscriptionPlans?: T.SubscriptionPlan[];\n  unboundOrganizations: T.Organization[];\n}\n\ninterface State {\n  filter?: Filters;\n}\n\nexport default class AutoOrganizationCreate extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      filter: props.unboundOrganizations.length === 0 ? Filters.Create : undefined\n    };\n  }\n\n  handleBindOrganization = (organization: string) => {\n    return bindAlmOrganization({\n      organization,\n      installationId: this.props.almInstallId\n    }).then(() => this.props.onOrgCreated(organization));\n  };\n\n  handleCreateOrganization = () => {\n    const { almApplication, almOrganization, organization } = this.props;\n    if (!organization) {\n      return Promise.reject();\n    }\n    return this.props.createOrganization({\n      ...organization,\n      alm: {\n        key: almApplication.key,\n        membersSync: true,\n        personal: almOrganization.personal,\n        url: almOrganization.almUrl\n      },\n      installationId: this.props.almInstallId\n    });\n  };\n\n  handleOptionChange = (filter: Filters) => {\n    this.setState({ filter });\n  };\n\n  render() {\n    const {\n      almApplication,\n      almOrganization,\n      className,\n      organization,\n      step,\n      subscriptionPlans,\n      unboundOrganizations\n    } = this.props;\n    const { filter } = this.state;\n    const hasUnboundOrgs = unboundOrganizations.length > 0;\n    const almKey = sanitizeAlmId(almApplication.key);\n    return (\n      <div className={className}>\n        <OrganizationDetailsStep\n          finished={organization !== undefined}\n          onOpen={this.props.handleOrgDetailsStepOpen}\n          open={step === Step.OrganizationDetails}\n          organization={organization}\n          stepTitle={translate('onboarding.import_organization.import_org_details')}>\n          <div className=\"huge-spacer-bottom\">\n            <p className=\"display-flex-center big-spacer-bottom\">\n              <FormattedMessage\n                defaultMessage={translate('onboarding.import_organization_x')}\n                id=\"onboarding.import_organization_x\"\n                values={{\n                  avatar: (\n                    <img\n                      alt={almApplication.name}\n                      className=\"little-spacer-left\"\n                      src={`${getBaseUrl()}/images/sonarcloud/${sanitizeAlmId(\n                        almApplication.key\n                      )}.svg`}\n                      width={16}\n                    />\n                  ),\n                  name: <strong>{almOrganization.name}</strong>\n                }}\n              />\n              <ClearButton className=\"little-spacer-left\" onClick={this.props.handleCancelImport} />\n            </p>\n\n            {hasUnboundOrgs && (\n              <RadioToggle\n                name=\"filter\"\n                onCheck={this.handleOptionChange}\n                options={[\n                  {\n                    label: translate('onboarding.import_organization.create_new'),\n                    value: Filters.Create\n                  },\n                  {\n                    label: translate('onboarding.import_organization.bind_existing'),\n                    value: Filters.Bind\n                  }\n                ]}\n                value={filter}\n              />\n            )}\n          </div>\n\n          {filter === Filters.Create && (\n            <OrganizationDetailsForm\n              infoBlock={\n                isGithub(almKey) && (\n                  <Alert className=\"abs-width-600 big-spacer-top\" display=\"block\" variant=\"info\">\n                    <p>\n                      {translateWithParameters(\n                        'onboarding.import_organization.members_sync_info_x',\n                        translate('organization', almKey),\n                        almOrganization.name,\n                        translate(almKey)\n                      )}\n                    </p>\n                    <a\n                      href={getAlmMembersUrl(almApplication.key, almOrganization.almUrl)}\n                      rel=\"noopener noreferrer\"\n                      target=\"_blank\">\n                      {translateWithParameters(\n                        'organization.members.see_all_members_on_x',\n                        translate(almKey)\n                      )}\n                    </a>\n                  </Alert>\n                )\n              }\n              onContinue={this.props.handleOrgDetailsFinish}\n              organization={almOrganization}\n              submitText={translate('continue')}\n            />\n          )}\n          {filter === Filters.Bind && (\n            <AutoOrganizationBind\n              almKey={almKey}\n              onBindOrganization={this.handleBindOrganization}\n              unboundOrganizations={unboundOrganizations}\n            />\n          )}\n        </OrganizationDetailsStep>\n\n        {subscriptionPlans !== undefined && filter !== Filters.Bind && (\n          <PlanStep\n            almApplication={this.props.almApplication}\n            almOrganization={this.props.almOrganization}\n            createOrganization={this.handleCreateOrganization}\n            onDone={this.props.onDone}\n            onUpgradeFail={this.props.onUpgradeFail}\n            open={step === Step.Plan}\n            subscriptionPlans={subscriptionPlans}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport OrganizationDetailsForm from './OrganizationDetailsForm';\nimport OrganizationDetailsStep from './OrganizationDetailsStep';\nimport PlanStep from './PlanStep';\nimport { Step } from './utils';\n\ninterface Props {\n  createOrganization: (organization: T.Organization) => Promise<string>;\n  className?: string;\n  onUpgradeFail: () => void;\n  handleOrgDetailsFinish: (organization: T.Organization) => Promise<void>;\n  handleOrgDetailsStepOpen: () => void;\n  onDone: () => void;\n  organization?: T.Organization;\n  step: Step;\n  subscriptionPlans?: T.SubscriptionPlan[];\n}\n\nexport default class ManualOrganizationCreate extends React.PureComponent<Props> {\n  handleCreateOrganization = () => {\n    const { organization } = this.props;\n    if (!organization) {\n      return Promise.reject();\n    }\n    return this.props.createOrganization(organization);\n  };\n\n  render() {\n    const { className, organization, subscriptionPlans } = this.props;\n    return (\n      <div className={className}>\n        <OrganizationDetailsStep\n          finished={organization !== undefined}\n          onOpen={this.props.handleOrgDetailsStepOpen}\n          open={this.props.step === Step.OrganizationDetails}\n          organization={organization}>\n          <OrganizationDetailsForm\n            onContinue={this.props.handleOrgDetailsFinish}\n            organization={organization}\n            submitText={translate('continue')}\n          />\n        </OrganizationDetailsStep>\n\n        {subscriptionPlans !== undefined && (\n          <PlanStep\n            createOrganization={this.handleCreateOrganization}\n            onDone={this.props.onDone}\n            onUpgradeFail={this.props.onUpgradeFail}\n            open={this.props.step === Step.Plan}\n            subscriptionPlans={subscriptionPlans}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport IdentityProviderLink from 'sonar-ui-common/components/controls/IdentityProviderLink';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { save } from 'sonar-ui-common/helpers/storage';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport OrganizationAvatar from '../../../components/common/OrganizationAvatar';\nimport { sanitizeAlmId } from '../../../helpers/almIntegrations';\nimport { ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP, serializeQuery } from './utils';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  almInstallId?: string;\n  almOrganization?: T.AlmOrganization;\n  almUnboundApplications: T.AlmUnboundApplication[];\n  boundOrganization?: T.OrganizationBase;\n  className?: string;\n}\n\ninterface State {\n  unboundInstallationId: string;\n}\n\nexport class RemoteOrganizationChoose extends React.PureComponent<Props & WithRouterProps, State> {\n  state: State = { unboundInstallationId: '' };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const { unboundInstallationId } = this.state;\n    if (unboundInstallationId) {\n      this.props.router.push({\n        pathname: '/create-organization',\n        query: serializeQuery({\n          almInstallId: unboundInstallationId,\n          almKey: this.props.almApplication.key\n        })\n      });\n    }\n  };\n\n  handleInstallAppClick = () => {\n    save(ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP, Date.now().toString(10));\n  };\n\n  handleInstallationChange = ({ installationId }: T.AlmUnboundApplication) => {\n    this.setState({ unboundInstallationId: installationId });\n  };\n\n  renderOption = (organization: T.AlmUnboundApplication) => {\n    const { almApplication } = this.props;\n    return (\n      <span>\n        <img\n          alt={almApplication.name}\n          className=\"spacer-right\"\n          height={14}\n          src={`${getBaseUrl()}/images/sonarcloud/${sanitizeAlmId(almApplication.key)}.svg`}\n        />\n        {organization.name}\n      </span>\n    );\n  };\n\n  render() {\n    const {\n      almApplication,\n      almInstallId,\n      almOrganization,\n      almUnboundApplications,\n      boundOrganization,\n      className\n    } = this.props;\n    const { unboundInstallationId } = this.state;\n    return (\n      <div className={classNames('boxed-group', className)}>\n        <div className=\"boxed-group-header\">\n          <h2>{translate('onboarding.import_organization.import_org_details')}</h2>\n        </div>\n        <div className=\"boxed-group-inner\">\n          {almInstallId && !almOrganization && (\n            <Alert className=\"big-spacer-bottom width-60\" variant=\"error\">\n              <div className=\"markdown\">\n                {translate('onboarding.import_organization.org_not_found')}\n                <ul>\n                  <li>{translate('onboarding.import_organization.org_not_found.tips_1')}</li>\n                  <li>{translate('onboarding.import_organization.org_not_found.tips_2')}</li>\n                </ul>\n              </div>\n            </Alert>\n          )}\n          {almOrganization && boundOrganization && (\n            <Alert className=\"big-spacer-bottom width-60\" variant=\"error\">\n              <FormattedMessage\n                defaultMessage={translate('onboarding.import_organization.already_bound_x')}\n                id=\"onboarding.import_organization.already_bound_x\"\n                values={{\n                  avatar: (\n                    <img\n                      alt={almApplication.name}\n                      className=\"little-spacer-left\"\n                      src={`${getBaseUrl()}/images/sonarcloud/${sanitizeAlmId(\n                        almApplication.key\n                      )}.svg`}\n                      width={16}\n                    />\n                  ),\n                  name: <strong>{almOrganization.name}</strong>,\n                  boundAvatar: (\n                    <OrganizationAvatar\n                      className=\"little-spacer-left\"\n                      organization={boundOrganization}\n                      small={true}\n                    />\n                  ),\n                  boundName: <strong>{boundOrganization.name}</strong>\n                }}\n              />\n            </Alert>\n          )}\n          <div className=\"display-flex-center\">\n            <div className=\"display-inline-block\">\n              <IdentityProviderLink\n                backgroundColor={almApplication.backgroundColor}\n                className=\"display-inline-block\"\n                iconPath={almApplication.iconPath}\n                name={almApplication.name}\n                onClick={this.handleInstallAppClick}\n                small={true}\n                url={almApplication.installationUrl}>\n                {translate(\n                  'onboarding.import_organization.choose_organization_button',\n                  almApplication.key\n                )}\n              </IdentityProviderLink>\n            </div>\n            {almUnboundApplications.length > 0 && (\n              <div className=\"display-flex-stretch\">\n                <div className=\"vertical-pipe-separator\">\n                  <div className=\"vertical-separator \" />\n                  <span className=\"note\">{translate('or')}</span>\n                  <div className=\"vertical-separator\" />\n                </div>\n                <form className=\"big-spacer-top big-spacer-bottom\" onSubmit={this.handleSubmit}>\n                  <div className=\"form-field abs-width-400\">\n                    <label className=\"text-normal\" htmlFor=\"select-unbound-installation\">\n                      {translateWithParameters(\n                        'onboarding.import_organization.choose_unbound_installation_x',\n                        translate(sanitizeAlmId(almApplication.key))\n                      )}\n                    </label>\n                    <Select\n                      className=\"input-super-large\"\n                      clearable={false}\n                      id=\"select-unbound-installation\"\n                      labelKey=\"name\"\n                      onChange={this.handleInstallationChange}\n                      optionRenderer={this.renderOption}\n                      options={sortBy(almUnboundApplications, o => o.name.toLowerCase())}\n                      placeholder={translate('onboarding.import_organization.choose_organization')}\n                      value={unboundInstallationId}\n                      valueKey=\"installationId\"\n                      valueRenderer={this.renderOption}\n                    />\n                  </div>\n                  <SubmitButton disabled={!unboundInstallationId}>\n                    {translate('continue')}\n                  </SubmitButton>\n                </form>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(RemoteOrganizationChoose);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as differenceInMinutes from 'date-fns/difference_in_minutes';\nimport { times } from 'lodash';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport Tabs from 'sonar-ui-common/components/controls/Tabs';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { addWhitePageClass, removeWhitePageClass } from 'sonar-ui-common/helpers/pages';\nimport { get, remove } from 'sonar-ui-common/helpers/storage';\nimport { slugify } from 'sonar-ui-common/helpers/strings';\nimport {\n  bindAlmOrganization,\n  getAlmAppInfo,\n  getAlmOrganization,\n  GetAlmOrganizationResponse,\n  listUnboundApplications\n} from '../../../api/alm-integration';\nimport { getSubscriptionPlans } from '../../../api/billing';\nimport * as api from '../../../api/organizations';\nimport A11ySkipTarget from '../../../app/components/a11y/A11ySkipTarget';\nimport addGlobalSuccessMessage from '../../../app/utils/addGlobalSuccessMessage';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { withUserOrganizations } from '../../../components/hoc/withUserOrganizations';\nimport { hasAdvancedALMIntegration, sanitizeAlmId } from '../../../helpers/almIntegrations';\nimport { getOrganizationUrl } from '../../../helpers/urls';\nimport { skipOnboarding } from '../../../store/users';\nimport { deleteOrganization } from '../../organizations/actions';\nimport '../../tutorials/styles.css'; // TODO remove me\nimport { createOrganization } from './actions';\nimport AlmApplicationInstalling from './AlmApplicationInstalling';\nimport AutoOrganizationCreate from './AutoOrganizationCreate';\nimport ManualOrganizationCreate from './ManualOrganizationCreate';\nimport RemoteOrganizationChoose from './RemoteOrganizationChoose';\nimport {\n  BIND_ORGANIZATION_KEY,\n  BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP,\n  ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP,\n  ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP,\n  parseQuery,\n  Query,\n  serializeQuery,\n  Step\n} from './utils';\n\ninterface Props {\n  createOrganization: (\n    organization: T.Organization & { installationId?: string }\n  ) => Promise<string>;\n  currentUser: T.LoggedInUser;\n  deleteOrganization: (key: string) => Promise<void>;\n  userOrganizations: T.Organization[];\n  skipOnboarding: () => void;\n}\n\ninterface State {\n  almApplication?: T.AlmApplication;\n  almOrganization?: T.AlmOrganization;\n  almOrgLoading: boolean;\n  almUnboundApplications: T.AlmUnboundApplication[];\n  bindingExistingOrg: boolean;\n  boundOrganization?: T.OrganizationBase;\n  loading: boolean;\n  organization?: T.Organization;\n  step: Step;\n  subscriptionPlans?: T.SubscriptionPlan[];\n}\n\ntype StateWithAutoImport = State & Required<Pick<State, 'almApplication'>>;\n\ntype TabKeys = 'auto' | 'manual';\n\ninterface LocationState {\n  tab?: TabKeys;\n}\n\nexport class CreateOrganization extends React.PureComponent<Props & WithRouterProps, State> {\n  mounted = false;\n  state: State = {\n    almOrgLoading: false,\n    almUnboundApplications: [],\n    bindingExistingOrg: false,\n    loading: true,\n    step: Step.OrganizationDetails\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    addWhitePageClass();\n\n    const query = parseQuery(this.props.location.query);\n\n    //highjack the process for the organization settings\n    if (\n      hasAdvancedALMIntegration(this.props.currentUser) &&\n      query.almInstallId &&\n      this.isStoredTimestampValid(BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP)\n    ) {\n      this.bindAndRedirectToOrganizationSettings(query.almInstallId);\n    } else {\n      const initRequests = [this.fetchSubscriptionPlans()];\n      if (hasAdvancedALMIntegration(this.props.currentUser)) {\n        initRequests.push(this.fetchAlmApplication());\n\n        if (query.almInstallId) {\n          this.fetchAlmOrganization(query.almInstallId);\n        } else {\n          initRequests.push(this.fetchAlmUnboundApplications());\n        }\n      }\n      Promise.all(initRequests).then(this.stopLoading, this.stopLoading);\n    }\n  }\n\n  componentDidUpdate(prevProps: WithRouterProps) {\n    const prevQuery = parseQuery(prevProps.location.query);\n    const query = parseQuery(this.props.location.query);\n    if (this.state.almApplication && prevQuery.almInstallId !== query.almInstallId) {\n      if (query.almInstallId) {\n        this.fetchAlmOrganization(query.almInstallId);\n      } else {\n        this.setState({ almOrganization: undefined, boundOrganization: undefined, loading: true });\n        this.fetchAlmUnboundApplications().then(this.stopLoading, this.stopLoading);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeWhitePageClass();\n  }\n\n  deleteOrganization = () => {\n    if (this.state.organization) {\n      this.props.deleteOrganization(this.state.organization.key);\n    }\n  };\n\n  fetchAlmApplication = () => {\n    return getAlmAppInfo().then(({ application }) => {\n      if (this.mounted) {\n        this.setState({ almApplication: application });\n      }\n    });\n  };\n\n  fetchAlmOrganization = (installationId: string) => {\n    this.setState({ almOrgLoading: true });\n    return getAlmOrganization({ installationId })\n      .then(({ almOrganization, boundOrganization }) => {\n        if (boundOrganization) {\n          return Promise.resolve({ almOrganization, boundOrganization });\n        }\n        return this.setValidOrgKey(almOrganization);\n      })\n      .then(\n        ({ almOrganization, boundOrganization }: GetAlmOrganizationResponse) => {\n          if (this.mounted) {\n            if (\n              boundOrganization &&\n              boundOrganization.key &&\n              !this.isStoredTimestampValid(ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP)\n            ) {\n              this.props.router.push({\n                pathname: getOrganizationUrl(boundOrganization.key)\n              });\n            } else {\n              this.setState({ almOrganization, almOrgLoading: false, boundOrganization });\n            }\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ almOrgLoading: false });\n          }\n        }\n      );\n  };\n\n  fetchAlmUnboundApplications = () => {\n    return listUnboundApplications().then(almUnboundApplications => {\n      if (this.mounted) {\n        this.setState({ almUnboundApplications });\n      }\n    });\n  };\n\n  fetchSubscriptionPlans = () => {\n    return getSubscriptionPlans().then(subscriptionPlans => {\n      if (this.mounted) {\n        this.setState({ subscriptionPlans });\n      }\n    });\n  };\n\n  handleCancelImport = () => {\n    this.updateUrlQuery({ almInstallId: undefined, almKey: undefined });\n  };\n\n  handleOrgCreated = (organization: string) => {\n    this.props.skipOnboarding();\n    if (this.isStoredTimestampValid(ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP)) {\n      this.props.router.push({\n        pathname: '/projects/create',\n        state: { organization, tab: this.state.almOrganization ? 'auto' : 'manual' }\n      });\n    } else {\n      this.props.router.push({ pathname: getOrganizationUrl(organization) });\n    }\n  };\n\n  handleOrgDetailsFinish = (organization: T.Organization) => {\n    this.setState({ organization, step: Step.Plan });\n    return Promise.resolve();\n  };\n\n  handleOrgDetailsStepOpen = () => {\n    this.setState({ step: Step.OrganizationDetails });\n  };\n\n  handlePlanDone = () => {\n    if (this.state.organization) {\n      this.handleOrgCreated(this.state.organization.key);\n    }\n  };\n\n  hasAutoImport(state: State): state is StateWithAutoImport {\n    return Boolean(state.almApplication);\n  }\n\n  isStoredTimestampValid = (timestampKey: string) => {\n    const storedTimestamp = get(timestampKey);\n    remove(timestampKey);\n    return storedTimestamp && differenceInMinutes(Date.now(), Number(storedTimestamp)) < 10;\n  };\n\n  onTabChange = (tab: TabKeys) => {\n    this.updateUrlState({ tab });\n  };\n\n  bindAndRedirectToOrganizationSettings(installationId: string) {\n    const organizationKey = get(BIND_ORGANIZATION_KEY) || '';\n    remove(BIND_ORGANIZATION_KEY);\n\n    this.setState({ bindingExistingOrg: true });\n\n    bindAlmOrganization({\n      installationId,\n      organization: organizationKey\n    }).then(\n      () => {\n        this.props.router.push({\n          pathname: `/organizations/${organizationKey}`\n        });\n        addGlobalSuccessMessage(translate('organization.bind.success'));\n      },\n      () => {}\n    );\n  }\n\n  getHeader = (bindingExistingOrg: boolean) => {\n    if (bindingExistingOrg) {\n      return translate('onboarding.binding_organization');\n    } else {\n      return translate('onboarding.create_organization.page.header');\n    }\n  };\n\n  setValidOrgKey = (almOrganization: T.AlmOrganization) => {\n    const key = slugify(almOrganization.key);\n    const keys = [key, ...times(9, i => `${key}-${i + 1}`)];\n    return api\n      .getOrganizations({ organizations: keys.join(',') })\n      .then(\n        ({ organizations }) => {\n          const availableKey = keys.find(key => !organizations.find(o => o.key === key));\n          return availableKey || `${key}-${Math.ceil(Math.random() * 1000) + 10}`;\n        },\n        () => key\n      )\n      .then(key => {\n        return { almOrganization: { ...almOrganization, key } };\n      });\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  updateUrlQuery = (query: Partial<Query> = {}) => {\n    this.props.router.push({\n      pathname: this.props.location.pathname,\n      query: serializeQuery({ ...parseQuery(this.props.location.query), ...query }),\n      state: this.props.location.state\n    });\n  };\n\n  updateUrlState = (state: Partial<LocationState> = {}) => {\n    this.props.router.replace({\n      pathname: this.props.location.pathname,\n      query: this.props.location.query,\n      state: { ...(this.props.location.state || {}), ...state }\n    });\n  };\n\n  renderContent = (almInstallId?: string) => {\n    const { location } = this.props;\n    const { state } = this;\n    const { organization, step, subscriptionPlans } = state;\n    const { tab = 'auto' } = (location.state || {}) as LocationState;\n\n    const commonProps = {\n      handleOrgDetailsFinish: this.handleOrgDetailsFinish,\n      handleOrgDetailsStepOpen: this.handleOrgDetailsStepOpen,\n      onDone: this.handlePlanDone,\n      organization,\n      step,\n      subscriptionPlans\n    };\n\n    if (!this.hasAutoImport(state)) {\n      return (\n        <ManualOrganizationCreate\n          {...commonProps}\n          createOrganization={this.props.createOrganization}\n          onUpgradeFail={this.deleteOrganization}\n          organization={this.state.organization}\n          step={this.state.step}\n        />\n      );\n    }\n\n    const { almApplication, almOrganization, boundOrganization } = state;\n\n    return (\n      <>\n        <Tabs<TabKeys>\n          onChange={this.onTabChange}\n          selected={tab || 'auto'}\n          tabs={[\n            {\n              key: 'auto',\n              node: translateWithParameters(\n                'onboarding.import_organization.import_from_x',\n                translate(sanitizeAlmId(almApplication.key))\n              )\n            },\n            {\n              key: 'manual',\n              node: translate('onboarding.create_organization.create_manually')\n            }\n          ]}\n        />\n\n        <ManualOrganizationCreate\n          {...commonProps}\n          className={classNames({ hidden: tab !== 'manual' && this.hasAutoImport(state) })}\n          createOrganization={this.props.createOrganization}\n          onUpgradeFail={this.deleteOrganization}\n        />\n\n        {almInstallId && almOrganization && !boundOrganization ? (\n          <AutoOrganizationCreate\n            {...commonProps}\n            almApplication={almApplication}\n            almInstallId={almInstallId}\n            almOrganization={almOrganization}\n            className={classNames({ hidden: tab !== 'auto' })}\n            createOrganization={this.props.createOrganization}\n            handleCancelImport={this.handleCancelImport}\n            onOrgCreated={this.handleOrgCreated}\n            onUpgradeFail={this.deleteOrganization}\n            unboundOrganizations={this.props.userOrganizations.filter(\n              ({ actions = {}, alm }) => !alm && actions.admin\n            )}\n          />\n        ) : (\n          <RemoteOrganizationChoose\n            almApplication={almApplication}\n            almInstallId={almInstallId}\n            almOrganization={almOrganization}\n            almUnboundApplications={state.almUnboundApplications}\n            boundOrganization={boundOrganization}\n            className={classNames({ hidden: tab !== 'auto' })}\n          />\n        )}\n      </>\n    );\n  };\n\n  render() {\n    const { location } = this.props;\n    const query = parseQuery(location.query);\n\n    if (this.state.almOrgLoading) {\n      return <AlmApplicationInstalling almKey={query.almKey} />;\n    }\n\n    const { bindingExistingOrg, subscriptionPlans } = this.state;\n    const header = this.getHeader(bindingExistingOrg);\n    const startedPrice = subscriptionPlans && subscriptionPlans[0] && subscriptionPlans[0].price;\n\n    return (\n      <>\n        <Helmet title={header} titleTemplate=\"%s\" />\n        <div className=\"page page-limited huge-spacer-top huge-spacer-bottom\">\n          <A11ySkipTarget anchor=\"create_org_main\" />\n\n          <header className=\"page-header huge-spacer-bottom\">\n            <h1 className=\"page-title huge big-spacer-bottom\">\n              <strong>{header}</strong>\n            </h1>\n            {startedPrice !== undefined && (\n              <p className=\"page-description\">\n                {translate('onboarding.create_organization.page.description')}\n              </p>\n            )}\n          </header>\n          {this.state.loading ? <DeferredSpinner /> : this.renderContent(query.almInstallId)}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  createOrganization: createOrganization as any,\n  deleteOrganization: deleteOrganization as any,\n  skipOnboarding: skipOnboarding as any\n};\n\nexport default whenLoggedIn(\n  withUserOrganizations(\n    withRouter(\n      connect(\n        null,\n        mapDispatchToProps\n      )(CreateOrganization)\n    )\n  )\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport * as api from '../../../api/organizations';\nimport { isGithub } from '../../../helpers/almIntegrations';\nimport * as actions from '../../../store/organizations';\n\nexport function createOrganization({\n  alm,\n  ...organization\n}: T.Organization & { installationId?: string }) {\n  return (dispatch: Dispatch) => {\n    return api\n      .createOrganization({ ...organization, name: organization.name || organization.key })\n      .then((newOrganization: T.Organization) => {\n        dispatch(actions.createOrganization({ ...newOrganization, alm }));\n        if (alm && alm.membersSync && !alm.personal && isGithub(alm.key)) {\n          api.syncMembers(newOrganization.key);\n        }\n        return newOrganization.key;\n      });\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function getAlmMembersUrl(key: string, url: string): string {\n  if (!url.endsWith('/')) {\n    url += '/';\n  }\n  if (isGithub(key)) {\n    return url.replace('github.com/', 'github.com/orgs/') + 'people';\n  }\n  return url + 'profile/members';\n}\n\nexport function getUserAlmKey(user: T.CurrentUser) {\n  return isLoggedIn(user) && user.externalProvider\n    ? sanitizeAlmId(user.externalProvider)\n    : undefined;\n}\n\nexport function hasAdvancedALMIntegration(user: T.CurrentUser) {\n  return (\n    isLoggedIn(user) && (isBitbucket(user.externalProvider) || isGithub(user.externalProvider))\n  );\n}\n\nexport function isBitbucket(almKey?: string): boolean {\n  return almKey ? almKey.startsWith('bitbucket') : false;\n}\n\nexport function isGithub(almKey?: string): boolean {\n  return almKey === 'github';\n}\n\nexport function isVSTS(almKey?: string): boolean {\n  return almKey === 'microsoft';\n}\n\nexport function sanitizeAlmId(almKey: string) {\n  if (isBitbucket(almKey)) {\n    return 'bitbucket';\n  }\n  return almKey;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { getExtensionFromCache } from './extensionsHandler';\n\nlet librariesExposed = false;\n\nexport function installScript(url: string, target: 'body' | 'head' = 'body'): Promise<any> {\n  return new Promise(resolve => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = `${getBaseUrl()}${url}`;\n    scriptTag.onload = resolve;\n    document.getElementsByTagName(target)[0].appendChild(scriptTag);\n  });\n}\n\nexport async function getExtensionStart(key: string) {\n  const fromCache = getExtensionFromCache(key);\n  if (fromCache) {\n    return Promise.resolve(fromCache);\n  }\n\n  if (!librariesExposed) {\n    // Async import allows to reduce initial vendor bundle size\n    const exposeLibraries = (await import('../app/components/extensions/exposeLibraries')).default;\n    exposeLibraries();\n    librariesExposed = true;\n  }\n\n  await installScript(`/static/${key}.js`);\n\n  const start = getExtensionFromCache(key);\n  if (start) {\n    return start;\n  }\n  return Promise.reject();\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as globalMessages from '../../store/globalMessages';\nimport getStore from './getStore';\n\nexport default function addGlobalSuccessMessage(message: string): void {\n  const store = getStore();\n  store.dispatch(globalMessages.addGlobalSuccessMessage(message));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { memoize } from 'lodash';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { cleanQuery, parseAsOptionalString, serializeString } from 'sonar-ui-common/helpers/query';\nimport { decodeJwt } from 'sonar-ui-common/helpers/strings';\nimport { isBitbucket, isGithub } from '../../../helpers/almIntegrations';\n\nexport const ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP =\n  'sonarcloud.import_org.binding_in_progress';\n\nexport const ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP =\n  'sonarcloud.import_org.redirect_to_projects';\n\nexport const BIND_ORGANIZATION_KEY = 'sonarcloud.bind_org.key';\n\nexport const BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP = 'sonarcloud.bind_org.redirect_to_org';\n\nexport enum Step {\n  OrganizationDetails,\n  Plan\n}\n\nexport function formatPrice(price?: number, noSign?: boolean) {\n  const priceFormatted = formatMeasure(price, 'FLOAT')\n    .replace(/[.|,]0$/, '')\n    .replace(/([.|,]\\d)$/, '$10');\n  return noSign ? priceFormatted : translateWithParameters('billing.price_format', priceFormatted);\n}\n\nexport interface Query {\n  almInstallId?: string;\n  almKey?: string;\n}\n\nexport const parseQuery = memoize(\n  (urlQuery: T.RawQuery = {}): Query => {\n    let almInstallId = undefined;\n    let almKey = undefined;\n\n    if (urlQuery['installation_id']) {\n      almKey = 'github';\n      almInstallId = parseAsOptionalString(urlQuery['installation_id']);\n    } else if (urlQuery['clientKey']) {\n      almKey = 'bitbucket';\n      almInstallId = parseAsOptionalString(urlQuery['clientKey']);\n    } else if (urlQuery['jwt']) {\n      const jwt = decodeJwt(urlQuery['jwt']);\n      if (jwt && jwt.iss) {\n        almKey = 'bitbucket';\n        almInstallId = jwt.iss;\n      }\n    }\n    return { almInstallId, almKey };\n  }\n);\n\nexport const serializeQuery = (query: Query): T.RawQuery =>\n  cleanQuery({\n    installation_id: isGithub(query.almKey) ? serializeString(query.almInstallId) : undefined,\n    clientKey: isBitbucket(query.almKey) ? serializeString(query.almInstallId) : undefined\n  });\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport handleRequiredAuthentication from 'sonar-ui-common/helpers/handleRequiredAuthentication';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getWrappedDisplayName } from './utils';\nimport { withCurrentUser } from './withCurrentUser';\n\nexport function whenLoggedIn<P>(WrappedComponent: React.ComponentType<P>) {\n  class Wrapper extends React.Component<P & { currentUser: T.CurrentUser }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'whenLoggedIn');\n\n    componentDidMount() {\n      if (!isLoggedIn(this.props.currentUser)) {\n        handleRequiredAuthentication();\n      }\n    }\n\n    render() {\n      if (isLoggedIn(this.props.currentUser)) {\n        return <WrappedComponent {...this.props} />;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  return withCurrentUser(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport {\n  getCorsJSON,\n  getJSON,\n  post,\n  postJSON,\n  requestTryAndRepeatUntil\n} from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { AlmLanguagesStats } from '../apps/tutorials/analyzeProject/utils';\n\nexport function bindAlmOrganization(data: { installationId: string; organization: string }) {\n  return post('/api/alm_integration/bind_organization', data).catch(throwGlobalError);\n}\n\nexport function getAlmAppInfo(): Promise<{ application: T.AlmApplication }> {\n  return getJSON('/api/alm_integration/show_app_info').catch(throwGlobalError);\n}\n\nexport interface GetAlmOrganizationResponse {\n  almOrganization: T.AlmOrganization;\n  boundOrganization?: T.OrganizationBase;\n}\n\nexport function getAlmOrganization(data: {\n  installationId: string;\n}): Promise<GetAlmOrganizationResponse> {\n  return requestTryAndRepeatUntil(\n    () => getJSON('/api/alm_integration/show_organization', data),\n    { max: 25, slowThreshold: 20 },\n    () => true,\n    [404]\n  )\n    .catch(throwGlobalError)\n    .then(({ almOrganization, boundOrganization }) => ({\n      almOrganization: {\n        ...almOrganization,\n        name: almOrganization.name || almOrganization.key\n      },\n      boundOrganization\n    }));\n}\n\nexport function getRepositories(data: {\n  organization: string;\n}): Promise<{ repositories: T.AlmRepository[] }> {\n  return getJSON('/api/alm_integration/list_repositories', data).catch(throwGlobalError);\n}\n\nexport function listUnboundApplications(): Promise<T.AlmUnboundApplication[]> {\n  return getJSON('/api/alm_integration/list_unbound_applications').then(\n    ({ applications }) =>\n      applications.map((app: T.AlmUnboundApplication) => ({ ...app, name: app.name || app.key })),\n    throwGlobalError\n  );\n}\n\nexport function provisionProject(data: {\n  installationKeys: string[];\n  organization: string;\n}): Promise<{ projects: Array<{ projectKey: string }> }> {\n  return postJSON('/api/alm_integration/provision_projects', {\n    ...data,\n    installationKeys: data.installationKeys.join(',')\n  }).catch(throwGlobalError);\n}\n\nexport function getGithubLanguages(url: string): Promise<AlmLanguagesStats> {\n  // We don't want to throwGlobalError\n  const apiUrl = url.replace('https://github.com/', 'https://api.github.com/repos/');\n  return getCorsJSON(`${apiUrl}/languages`);\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n/* eslint-disable jsx-a11y/no-static-element-interactions, jsx-a11y/no-noninteractive-tabindex */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\n\ninterface Props {\n  finished?: boolean;\n  onOpen: VoidFunction;\n  open: boolean;\n  renderForm: () => React.ReactNode;\n  renderResult: () => React.ReactNode;\n  stepNumber: number;\n  stepTitle: React.ReactNode;\n}\n\nexport default function Step(props: Props) {\n  const className = classNames('boxed-group', 'onboarding-step', {\n    'is-open': props.open,\n    'is-finished': props.finished\n  });\n\n  const clickable = !props.open && props.finished;\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    props.onOpen();\n  };\n\n  return (\n    <div\n      className={className}\n      onClick={clickable ? handleClick : undefined}\n      role={clickable ? 'button' : undefined}\n      tabIndex={clickable ? 0 : undefined}>\n      <div className=\"onboarding-step-number\">{props.stepNumber}</div>\n      {!props.open && props.renderResult()}\n      <div className=\"boxed-group-header\">\n        <h2>{props.stepTitle}</h2>\n      </div>\n      {!props.open && <div className=\"boxed-group-inner\" />}\n      <div className={classNames({ hidden: !props.open })}>{props.renderForm()}</div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\n\nconst TRIAL_DURATION_DAYS = 14;\n\nexport default function UpgradeOrganizationAdvantages() {\n  return (\n    <ul className=\"note\">\n      <Advantage>{translate('billing.upgrade_box.unlimited_private_projects')}</Advantage>\n      <Advantage>{translate('billing.upgrade_box.strict_control_private_data')}</Advantage>\n      <Advantage>{translate('billing.upgrade_box.cancel_anytime')}</Advantage>\n      <Advantage>\n        <strong>\n          {translateWithParameters('billing.upgrade_box.free_trial_x', TRIAL_DURATION_DAYS)}\n        </strong>\n      </Advantage>\n    </ul>\n  );\n}\n\nexport function Advantage({ children }: { children: React.ReactNode }) {\n  return (\n    <li className=\"display-flex-center little-spacer-bottom\">\n      <CheckIcon className=\"spacer-right\" fill={colors.lightGreen} />\n      {children}\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getSubscriptionPlans(): Promise<T.SubscriptionPlan[]> {\n  return getJSON('/api/billing/show_subscription_plans').then(\n    ({ subscriptionPlans }) => subscriptionPlans,\n    throwGlobalError\n  );\n}\n\nexport function giveDowngradeFeedback(data: {\n  organization: string;\n  feedback: string;\n  additionalFeedback?: string;\n}): Promise<void> {\n  return post('/api/billing/send_feedback', data);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMyOrganizations } from '../../apps/account/organizations/actions';\nimport { getMyOrganizations, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\ninterface OwnProps {\n  fetchMyOrganizations: () => Promise<void>;\n  userOrganizations: T.Organization[];\n}\n\nexport function withUserOrganizations<P>(\n  WrappedComponent: React.ComponentType<P & Partial<OwnProps>>\n) {\n  class Wrapper extends React.Component<P & OwnProps> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withUserOrganizations');\n\n    componentDidMount() {\n      this.props.fetchMyOrganizations();\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  const mapDispatchToProps = { fetchMyOrganizations: fetchMyOrganizations as any };\n\n  function mapStateToProps(state: Store) {\n    return { userOrganizations: getMyOrganizations(state) };\n  }\n\n  return connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Wrapper);\n}\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".onboarding-step{position:relative;padding-left:34px}.onboarding-step:not(.is-open):not(.is-finished){opacity:.4}.onboarding-step .boxed-group-actions{height:24px;line-height:24px}.onboarding-step hr{margin-left:-54px}.onboarding-step-number{position:absolute;top:15px;left:15px;width:24px;height:24px;line-height:24px;border-radius:24px;background-color:#b9b9b9;color:#fff;font-size:14px;text-align:center}.onboarding-step.is-open .onboarding-step-number{background-color:#236a97}.onboarding-step.is-finished{cursor:pointer;outline:none}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface ChildrenProps {\n  onSubmit: React.FormEventHandler;\n  processingUpgrade: boolean;\n  renderFormFields: () => React.ReactNode;\n  renderNextCharge: (className?: string) => React.ReactNode;\n  renderRecap: () => React.ReactNode;\n  renderSubmitButton: (submitText?: string) => React.ReactNode;\n  renderSubmitGroup: (submitText?: string) => React.ReactNode;\n}\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  initialCountry?: string;\n  currentUser: T.CurrentUser;\n  onCommit: () => void | Promise<void>;\n  onFailToUpgrade?: () => void;\n  organizationKey: string | (() => Promise<string>);\n  subscriptionPlans: T.SubscriptionPlan[];\n}\n\nexport default class BillingFormShim extends React.Component<Props> {\n  render() {\n    const { BillingForm } = (window as any).SonarBilling;\n    return <BillingForm {...this.props} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport * as api from '../../api/organizations';\nimport { addGlobalSuccessMessage } from '../../store/globalMessages';\nimport * as actions from '../../store/organizations';\n\nexport function updateOrganization(key: string, changes: T.OrganizationBase) {\n  return (dispatch: Dispatch<any>) => {\n    return api.updateOrganization(key, changes).then(() => {\n      dispatch(actions.updateOrganization(key, changes));\n      dispatch(addGlobalSuccessMessage(translate('organization.updated')));\n    });\n  };\n}\n\nexport function deleteOrganization(key: string) {\n  return (dispatch: Dispatch<any>) => {\n    return api.deleteOrganization(key).then(() => {\n      dispatch(actions.deleteOrganization(key));\n    });\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { sanitizeAlmId } from '../../../helpers/almIntegrations';\n\ninterface Props {\n  hideIcons?: boolean;\n  onChange: (organization: T.Organization) => void;\n  organization: string;\n  organizations: T.Organization[];\n}\n\nexport default function OrganizationSelect({\n  hideIcons,\n  onChange,\n  organization,\n  organizations\n}: Props) {\n  const optionRenderer = getOptionRenderer(hideIcons);\n  return (\n    <Select\n      autoFocus={!organization}\n      className=\"input-super-large\"\n      clearable={false}\n      id=\"select-organization\"\n      labelKey=\"name\"\n      onChange={onChange}\n      optionRenderer={optionRenderer}\n      options={sortBy(organizations, o => o.name.toLowerCase())}\n      placeholder={translate('onboarding.import_organization.choose_organization')}\n      required={true}\n      value={organization}\n      valueKey=\"key\"\n      valueRenderer={optionRenderer}\n    />\n  );\n}\n\nexport function getOptionRenderer(hideIcons?: boolean) {\n  return function optionRenderer(organization: T.Organization) {\n    const icon = organization.alm\n      ? `sonarcloud/${sanitizeAlmId(organization.alm.key)}`\n      : 'sonarcloud-square-logo';\n    const isPaidOrg = organization.subscription === 'PAID';\n    return (\n      <div className=\"display-flex-space-between\">\n        <span className=\"text-ellipsis flex-1\">\n          {!hideIcons && (\n            <img\n              alt={organization.alm ? organization.alm.key : 'SonarCloud'}\n              className=\"little-spacer-right\"\n              height={14}\n              src={`${getBaseUrl()}/images/${icon}.svg`}\n            />\n          )}\n          {organization.name}\n          <span className=\"note little-spacer-left\">{organization.key}</span>\n        </span>\n        {isPaidOrg && <div className=\"badge\">{translate('organization.paid_plan.badge')}</div>}\n      </div>\n    );\n  };\n}\n"],"sourceRoot":""}