{"version":3,"sources":["webpack:///./src/main/js/apps/organizations/actions.ts","webpack:///./src/main/js/apps/create/components/OrganizationSelect.tsx","webpack:///./src/main/js/apps/create/organization/AlmApplicationInstalling.tsx","webpack:///./src/main/js/apps/create/organization/AutoOrganizationBind.tsx","webpack:///./src/main/js/apps/create/components/OrganizationAvatarInput.tsx","webpack:///./src/main/js/apps/create/components/OrganizationKeyInput.tsx","webpack:///./src/main/js/apps/create/components/OrganizationUrlInput.tsx","webpack:///./src/main/js/apps/create/organization/OrganizationDetailsForm.tsx","webpack:///./src/main/js/apps/create/organization/OrganizationDetailsStep.tsx","webpack:///./src/main/js/apps/create/components/FreeCardPlan.tsx","webpack:///./src/main/js/apps/create/components/PaidCardPlan.tsx","webpack:///./src/main/js/apps/create/organization/PlanSelect.tsx","webpack:///./src/main/js/apps/create/organization/AutoOrganizationCreate.tsx","webpack:///./src/main/js/apps/create/organization/PlanStep.tsx","webpack:///./src/main/js/apps/create/organization/ManualOrganizationCreate.tsx","webpack:///./src/main/js/apps/create/organization/RemoteOrganizationChoose.tsx","webpack:///./src/main/js/apps/create/organization/CreateOrganization.tsx","webpack:///./src/main/js/apps/create/organization/actions.ts","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/helpers/almIntegrations.ts","webpack:///./src/main/js/helpers/extensions.ts","webpack:///./src/main/js/app/utils/addGlobalSuccessMessage.ts","webpack:///./src/main/js/apps/create/organization/utils.ts","webpack:///./src/main/js/components/hoc/whenLoggedIn.tsx","webpack:///./src/main/js/api/alm-integration.ts","webpack:///./src/main/js/apps/tutorials/styles.css?5461","webpack:///./src/main/js/apps/tutorials/components/Step.tsx","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationAdvantages.tsx","webpack:///./src/main/js/api/billing.ts","webpack:///./src/main/js/components/hoc/withUserOrganizations.tsx","webpack:///./src/main/js/apps/tutorials/styles.css","webpack:///./src/main/js/apps/create/components/BillingFormShim.tsx"],"names":["__webpack_require__","d","__webpack_exports__","updateOrganization","deleteOrganization","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_0__","_api_organizations__WEBPACK_IMPORTED_MODULE_1__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_2__","_store_organizations__WEBPACK_IMPORTED_MODULE_3__","key","changes","dispatch","then","Object","OrganizationSelect","_a","hideIcons","onChange","organization","organizations","optionRenderer","icon","alm","_helpers_almIntegrations__WEBPACK_IMPORTED_MODULE_5__","isPaidOrg","subscription","react__WEBPACK_IMPORTED_MODULE_1__","className","alt","height","src","sonar_ui_common_helpers_urls__WEBPACK_IMPORTED_MODULE_4__","name","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","getOptionRenderer","sonar_ui_common_components_controls_Select__WEBPACK_IMPORTED_MODULE_2___default","a","autoFocus","clearable","id","labelKey","options","lodash_sortBy__WEBPACK_IMPORTED_MODULE_0___default","o","toLowerCase","placeholder","required","value","valueKey","valueRenderer","AlmApplicationInstalling","almKey","index_js_exposed","DeferredSpinner_default","customSpinner","l10n","almIntegrations","_super","AutoOrganizationBind","props","_this","call","this","mounted","handleChange","setState","handleSubmit","event","preventDefault","state","submitting","onBindOrganization","stopSubmitting","getInitialSelectedOrganization","__extends","prototype","componentDidMount","componentWillUnmount","unboundOrganizations","length","render","onSubmit","Alert","display","variant","react_router_es","target","to","pathname","buttons","disabled","OrganizationAvatarInput","apply","arguments","error","undefined","editing","touched","currentTarget","trim","validateUrl","handleBlur","handleFocus","OrganizationAvatarInput_extends","initialValue","Boolean","url","valid_url","isInvalid","isValidUrl","isValid","ValidationInput_default","description","label","OrganizationAvatar","avatar","classnames","is-invalid","is-valid","onBlur","onFocus","type","OrganizationKeyInput","checkFreeKey","validating","catch","validateKey","debounce_default","OrganizationKeyInput_extends","test","helpers_urls","replace","maxLength","OrganizationUrlInput","OrganizationUrlInput_extends","OrganizationDetailsForm","handleAdditionalClick","additional","handleAvatarUpdate","handleDescriptionUpdate","handleKeyUpdate","handleNameUpdate","handleUrlUpdate","canSubmit","onContinue","OrganizationDetailsForm_extends","infoBlock","components_OrganizationKeyInput","onClick","DropdownIcon_default","turned","hidden","htmlFor","components_OrganizationAvatarInput","rows","components_OrganizationUrlInput","submitText","OrganizationDetailsStep","renderForm","children","renderResult","AlertSuccessIcon_default","OrganizationDetailsStep_extends","Step","finished","onOpen","open","stepNumber","stepTitle","FreeCardPlan","almName","hasWarning","FreeCardPlan_rest","showInfo","showWarning","RadioCard_default","FreeCardPlan_assign","title","titleInfo","utils","index_es","defaultMessage","values","PaidCardPlan","isRecommended","startingPrice","PaidCardPlan_rest","PaidCardPlan_assign","recommended","price","UpgradeOrganizationAdvantages","Plan","Filters","PlanSelect","handleFreePlanClick","Free","handlePaidPlanClick","Paid","PlanSelect_extends","almApplication","almOrganization","plan","hasPrivateRepo","privateRepos","onlyPrivateRepo","publicRepos","cards","selected","aria-label","role","reverse","BillingForm","withCurrentUser","BillingFormShim","PlanStep","handlePlanChange","handleFreePlanSubmit","createOrganization","onDone","subscriptionPlans","ready","organization_PlanSelect","onCommit","onFailToUpgrade","onUpgradeFail","organizationKey","renderFormFields","renderSubmitGroup","PlanStep_extends","extensions","AutoOrganizationCreate","handleBindOrganization","alm_integration","installationId","almInstallId","onOrgCreated","handleCreateOrganization","AutoOrganizationCreate_assign","membersSync","personal","almUrl","Promise","reject","handleOptionChange","filter","Create","AutoOrganizationCreate_extends","step","hasUnboundOrgs","organization_OrganizationDetailsStep","handleOrgDetailsStepOpen","OrganizationDetails","width","handleCancelImport","RadioToggle_default","onCheck","Bind","organization_OrganizationDetailsForm","href","rel","handleOrgDetailsFinish","organization_AutoOrganizationBind","organization_PlanStep","ManualOrganizationCreate","ManualOrganizationCreate_extends","RemoteOrganizationChoose_RemoteOrganizationChoose","RemoteOrganizationChoose","unboundInstallationId","router","push","query","handleInstallAppClick","storage","Date","now","toString","handleInstallationChange","renderOption","RemoteOrganizationChoose_extends","almUnboundApplications","boundOrganization","boundAvatar","small","boundName","IdentityProviderLink_default","backgroundColor","iconPath","installationUrl","Select_default","sortBy_default","organization_RemoteOrganizationChoose","CreateOrganization_CreateOrganization","CreateOrganization","almOrgLoading","bindingExistingOrg","loading","fetchAlmApplication","application","fetchAlmOrganization","resolve","setValidOrgKey","isStoredTimestampValid","urls","fetchAlmUnboundApplications","fetchSubscriptionPlans","billing","updateUrlQuery","handleOrgCreated","skipOnboarding","tab","handlePlanDone","timestampKey","storedTimestamp","difference_in_minutes","Number","onTabChange","updateUrlState","getHeader","strings","keys","concat","times_default","i","join","find","Math","ceil","random","CreateOrganization_assign","stopLoading","location","renderContent","commonProps","hasAutoImport","organization_ManualOrganizationCreate","Tabs_default","tabs","node","organization_AutoOrganizationCreate","userOrganizations","_b","actions","admin","CreateOrganization_extends","pages","currentUser","bindAndRedirectToOrganizationSettings","initRequests","all","componentDidUpdate","prevProps","prevQuery","addGlobalSuccessMessage","header","startedPrice","Helmet","titleTemplate","A11ySkipTarget","anchor","mapDispatchToProps","__rest","__assign","newOrganization","store_organizations","users","whenLoggedIn","withUserOrganizations","es","react__WEBPACK_IMPORTED_MODULE_0__","_A11yContext__WEBPACK_IMPORTED_MODULE_2__","Consumer","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_1__","weight","getAlmMembersUrl","getUserAlmKey","hasAdvancedALMIntegration","isBitbucket","isGithub","isVSTS","sanitizeAlmId","_users__WEBPACK_IMPORTED_MODULE_0__","endsWith","user","externalProvider","startsWith","librariesExposed","installScript","scriptTag","document","createElement","sonar_ui_common_helpers_urls__WEBPACK_IMPORTED_MODULE_0__","onload","getElementsByTagName","appendChild","getExtensionStart","fromCache","_extensionsHandler__WEBPACK_IMPORTED_MODULE_1__","e","bind","exposeLibraries","sent","default","start","_store_globalMessages__WEBPACK_IMPORTED_MODULE_0__","_getStore__WEBPACK_IMPORTED_MODULE_1__","message","ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP","ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP","BIND_ORGANIZATION_KEY","BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP","formatPrice","noSign","priceFormatted","sonar_ui_common_helpers_measures__WEBPACK_IMPORTED_MODULE_2__","parseQuery","lodash_memoize__WEBPACK_IMPORTED_MODULE_0___default","urlQuery","sonar_ui_common_helpers_query__WEBPACK_IMPORTED_MODULE_3__","jwt","sonar_ui_common_helpers_strings__WEBPACK_IMPORTED_MODULE_4__","iss","serializeQuery","installation_id","clientKey","WrappedComponent","Wrapper","_helpers_users__WEBPACK_IMPORTED_MODULE_2__","sonar_ui_common_helpers_handleRequiredAuthentication__WEBPACK_IMPORTED_MODULE_1___default","displayName","_utils__WEBPACK_IMPORTED_MODULE_3__","_withCurrentUser__WEBPACK_IMPORTED_MODULE_4__","bindAlmOrganization","data","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","getAlmAppInfo","getAlmOrganization","max","slowThreshold","getRepositories","listUnboundApplications","applications","map","app","provisionProject","installationKeys","getGithubLanguages","apiUrl","content","module","hmr","transform","insertInto","locals","exports","classnames__WEBPACK_IMPORTED_MODULE_0__","is-open","is-finished","clickable","tabIndex","sonar_ui_common_components_icons_CheckIcon__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_icons_CheckIcon__WEBPACK_IMPORTED_MODULE_1___default","n","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__","_app_theme__WEBPACK_IMPORTED_MODULE_3__","TRIAL_DURATION_DAYS","Advantage","fill","lightGreen","getSubscriptionPlans","giveDowngradeFeedback","fetchMyOrganizations","_utils__WEBPACK_IMPORTED_MODULE_4__","_apps_account_organizations_actions__WEBPACK_IMPORTED_MODULE_2__","react_redux__WEBPACK_IMPORTED_MODULE_1__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_3__","window","SonarBilling"],"mappings":"6FAoBAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,IAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAKM,SAAUG,EAAmBM,EAAaC,GAC9C,OAAO,SAACC,GACN,OAAOL,EAAA,EAAuBG,EAAKC,GAASE,KAAK,WAC/CD,EAASH,EAAA,EAA2BC,EAAKC,IACzCC,EAASE,OAAAN,EAAA,EAAAM,CAAwBA,OAAAR,EAAA,UAAAQ,CAAU,6BAK3C,SAAUT,EAAmBK,GACjC,OAAO,SAACE,GACN,OAAOL,EAAA,EAAuBG,GAAKG,KAAK,WACtCD,EAASH,EAAA,EAA2BC,qJCJ5B,SAAUK,EAAmBC,OACzCC,EAAAD,EAAAC,UACAC,EAAAF,EAAAE,SACAC,EAAAH,EAAAG,aACAC,EAAAJ,EAAAI,cAEMC,EAoBF,SAA4BJ,GAChC,OAAO,SAAwBE,GAC7B,IAAMG,EAAOH,EAAaI,IACtB,cAAcT,OAAAU,EAAA,EAAAV,CAAcK,EAAaI,IAAIb,KAC7C,yBACEe,EAA0C,SAA9BN,EAAaO,aAC/B,OACEC,EAAA,qBAAKC,UAAU,8BACbD,EAAA,sBAAMC,UAAU,yBACZX,GACAU,EAAA,qBACEE,IAAKV,EAAaI,IAAMJ,EAAaI,IAAIb,IAAM,aAC/CkB,UAAU,sBACVE,OAAQ,GACRC,IAAQjB,OAAAkB,EAAA,WAAAlB,GAAY,WAAWQ,EAAI,SAGtCH,EAAac,KACdN,EAAA,sBAAMC,UAAU,2BAA2BT,EAAaT,MAEzDe,GAAaE,EAAA,qBAAKC,UAAU,SAASd,OAAAoB,EAAA,UAAApB,CAAU,mCAxC/BqB,CAAkBlB,GACzC,OACEU,EAAA,cAACS,EAAAC,EAAM,CACLC,WAAYnB,EACZS,UAAU,oBACVW,WAAW,EACXC,GAAG,sBACHC,SAAS,OACTvB,SAAUA,EACVG,eAAgBA,EAChBqB,QAASC,IAAOvB,EAAe,SAAAwB,GAAK,OAAAA,EAAEX,KAAFY,gBACpCC,YAAahC,OAAAoB,EAAA,UAAApB,CAAU,sDACvBiC,UAAU,EACVC,MAAO7B,EACP8B,SAAS,MACTC,cAAe7B,iyBC9BP,SAAU8B,EAAyBnC,OAAEoC,EAAApC,EAAAoC,OACjD,OACEC,EAAA,cAACC,EAAAjB,EAAe,CACdkB,cACEF,EAAA,qBAAKzB,UAAU,gCACbyB,EAAA,qBAAKzB,UAAU,+BACbyB,EAAA,mBAAGzB,UAAU,YACbyB,EAAA,mBAAGzB,UAAU,kBACVd,OAAA0C,EAAA,wBAAA1C,CACC,4CACAsC,EAAStC,OAAA0C,EAAA,UAAA1C,CAAUA,OAAA2C,EAAA,EAAA3C,CAAcsC,IAAW,wYCK5D,SAAAM,GAGE,SAAAC,EAAYC,GAAZ,IAAAC,EACEH,EAAAI,KAAAC,KAAMH,IAAMG,YAHdF,EAAAG,SAAU,EAsBVH,EAAAI,aAAe,SAACjD,OAAEN,EAAAM,EAAAN,IAChBmD,EAAKK,SAAS,CAAE/C,aAAcT,KAGhCmD,EAAAM,aAAe,SAACC,GACdA,EAAMC,iBACE,IAAAlD,EAAA0C,EAAAS,MAAAnD,aACJA,IACF0C,EAAKK,SAAS,CAAEK,YAAY,IAC5BV,EAAKD,MAAMY,mBAAmBrD,GAAcN,KAAKgD,EAAKY,eAAgBZ,EAAKY,kBAI/EZ,EAAAY,eAAiB,WACXZ,EAAKG,SACPH,EAAKK,SAAS,CAAEK,YAAY,KAjC9BV,EAAKS,MAAQ,CAAEnD,aAAc0C,EAAKa,+BAA+Bd,GAAQW,YAAY,KAsEzF,OA3EkDI,EAAAhB,EAAAD,GAQhDC,EAAAiB,UAAAC,kBAAA,WACEd,KAAKC,SAAU,GAGjBL,EAAAiB,UAAAE,qBAAA,WACEf,KAAKC,SAAU,GAGjBL,EAAAiB,UAAAF,+BAAA,SAA+Bd,GAC7B,OAA0C,IAAtCA,EAAMmB,qBAAqBC,OACtBpB,EAAMmB,qBAAqB,GAAGrE,IAEhC,IAsBTiD,EAAAiB,UAAAK,OAAA,WACU,IAAA7B,EAAAW,KAAAH,MAAAR,OACFpC,EAAA+C,KAAAO,MAAEnD,EAAAH,EAAAG,aAAcoD,EAAAvD,EAAAuD,WACtB,OACElB,EAAA,sBAAMb,GAAG,yBAAyB0C,SAAUnB,KAAKI,cAC/Cd,EAAA,cAACtC,EAAA,EAAkB,CACjBG,SAAU6C,KAAKE,aACf9C,aAAcA,EACdC,cAAe2C,KAAKH,MAAMmB,uBAE3BjE,OAAA2C,EAAA,EAAA3C,CAASsC,IACRC,EAAA,cAAC8B,EAAA,MAAK,CAACvD,UAAU,+BAA+BwD,QAAQ,QAAQC,QAAQ,QACrEvE,OAAA0C,EAAA,wBAAA1C,CACC,8DACAA,OAAA0C,EAAA,UAAA1C,CAAU,eAAgBsC,IAE5BC,EAAA,cAACiC,EAAA,KAAI,CACH1D,UAAU,cACV2D,OAAO,SACPC,GAAI,CAAEC,SAAU,8CACf3E,OAAA0C,EAAA,UAAA1C,CAAU,gBAIjBuC,EAAA,qBAAKzB,UAAU,sCACbyB,EAAA,cAACqC,EAAA,aAAY,CAACC,SAAUpB,IAAepD,GACpCL,OAAA0C,EAAA,UAAA1C,CAAU,wCAEZyD,GAAclB,EAAA,cAACC,EAAAjB,EAAe,CAACT,UAAU,mBAKpD+B,EA3EA,CAAkDN,EAAA,kZCAlD,SAAAK,GAAA,SAAAkC,IAAA,IAAA/B,EAAA,OAAAH,KAAAmC,MAAA9B,KAAA+B,YAAA/B,YACEF,EAAAS,MAAe,CAAEyB,WAAOC,EAAWC,SAAS,EAAOC,SAAS,EAAOlD,MAAO,IAU1Ea,EAAAI,aAAe,SAACG,GACd,IAAMpB,EAAQoB,EAAM+B,cAAcnD,MAAMoD,OAClCL,EAAQlC,EAAKwC,YAAYrD,GAC/Ba,EAAKK,SAAS,CAAE6B,MAAKA,EAAEG,SAAS,EAAMlD,MAAKA,IAC3Ca,EAAKD,MAAM1C,cAAmB8E,IAAVD,EAAsB/C,OAAQgD,IAGpDnC,EAAAyC,WAAa,WACXzC,EAAKK,SAAS,CAAE+B,SAAS,KAG3BpC,EAAA0C,YAAc,WACZ1C,EAAKK,SAAS,CAAE+B,SAAS,OAiD7B,OAxEqDO,EAAAZ,EAAAlC,GAGnDkC,EAAAhB,UAAAC,kBAAA,WACE,GAAId,KAAKH,MAAM6C,aAAc,CAC3B,IAAMzD,EAAQe,KAAKH,MAAM6C,aACnBV,EAAQhC,KAAKsC,YAAYrD,GAC/Be,KAAKG,SAAS,CAAE6B,MAAKA,EAAEG,QAASQ,QAAQX,GAAQ/C,MAAKA,MAmBzD4C,EAAAhB,UAAAyB,YAAA,SAAYM,GACV,GAAIA,EAAI3B,OAAS,IAAMlE,OAAA8F,EAAA,SAAA9F,CAAS6F,GAC9B,OAAO7F,OAAA0C,EAAA,UAAA1C,CAAU,6CAKrB8E,EAAAhB,UAAAK,OAAA,WACE,IAAM4B,EAAY9C,KAAKO,MAAM4B,UAAYnC,KAAKO,MAAM2B,cAAgCD,IAArBjC,KAAKO,MAAMyB,MACpEe,OAAkCd,IAArBjC,KAAKO,MAAMyB,OAA4C,KAArBhC,KAAKO,MAAMtB,MAC1D+D,EAAUhD,KAAKO,MAAM4B,SAAWY,EACtC,OACEzD,EAAA,cAAC2D,EAAA3E,EAAe,CACd4E,YAAanG,OAAA0C,EAAA,UAAA1C,CAAU,qDACvBiF,MAAOhC,KAAKO,MAAMyB,MAClBvD,GAAG,sBACHqE,UAAWA,EACXE,QAASA,EACTG,MAAOpG,OAAA0C,EAAA,UAAA1C,CAAU,0CACjBuC,EAAA,cAAAA,EAAA,eACIyD,GAAc/C,KAAKH,MAAM3B,OACzBoB,EAAA,cAAC8D,EAAA,EAAkB,CACjBvF,UAAU,8BACVT,aAAc,CACZiG,OAAQN,EAAa/C,KAAKO,MAAMtB,WAAQgD,EACxC/D,KAAM8B,KAAKH,MAAM3B,MAAQ,MAI/BoB,EAAA,uBACEzB,UAAWyF,EAAW,oBAAqB,cAAe,CACxDC,aAAcT,EACdU,WAAYR,IAEdvE,GAAG,sBACHgF,OAAQzD,KAAKuC,WACbpF,SAAU6C,KAAKE,aACfwD,QAAS1D,KAAKwC,YACdzD,YAAahC,OAAA0C,EAAA,UAAA1C,CAAU,qDACvB4G,KAAK,OACL1E,MAAOe,KAAKO,MAAMtB,WAM9B4C,EAxEA,CAAqDvC,EAAA,gXCArD,SAAAK,GAEE,SAAAiE,EAAY/D,GAAZ,IAAAC,EACEH,EAAAI,KAAAC,KAAMH,IAAMG,YAFdF,EAAAG,SAAU,EAmBVH,EAAA+D,aAAe,SAAClH,GAEd,OADAmD,EAAKK,SAAS,CAAE2D,YAAY,IACrB/G,OAAAM,EAAA,EAAAN,CAAgBJ,GACpBG,KAAK,SAAAM,GACA0C,EAAKG,eACcgC,IAAjB7E,GACF0C,EAAKK,SAAS,CAAE6B,WAAOC,EAAW6B,YAAY,IAC9ChE,EAAKD,MAAM1C,SAASR,KAEpBmD,EAAKK,SAAS,CACZ6B,MAAOjF,OAAA0C,EAAA,UAAA1C,CAAU,0DACjBoF,SAAS,EACT2B,YAAY,IAEdhE,EAAKD,MAAM1C,cAAS8E,OAIzB8B,MAAM,WACDjE,EAAKG,UACPH,EAAKK,SAAS,CAAE6B,WAAOC,EAAW6B,YAAY,IAC9ChE,EAAKD,MAAM1C,SAASR,OAK5BmD,EAAAI,aAAe,SAACG,GACN,IAAApB,EAAAoB,EAAA+B,cAAAnD,MACRa,EAAKK,SAAS,CAAEgC,SAAS,EAAMlD,MAAKA,IACpCa,EAAKkE,YAAY/E,IA7CjBa,EAAKS,MAAQ,CAAEyB,WAAOC,EAAWE,SAAS,EAAO2B,YAAY,EAAO7E,MAAO,IAC3Ea,EAAK+D,aAAeI,IAASnE,EAAK+D,aAAc,OA0FpD,OA/FkDK,GAAAN,EAAAjE,GAQhDiE,EAAA/C,UAAAC,kBAAA,WACEd,KAAKC,SAAU,OACiBgC,IAA5BjC,KAAKH,MAAM6C,eACb1C,KAAKG,SAAS,CAAElB,MAAOe,KAAKH,MAAM6C,eAClC1C,KAAKgE,YAAYhE,KAAKH,MAAM6C,gBAIhCkB,EAAA/C,UAAAE,qBAAA,WACEf,KAAKC,SAAU,GAmCjB2D,EAAA/C,UAAAmD,YAAA,SAAYrH,GACNA,EAAIsE,OAAS,MAAQ,gCAAgCkD,KAAKxH,IAC5DqD,KAAKG,SAAS,CACZ6B,MAAOjF,OAAA0C,EAAA,UAAA1C,CAAU,0DACjBoF,SAAS,IAEXnC,KAAKH,MAAM1C,cAAS8E,IAEpBjC,KAAK6D,aAAalH,IAItBiH,EAAA/C,UAAAK,OAAA,WACE,IAAM4B,EAAY9C,KAAKO,MAAM4B,cAAgCF,IAArBjC,KAAKO,MAAMyB,MAC7CgB,EAAUhD,KAAKO,MAAM4B,UAAYnC,KAAKO,MAAMuD,iBAAmC7B,IAArBjC,KAAKO,MAAMyB,MAC3E,OACE1C,EAAA,cAAC2D,EAAA3E,EAAe,CACd0D,MAAOhC,KAAKO,MAAMyB,MAClBvD,GAAG,mBACHqE,UAAWA,EACXE,QAASA,EACTG,MAAOpG,OAAA0C,EAAA,UAAA1C,CAAU,oDACjBiC,UAAU,GACVM,EAAA,qBAAKzB,UAAU,gCACbyB,EAAA,sBAAMzB,UAAU,uBACbd,OAAAqH,EAAA,WAAArH,GAAasH,QAAQ,cAAe,IAAM,mBAE7C/E,EAAA,uBACEf,WAAW,EACXV,UAAWyF,EAAW,oBAAqB,CACzCC,aAAcT,EACdU,WAAYR,IAEdvE,GAAG,mBACH6F,UAAW,IACXnH,SAAU6C,KAAKE,aACfyD,KAAK,OACL1E,MAAOe,KAAKO,MAAMtB,WAM9B2E,EA/FA,CAAkDtE,EAAA,8VCFlD,SAAAK,GAAA,SAAA4E,IAAA,IAAAzE,EAAA,OAAAH,KAAAmC,MAAA9B,KAAA+B,YAAA/B,YACEF,EAAAS,MAAe,CAAEyB,WAAOC,EAAWC,SAAS,EAAOC,SAAS,EAAOlD,MAAO,IAU1Ea,EAAAI,aAAe,SAACG,GACd,IAAMpB,EAAQoB,EAAM+B,cAAcnD,MAAMoD,OAClCL,EAAQlC,EAAKwC,YAAYrD,GAC/Ba,EAAKK,SAAS,CAAE6B,MAAKA,EAAEG,SAAS,EAAMlD,MAAKA,IAC3Ca,EAAKD,MAAM1C,cAAmB8E,IAAVD,EAAsB/C,OAAQgD,IAGpDnC,EAAAyC,WAAa,WACXzC,EAAKK,SAAS,CAAE+B,SAAS,KAG3BpC,EAAA0C,YAAc,WACZ1C,EAAKK,SAAS,CAAE+B,SAAS,OAmC7B,OA1DkDsC,GAAAD,EAAA5E,GAGhD4E,EAAA1D,UAAAC,kBAAA,WACE,GAAId,KAAKH,MAAM6C,aAAc,CAC3B,IAAMzD,EAAQe,KAAKH,MAAM6C,aACnBV,EAAQhC,KAAKsC,YAAYrD,GAC/Be,KAAKG,SAAS,CAAE6B,MAAKA,EAAEG,QAASQ,QAAQX,GAAQ/C,MAAKA,MAmBzDsF,EAAA1D,UAAAyB,YAAA,SAAYM,GACV,GAAIA,EAAI3B,OAAS,IAAMlE,OAAA8F,EAAA,SAAA9F,CAAS6F,GAC9B,OAAO7F,OAAA0C,EAAA,UAAA1C,CAAU,6CAKrBwH,EAAA1D,UAAAK,OAAA,WACE,IAAM4B,EAAY9C,KAAKO,MAAM4B,UAAYnC,KAAKO,MAAM2B,cAAgCD,IAArBjC,KAAKO,MAAMyB,MACpEgB,EAAUhD,KAAKO,MAAM4B,cAAgCF,IAArBjC,KAAKO,MAAMyB,OAA4C,KAArBhC,KAAKO,MAAMtB,MACnF,OACEK,EAAA,cAAC2D,EAAA3E,EAAe,CACd0D,MAAOhC,KAAKO,MAAMyB,MAClBvD,GAAG,mBACHqE,UAAWA,EACXE,QAASA,EACTG,MAAOpG,OAAA0C,EAAA,UAAA1C,CAAU,uCACjBuC,EAAA,uBACEzB,UAAWyF,EAAW,oBAAqB,cAAe,CACxDC,aAAcT,EACdU,WAAYR,IAEdvE,GAAG,mBACHgF,OAAQzD,KAAKuC,WACbpF,SAAU6C,KAAKE,aACfwD,QAAS1D,KAAKwC,YACdmB,KAAK,OACL1E,MAAOe,KAAKO,MAAMtB,UAK5BsF,EA1DA,CAAkDjF,EAAA,8VCYlD,SAAAK,GAGE,SAAA8E,EAAY5E,GAAZ,IAAAC,EACEH,EAAAI,KAAAC,KAAMH,IAAMG,KAHdF,EAAAG,SAAU,EAkCVH,EAAA4E,sBAAwB,WACtB5E,EAAKK,SAAS,SAAAI,GAAS,MAAC,CAAEoE,YAAapE,EAAhBoE,eAGzB7E,EAAA8E,mBAAqB,SAACvB,GACpBvD,EAAKK,SAAS,CAAEkD,OAAMA,KAGxBvD,EAAA+E,wBAA0B,SAACxE,GACzBP,EAAKK,SAAS,CAAE+C,YAAa7C,EAAM+B,cAAcnD,SAGnDa,EAAAgF,gBAAkB,SAACnI,GACjBmD,EAAKK,SAAS,CAAExD,IAAGA,KAGrBmD,EAAAiF,iBAAmB,SAAC1E,GAClBP,EAAKK,SAAS,CAAEjC,KAAMmC,EAAM+B,cAAcnD,SAG5Ca,EAAAkF,gBAAkB,SAACpC,GACjB9C,EAAKK,SAAS,CAAEyC,IAAGA,KAGrB9C,EAAAM,aAAe,SAACC,GACdA,EAAMC,iBACE,IAAAC,EAAAT,EAAAS,MACJT,EAAKmF,UAAU1E,KACjBT,EAAKK,SAAS,CAAEK,YAAY,IAC5BV,EAAKD,MACFqF,WAAW,CACV7B,OAAQ9C,EAAM8C,OACdH,YAAa3C,EAAM2C,YACnBvG,IAAK4D,EAAM5D,IACXuB,KAAMqC,EAAMrC,KACZ0E,IAAKrC,EAAMqC,MAEZ9F,KAAKgD,EAAKY,eAAgBZ,EAAKY,kBAItCZ,EAAAY,eAAiB,WACXZ,EAAKG,SACPH,EAAKK,SAAS,CAAEK,YAAY,KAzEtB,IAAApD,EAAAyC,EAAAzC,oBACR0C,EAAKS,MAAQ,CACXoE,YAAY,EACZtB,OAASjG,GAAgBA,EAAaiG,QAAW,GACjDH,YAAc9F,GAAgBA,EAAa8F,aAAgB,GAC3DvG,IAAMS,GAAgBA,EAAaT,UAAQsF,EAC3C/D,KAAOd,GAAgBA,EAAac,MAAS,GAC7CsC,YAAY,EACZoC,IAAMxF,GAAgBA,EAAawF,KAAQ,MA8IjD,OA3JqDuC,GAAAV,EAAA9E,GAiBnD8E,EAAA5D,UAAAC,kBAAA,WACEd,KAAKC,SAAU,GAGjBwE,EAAA5D,UAAAE,qBAAA,WACEf,KAAKC,SAAU,GAGjBwE,EAAA5D,UAAAoE,UAAA,SAAU1E,GACR,OAAOoC,aACSV,IAAd1B,EAAM5D,UACWsF,IAAf1B,EAAMrC,WACgB+D,IAAtB1B,EAAM2C,kBACWjB,IAAjB1B,EAAM8C,aACQpB,IAAd1B,EAAMqC,MAmDZ6B,EAAA5D,UAAAK,OAAA,WACU,IAAAV,EAAAR,KAAAO,MAAAC,WACA4E,EAAApF,KAAAH,MAAAuF,UACR,OACE9F,EAAA,sBAAMb,GAAG,oBAAoB0C,SAAUnB,KAAKI,cAC1Cd,EAAA,cAAC+F,GAAoB,CAAC3C,aAAc1C,KAAKO,MAAM5D,IAAKQ,SAAU6C,KAAK8E,kBACnExF,EAAA,qBAAKzB,UAAU,kBACbyB,EAAA,cAACqC,EAAA,gBAAe,CAAC2D,QAAStF,KAAK0E,uBAC5B3H,OAAA0C,EAAA,UAAA1C,CACCiD,KAAKO,MAAMoE,WACP,sDACA,sDAENrF,EAAA,cAACiG,EAAAjH,EAAY,CAACT,UAAU,qBAAqB2H,OAAQxF,KAAKO,MAAMoE,eAGpErF,EAAA,qBAAKzB,UAAU,qBAAqB4H,QAASzF,KAAKO,MAAMoE,YACtDrF,EAAA,qBAAKzB,UAAU,kBACbyB,EAAA,uBAAOoG,QAAQ,6BACbpG,EAAA,4BAASvC,OAAA0C,EAAA,UAAA1C,CAAU,iDAErBuC,EAAA,qBAAKzB,UAAU,qBACbyB,EAAA,uBACEzB,UAAU,gCACVY,GAAG,4BACH6F,UAAW,IACXnH,SAAU6C,KAAK+E,iBACfpB,KAAK,OACL1E,MAAOe,KAAKO,MAAMrC,QAGtBoB,EAAA,qBAAKzB,UAAU,sBACZd,OAAA0C,EAAA,UAAA1C,CAAU,6DAGfuC,EAAA,qBAAKzB,UAAU,kBACbyB,EAAA,cAACqG,EAAuB,CACtBjD,aAAc1C,KAAKO,MAAM8C,OACzBnF,KAAM8B,KAAKO,MAAMrC,KACjBf,SAAU6C,KAAK4E,sBAGnBtF,EAAA,qBAAKzB,UAAU,kBACbyB,EAAA,uBAAOoG,QAAQ,4BACbpG,EAAA,4BAASvC,OAAA0C,EAAA,UAAA1C,CAAU,gDAErBuC,EAAA,qBAAKzB,UAAU,qBACbyB,EAAA,0BACEzB,UAAU,gCACVY,GAAG,2BACH6F,UAAW,IACXnH,SAAU6C,KAAK6E,wBACfe,KAAM,EACN3G,MAAOe,KAAKO,MAAM2C,gBAIxB5D,EAAA,qBAAKzB,UAAU,kBACbyB,EAAA,cAACuG,GAAoB,CAACnD,aAAc1C,KAAKO,MAAMqC,IAAKzF,SAAU6C,KAAKgF,oBAItEI,EAED9F,EAAA,qBAAKzB,UAAU,sCACbyB,EAAA,cAACqC,EAAA,aAAY,CAACC,SAAUpB,IAAeR,KAAKiF,UAAUjF,KAAKO,QACxDP,KAAKH,MAAMiG,YAEbtF,GAAclB,EAAA,cAACC,EAAAjB,EAAe,CAACT,UAAU,mBAKpD4G,EA3JA,CAAqDnF,EAAA,6XCjBrD,SAAAK,GAAA,SAAAoG,IAAA,IAAAjG,EAAA,OAAAH,KAAAmC,MAAA9B,KAAA+B,YAAA/B,YACEF,EAAAkG,WAAa,WACX,OAAO1G,EAAA,qBAAKzB,UAAU,qBAAqBiC,EAAKD,MAAMoG,WAGxDnG,EAAAoG,aAAe,WACL,IAAA9I,EAAA0C,EAAAD,MAAAzC,aACR,OAAOA,EACLkC,EAAA,qBAAKzB,UAAU,2CACbyB,EAAA,cAAC6G,GAAA7H,EAAgB,CAACT,UAAU,iBAC5ByB,EAAA,wBAAQzB,UAAU,gBAAgBT,EAAaT,MAE/C,QAkBR,OA9BqDyJ,GAAAL,EAAApG,GAenDoG,EAAAlF,UAAAK,OAAA,WACE,OACE5B,EAAA,cAAC+G,GAAA,EAAI,CACHC,SAAUtG,KAAKH,MAAMyG,SACrBC,OAAQvG,KAAKH,MAAM0G,OACnBC,KAAMxG,KAAKH,MAAM2G,KACjBR,WAAYhG,KAAKgG,WACjBE,aAAclG,KAAKkG,aACnBO,WAAY,EACZC,UACE1G,KAAKH,MAAM6G,WAAa3J,OAAA0C,EAAA,UAAA1C,CAAU,uDAK5CgJ,EA9BA,CAAqDzG,EAAA,sjBCDvC,SAAUqH,GAAa1J,GAAE,IAAA2J,EAAA3J,EAAA2J,QAASC,EAAA5J,EAAA4J,WAAYhH,EAAAiH,GAAA7J,EAAA,0BACpD8J,EAAWH,GAAW/G,EAAM+B,SAC5BoF,EAAcJ,GAAWC,IAAehH,EAAM+B,SAEpD,OACEtC,EAAA,cAAC2H,GAAA3I,EAAS4I,GAAA,CAACC,MAAOpK,OAAA0C,EAAA,UAAA1C,CAAU,2BAA4BqK,UAAWrK,OAAAsK,GAAA,EAAAtK,CAAY,IAAQ8C,GACrFP,EAAA,qBAAKzB,UAAU,eACbyB,EAAA,oBAAIzB,UAAU,wBACZyB,EAAA,oBAAIzB,UAAU,wBACXd,OAAA0C,EAAA,UAAA1C,CAAU,mDAEbuC,EAAA,wBAAKvC,OAAA0C,EAAA,UAAA1C,CAAU,sDAGlBiK,GACC1H,EAAA,cAAC8B,EAAA,MAAK,CAACE,QAAQ,WACbhC,EAAA,cAACgI,EAAA,iBAAgB,CACfC,eAAgBxK,OAAA0C,EAAA,UAAA1C,CAAU,0CAC1B0B,GAAG,yCACH+I,OAAQ,CAAEhK,IAAKoJ,MAIpBG,GACCzH,EAAA,cAAC8B,EAAA,MAAK,CAACE,QAAQ,QACbhC,EAAA,cAACgI,EAAA,iBAAgB,CACfC,eAAgBxK,OAAA0C,EAAA,UAAA1C,CAAU,wCAC1B0B,GAAG,uCACH+I,OAAQ,CAAEhK,IAAKoJ,+fC3Bb,SAAUa,GAAaxK,GAAE,IAAAyK,EAAAzK,EAAAyK,cAAeC,EAAA1K,EAAA0K,cAAe9H,EAAA+H,GAAA3K,EAAA,mCACnE,OACEqC,EAAA,cAAC2H,GAAA3I,EAASuJ,GAAA,CACRC,YAAaJ,EAAgB3K,OAAA0C,EAAA,UAAA1C,CAAU,sCAAmCkF,EAC1EkF,MAAOpK,OAAA0C,EAAA,UAAA1C,CAAU,2BACjBqK,eACoBnF,IAAlB0F,GACErI,EAAA,cAACgI,EAAA,iBAAgB,CACfC,eAAgBxK,OAAA0C,EAAA,UAAA1C,CAAU,wBAC1B0B,GAAG,uBACH+I,OAAQ,CACNO,MAAOzI,EAAA,sBAAMzB,UAAU,OAAOd,OAAAsK,GAAA,EAAAtK,CAAY4K,QAK9C9H,GACJP,EAAA,cAAC0I,GAAA,EAA6B,MAC9B1I,EAAA,qBAAKzB,UAAU,mBACbyB,EAAA,cAACiC,EAAA,KAAI,CAAC1D,UAAU,cAAc2D,OAAO,SAASC,GAAG,kBAC9C1E,OAAA0C,EAAA,UAAA1C,CAAU,qCC5BTkL,gVAAZ,SAAYA,GACVA,EAAA,YACAA,EAAA,YAFF,CAAYA,QAAI,KAahB,ICHKC,MDGL,SAAAvI,GAAA,SAAAwI,IAAA,IAAArI,EAAA,OAAAH,KAAAmC,MAAA9B,KAAA+B,YAAA/B,YACEF,EAAAsI,oBAAsB,WACpBtI,EAAKD,MAAM1C,SAAS8K,GAAKI,OAG3BvI,EAAAwI,oBAAsB,WACpBxI,EAAKD,MAAM1C,SAAS8K,GAAKM,SAqC7B,OA3CwCC,GAAAL,EAAAxI,GAStCwI,EAAAtH,UAAAK,OAAA,WACQ,IAAAjE,EAAA+C,KAAAH,MAAE4I,EAAAxL,EAAAwL,eAAgBC,EAAAzL,EAAAyL,gBAAiBC,EAAA1L,EAAA0L,KACnCC,EAAiBjG,QAAQ+F,GAAmBA,EAAgBG,aAAe,GAC3EC,EAAkBnG,QACtBiG,GAAkBF,GAAmD,IAAhCA,EAAgBK,aAGjDC,EAAQ,CACZ1J,EAAA,cAACmI,GAAY,CACXC,cAAekB,EACfjM,IAAI,OACJ2I,QAAStF,KAAKsI,oBACdW,SAAUN,IAASV,GAAKM,KACxBZ,cAAe3H,KAAKH,MAAM8H,gBAE5BrI,EAAA,cAACqH,GAAY,CACXC,QAAS6B,GAAkBA,EAAevK,KAC1C0D,SAAUkH,EACVjC,WAAY+B,GAAkBD,IAASV,GAAKI,KAC5C1L,IAAI,OACJ2I,QAAStF,KAAKoI,oBACda,SAAUN,IAASV,GAAKI,QAI5B,OACE/I,EAAA,qBAAA4J,aACcnM,OAAA0C,EAAA,UAAA1C,CAAU,8CACtBc,UAAU,sCACVsL,KAAK,cACJP,EAAiBI,EAAQA,EAAMI,YAIxCjB,EA3CA,CAAwC7I,EAAA,2VERlC+J,GAActM,OAAAuM,GAAA,EAAAvM,CAAgBwM,GAAA,MAkBpC,SAAA5J,GAGE,SAAA6J,EAAY3J,GAAZ,IAAAC,EACEH,EAAAI,KAAAC,KAAMH,IAAMG,YAHdF,EAAAG,SAAU,EA2BVH,EAAA2J,iBAAmB,SAACd,GAClB7I,EAAKK,SAAS,CAAEwI,KAAIA,KAGtB7I,EAAAY,eAAiB,WACXZ,EAAKG,SACPH,EAAKK,SAAS,CAAEK,YAAY,KAIhCV,EAAA4J,qBAAuB,SAACrJ,GAGtB,OAFAA,EAAMC,iBACNR,EAAKK,SAAS,CAAEK,YAAY,IACrBV,EAAKD,MAAM8J,qBAAqB7M,KAAK,WAC1CgD,EAAKD,MAAM+J,SACX9J,EAAKY,kBACJZ,EAAKY,iBAGVZ,EAAAkG,WAAa,WACH,IAAAxF,EAAAV,EAAAS,MAAAC,WACAqJ,EAAA/J,EAAAD,MAAAgK,kBACFlC,EAAgBkC,GAAqBA,EAAkB,IAAMA,EAAkB,GAAG9B,MACxF,OACEzI,EAAA,qBAAKzB,UAAU,qBACZiC,EAAKS,MAAMuJ,OACVxK,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACyK,GAAU,CACTtB,eAAgB3I,EAAKD,MAAM4I,eAC3BC,gBAAiB5I,EAAKD,MAAM6I,gBAC5BvL,SAAU2C,EAAK2J,iBACfd,KAAM7I,EAAKS,MAAMoI,KACjBhB,cAAeA,IAGhB7H,EAAKS,MAAMoI,OAASV,GAAKM,KACxBjJ,EAAA,cAAC+J,GAAW,CACVW,SAAUlK,EAAKD,MAAM+J,OACrBK,gBAAiBnK,EAAKD,MAAMqK,cAC5BC,gBAAiBrK,EAAKD,MAAM8J,mBAC5BE,kBAAmB/J,EAAKD,MAAMgK,mBAC7B,SAAC5M,OAAEkE,EAAAlE,EAAAkE,SAAUiJ,EAAAnN,EAAAmN,iBAAkBC,EAAApN,EAAAoN,kBAAwB,OACtD/K,EAAA,sBAAMb,GAAG,8BAA8B0C,SAAUA,GAC9CiJ,IACD9K,EAAA,qBAAKzB,UAAU,sCACZwM,EACCtN,OAAA0C,EAAA,UAAA1C,CAAU,0DAOpBuC,EAAA,sBACEzB,UAAU,qCACVY,GAAG,8BACH0C,SAAUrB,EAAK4J,sBACfpK,EAAA,cAACqC,EAAA,aAAY,CAACC,SAAUpB,GACrBzD,OAAA0C,EAAA,UAAA1C,CAAU,mCAEZyD,GAAclB,EAAA,cAACC,EAAAjB,EAAe,CAACT,UAAU,oBAnFtDiC,EAAKS,MAAQ,CACXoI,KAAM9I,EAAM6I,iBAAmB7I,EAAM6I,gBAAgBG,aAAe,EAAIZ,GAAKM,KAAON,GAAKI,KACzFyB,OAAO,EACPtJ,YAAY,KA6GlB,OArHsC8J,GAAAd,EAAA7J,GAYpC6J,EAAA3I,UAAAC,kBAAA,eAAAhB,EAAAE,KACEA,KAAKC,SAAU,EACflD,OAAAwN,GAAA,EAAAxN,CAAkB,mBAAmBD,KACnC,WACMgD,EAAKG,SACPH,EAAKK,SAAS,CAAE2J,OAAO,KAG3B,eAIJN,EAAA3I,UAAAE,qBAAA,WACEf,KAAKC,SAAU,GAwEjBuJ,EAAA3I,UAAAK,OAAA,WACU,IAAAwH,EAAA1I,KAAAH,MAAA6I,gBACFhC,EAAY3J,OAAA0C,EAAA,UAAA1C,CAChB2L,GAAmBA,EAAgBG,aAAe,GAAqC,IAAhCH,EAAgBK,YACnE,uDACA,8CAGN,OACEzJ,EAAA,cAAC+G,GAAA,EAAI,CACHC,UAAU,EACVC,OAAQ,aACRC,KAAMxG,KAAKH,MAAM2G,KACjBR,WAAYhG,KAAKgG,WACjBE,aAAc,WAAM,aACpBO,WAAY,EACZC,UAAWA,KAInB8C,EArHA,CAAsClK,EAAA,6iBDbtC,SAAK4I,GACHA,EAAA,YACAA,EAAA,gBAFF,CAAKA,QAAO,KA6BZ,gBAAAvI,GACE,SAAA6K,EAAY3K,GAAZ,IAAAC,EACEH,EAAAI,KAAAC,KAAMH,IAAMG,YAMdF,EAAA2K,uBAAyB,SAACrN,GACxB,OAAOL,OAAA2N,EAAA,EAAA3N,CAAoB,CACzBK,aAAYA,EACZuN,eAAgB7K,EAAKD,MAAM+K,eAC1B9N,KAAK,WAAM,OAAAgD,EAAKD,MAAMgL,aAAXzN,MAGhB0C,EAAAgL,yBAA2B,WACnB,IAAA7N,EAAA6C,EAAAD,MAAE4I,EAAAxL,EAAAwL,eAAgBC,EAAAzL,EAAAyL,gBAAiBtL,EAAAH,EAAAG,aACzC,OAAKA,EAGE0C,EAAKD,MAAM8J,mBAAkBoB,GAAA,GAC/B3N,EAAY,CACfI,IAAK,CACHb,IAAK8L,EAAe9L,IACpBqO,aAAa,EACbC,SAAUvC,EAAgBuC,SAC1BrI,IAAK8F,EAAgBwC,QAEvBP,eAAgB7K,EAAKD,MAAM+K,gBAVpBO,QAAQC,UAcnBtL,EAAAuL,mBAAqB,SAACC,GACpBxL,EAAKK,SAAS,CAAEmL,OAAMA,KA9BtBxL,EAAKS,MAAQ,CACX+K,OAA8C,IAAtCzL,EAAMmB,qBAAqBC,OAAeiH,GAAQqD,YAAStJ,KAmJzE,OAvJoDuJ,GAAAhB,EAAA7K,GAoClD6K,EAAA3J,UAAAK,OAAA,WACQ,IAAAjE,EAAA+C,KAAAH,MACJ4I,EAAAxL,EAAAwL,eACAC,EAAAzL,EAAAyL,gBACA7K,EAAAZ,EAAAY,UACAT,EAAAH,EAAAG,aACAqO,EAAAxO,EAAAwO,KACA5B,EAAA5M,EAAA4M,kBACA7I,EAAA/D,EAAA+D,qBAEMsK,EAAAtL,KAAAO,MAAA+K,OACFI,EAAiB1K,EAAqBC,OAAS,EAC/C5B,EAAStC,OAAA2C,EAAA,EAAA3C,CAAc0L,EAAe9L,KAC5C,OACE2C,EAAA,qBAAKzB,UAAWA,GACdyB,EAAA,cAACqM,GAAuB,CACtBrF,cAA2BrE,IAAjB7E,EACVmJ,OAAQvG,KAAKH,MAAM+L,yBACnBpF,KAAMiF,IAASpE,GAAA,EAAKwE,oBACpBzO,aAAcA,EACdsJ,UAAW3J,OAAA0C,EAAA,UAAA1C,CAAU,sDACrBuC,EAAA,qBAAKzB,UAAU,sBACbyB,EAAA,mBAAGzB,UAAU,yCACXyB,EAAA,cAACgI,EAAA,iBAAgB,CACfC,eAAgBxK,OAAA0C,EAAA,UAAA1C,CAAU,oCAC1B0B,GAAG,mCACH+I,OAAQ,CACNnE,OACE/D,EAAA,qBACExB,IAAK2K,EAAevK,KACpBL,UAAU,qBACVG,IAAQjB,OAAAqH,EAAA,WAAArH,GAAY,sBAAsBA,OAAA2C,EAAA,EAAA3C,CACxC0L,EAAe9L,KAChB,OACDmP,MAAO,KAGX5N,KAAMoB,EAAA,4BAASoJ,EAAgBxK,SAGnCoB,EAAA,cAACqC,EAAA,YAAW,CAAC9D,UAAU,qBAAqByH,QAAStF,KAAKH,MAAMkM,sBAGjEL,GACCpM,EAAA,cAAC0M,EAAA1N,EAAW,CACVJ,KAAK,SACL+N,QAASjM,KAAKqL,mBACd1M,QAAS,CACP,CACEwE,MAAOpG,OAAA0C,EAAA,UAAA1C,CAAU,6CACjBkC,MAAOiJ,GAAQqD,QAEjB,CACEpI,MAAOpG,OAAA0C,EAAA,UAAA1C,CAAU,gDACjBkC,MAAOiJ,GAAQgE,OAGnBjN,MAAOqM,KAKZA,IAAWpD,GAAQqD,QAClBjM,EAAA,cAAC6M,GAAuB,CACtB/G,UACErI,OAAA2C,EAAA,EAAA3C,CAASsC,IACPC,EAAA,cAAC8B,EAAA,MAAK,CAACvD,UAAU,+BAA+BwD,QAAQ,QAAQC,QAAQ,QACtEhC,EAAA,uBACGvC,OAAA0C,EAAA,wBAAA1C,CACC,qDACAA,OAAA0C,EAAA,UAAA1C,CAAU,eAAgBsC,GAC1BqJ,EAAgBxK,KAChBnB,OAAA0C,EAAA,UAAA1C,CAAUsC,KAGdC,EAAA,mBACE8M,KAAMrP,OAAA2C,EAAA,EAAA3C,CAAiB0L,EAAe9L,IAAK+L,EAAgBwC,QAC3DmB,IAAI,sBACJ7K,OAAO,UACNzE,OAAA0C,EAAA,wBAAA1C,CACC,4CACAA,OAAA0C,EAAA,UAAA1C,CAAUsC,MAMpB6F,WAAYlF,KAAKH,MAAMyM,uBACvBlP,aAAcsL,EACd5C,WAAY/I,OAAA0C,EAAA,UAAA1C,CAAU,cAGzBuO,IAAWpD,GAAQgE,MAClB5M,EAAA,cAACiN,EAAoB,CACnBlN,OAAQA,EACRoB,mBAAoBT,KAAKyK,uBACzBzJ,qBAAsBA,UAKLiB,IAAtB4H,GAAmCyB,IAAWpD,GAAQgE,MACrD5M,EAAA,cAACkN,GAAQ,CACP/D,eAAgBzI,KAAKH,MAAM4I,eAC3BC,gBAAiB1I,KAAKH,MAAM6I,gBAC5BiB,mBAAoB3J,KAAK8K,yBACzBlB,OAAQ5J,KAAKH,MAAM+J,OACnBM,cAAelK,KAAKH,MAAMqK,cAC1B1D,KAAMiF,IAASpE,GAAA,EAAKY,KACpB4B,kBAAmBA,MAM/BW,EAvJA,CAAoDlL,EAAA,8VEzBpD,SAAAK,GAAA,SAAA8M,IAAA,IAAA3M,EAAA,OAAAH,KAAAmC,MAAA9B,KAAA+B,YAAA/B,YACEF,EAAAgL,yBAA2B,WACjB,IAAA1N,EAAA0C,EAAAD,MAAAzC,aACR,OAAKA,EAGE0C,EAAKD,MAAM8J,mBAAmBvM,GAF5B+N,QAAQC,YAiCrB,OArCsDsB,GAAAD,EAAA9M,GASpD8M,EAAA5L,UAAAK,OAAA,WACQ,IAAAjE,EAAA+C,KAAAH,MAAEhC,EAAAZ,EAAAY,UAAWT,EAAAH,EAAAG,aAAcyM,EAAA5M,EAAA4M,kBACjC,OACEvK,EAAA,qBAAKzB,UAAWA,GACdyB,EAAA,cAACqM,GAAuB,CACtBrF,cAA2BrE,IAAjB7E,EACVmJ,OAAQvG,KAAKH,MAAM+L,yBACnBpF,KAAMxG,KAAKH,MAAM4L,OAASpE,GAAA,EAAKwE,oBAC/BzO,aAAcA,GACdkC,EAAA,cAAC6M,GAAuB,CACtBjH,WAAYlF,KAAKH,MAAMyM,uBACvBlP,aAAcA,EACd0I,WAAY/I,OAAA0C,EAAA,UAAA1C,CAAU,oBAIHkF,IAAtB4H,GACCvK,EAAA,cAACkN,GAAQ,CACP7C,mBAAoB3J,KAAK8K,yBACzBlB,OAAQ5J,KAAKH,MAAM+J,OACnBM,cAAelK,KAAKH,MAAMqK,cAC1B1D,KAAMxG,KAAKH,MAAM4L,OAASpE,GAAA,EAAKY,KAC/B4B,kBAAmBA,MAM/B4C,EArCA,CAAsDnN,EAAA,0ZCUtDqN,GAAA,SAAAhN,GAAA,SAAAiN,IAAA,IAAA9M,EAAA,OAAAH,KAAAmC,MAAA9B,KAAA+B,YAAA/B,YACEF,EAAAS,MAAe,CAAEsM,sBAAuB,IAExC/M,EAAAM,aAAe,SAACC,GACdA,EAAMC,iBAEE,IAAAuM,EAAA/M,EAAAS,MAAAsM,sBACJA,GACF/M,EAAKD,MAAMiN,OAAOC,KAAK,CACrBrL,SAAU,uBACVsL,MAAOjQ,OAAAsK,GAAA,EAAAtK,CAAe,CACpB6N,aAAciC,EACdxN,OAAQS,EAAKD,MAAM4I,eAAe9L,SAM1CmD,EAAAmN,sBAAwB,WACtBlQ,OAAAmQ,EAAA,KAAAnQ,CAAKsK,GAAA,EAAmD8F,KAAKC,MAAMC,SAAS,MAG9EvN,EAAAwN,yBAA2B,SAACrQ,OAAE0N,EAAA1N,EAAA0N,eAC5B7K,EAAKK,SAAS,CAAE0M,sBAAuBlC,KAGzC7K,EAAAyN,aAAe,SAACnQ,GACN,IAAAqL,EAAA3I,EAAAD,MAAA4I,eACR,OACEnJ,EAAA,0BACEA,EAAA,qBACExB,IAAK2K,EAAevK,KACpBL,UAAU,eACVE,OAAQ,GACRC,IAAQjB,OAAAqH,EAAA,WAAArH,GAAY,sBAAsBA,OAAA2C,EAAA,EAAA3C,CAAc0L,EAAe9L,KAAI,SAE5ES,EAAac,SAqHtB,OAzJ8CsP,GAAAZ,EAAAjN,GAyC5CiN,EAAA/L,UAAAK,OAAA,WACQ,IAAAjE,EAAA+C,KAAAH,MACJ4I,EAAAxL,EAAAwL,eACAmC,EAAA3N,EAAA2N,aACAlC,EAAAzL,EAAAyL,gBACA+E,EAAAxQ,EAAAwQ,uBACAC,EAAAzQ,EAAAyQ,kBACA7P,EAAAZ,EAAAY,UAEMgP,EAAA7M,KAAAO,MAAAsM,sBACR,OACEvN,EAAA,qBAAKzB,UAAWyF,EAAW,cAAezF,IACxCyB,EAAA,qBAAKzB,UAAU,sBACbyB,EAAA,wBAAKvC,OAAA0C,EAAA,UAAA1C,CAAU,uDAEjBuC,EAAA,qBAAKzB,UAAU,qBACZ+M,IAAiBlC,GAChBpJ,EAAA,cAAC8B,EAAA,MAAK,CAACvD,UAAU,6BAA6ByD,QAAQ,SACpDhC,EAAA,qBAAKzB,UAAU,YACZd,OAAA0C,EAAA,UAAA1C,CAAU,gDACXuC,EAAA,wBACEA,EAAA,wBAAKvC,OAAA0C,EAAA,UAAA1C,CAAU,wDACfuC,EAAA,wBAAKvC,OAAA0C,EAAA,UAAA1C,CAAU,2DAKtB2L,GAAmBgF,GAClBpO,EAAA,cAAC8B,EAAA,MAAK,CAACvD,UAAU,6BAA6ByD,QAAQ,SACpDhC,EAAA,cAACgI,EAAA,iBAAgB,CACfC,eAAgBxK,OAAA0C,EAAA,UAAA1C,CAAU,kDAC1B0B,GAAG,iDACH+I,OAAQ,CACNnE,OACE/D,EAAA,qBACExB,IAAK2K,EAAevK,KACpBL,UAAU,qBACVG,IAAQjB,OAAAqH,EAAA,WAAArH,GAAY,sBAAsBA,OAAA2C,EAAA,EAAA3C,CACxC0L,EAAe9L,KAChB,OACDmP,MAAO,KAGX5N,KAAMoB,EAAA,4BAASoJ,EAAgBxK,MAC/ByP,YACErO,EAAA,cAAC8D,EAAA,EAAkB,CACjBvF,UAAU,qBACVT,aAAcsQ,EACdE,OAAO,IAGXC,UAAWvO,EAAA,4BAASoO,EAAkBxP,UAK9CoB,EAAA,qBAAKzB,UAAU,uBACbyB,EAAA,qBAAKzB,UAAU,wBACbyB,EAAA,cAACwO,GAAAxP,EAAoB,CACnByP,gBAAiBtF,EAAesF,gBAChClQ,UAAU,uBACVmQ,SAAUvF,EAAeuF,SACzB9P,KAAMuK,EAAevK,KACrBoH,QAAStF,KAAKiN,sBACdW,OAAO,EACPhL,IAAK6F,EAAewF,iBACnBlR,OAAA0C,EAAA,UAAA1C,CACC,4DACA0L,EAAe9L,OAIpB8Q,EAAuBxM,OAAS,GAC/B3B,EAAA,qBAAKzB,UAAU,wBACbyB,EAAA,qBAAKzB,UAAU,2BACbyB,EAAA,qBAAKzB,UAAU,wBACfyB,EAAA,sBAAMzB,UAAU,QAAQd,OAAA0C,EAAA,UAAA1C,CAAU,OAClCuC,EAAA,qBAAKzB,UAAU,wBAEjByB,EAAA,sBAAMzB,UAAU,mCAAmCsD,SAAUnB,KAAKI,cAChEd,EAAA,qBAAKzB,UAAU,4BACbyB,EAAA,uBAAOzB,UAAU,cAAc6H,QAAQ,+BACpC3I,OAAA0C,EAAA,wBAAA1C,CACC,+DACAA,OAAA0C,EAAA,UAAA1C,CAAUA,OAAA2C,EAAA,EAAA3C,CAAc0L,EAAe9L,QAG3C2C,EAAA,cAAC4O,GAAA5P,EAAM,CACLT,UAAU,oBACVW,WAAW,EACXC,GAAG,8BACHC,SAAS,OACTvB,SAAU6C,KAAKsN,yBACfhQ,eAAgB0C,KAAKuN,aACrB5O,QAASwP,KAAOV,EAAwB,SAAA5O,GAAK,OAAAA,EAAEX,KAAFY,gBAC7CC,YAAahC,OAAA0C,EAAA,UAAA1C,CAAU,sDACvBkC,MAAO4N,EACP3N,SAAS,iBACTC,cAAea,KAAKuN,gBAGxBjO,EAAA,cAACqC,EAAA,aAAY,CAACC,UAAWiL,GACtB9P,OAAA0C,EAAA,UAAA1C,CAAU,mBAU/B6P,EAzJA,CAA8CtN,EAAA,eA2J/B8O,GAAArR,OAAAwE,EAAA,YAAWoL,ulBC1G1B0B,GAAA,SAAA1O,GAAA,SAAA2O,IAAA,IAAAxO,EAAA,OAAAH,KAAAmC,MAAA9B,KAAA+B,YAAA/B,YACEF,EAAAG,SAAU,EACVH,EAAAS,MAAe,CACbgO,eAAe,EACfd,uBAAwB,GACxBe,oBAAoB,EACpBC,SAAS,EACThD,KAAMpE,GAAA,EAAKwE,qBAiDb/L,EAAAxD,mBAAqB,WACfwD,EAAKS,MAAMnD,cACb0C,EAAKD,MAAMvD,mBAAmBwD,EAAKS,MAAMnD,aAAaT,MAI1DmD,EAAA4O,oBAAsB,WACpB,OAAO3R,OAAA2N,EAAA,EAAA3N,GAAgBD,KAAK,SAACG,OAAE0R,EAAA1R,EAAA0R,YACzB7O,EAAKG,SACPH,EAAKK,SAAS,CAAEsI,eAAgBkG,OAKtC7O,EAAA8O,qBAAuB,SAACjE,GAEtB,OADA7K,EAAKK,SAAS,CAAEoO,eAAe,IACxBxR,OAAA2N,EAAA,EAAA3N,CAAmB,CAAE4N,eAAcA,IACvC7N,KAAK,SAACG,OAAEyL,EAAAzL,EAAAyL,gBAAiBgF,EAAAzQ,EAAAyQ,kBACxB,OAAIA,EACKvC,QAAQ0D,QAAQ,CAAEnG,gBAAeA,EAAEgF,kBAAiBA,IAEtD5N,EAAKgP,eAAepG,KAE5B5L,KACC,SAACG,OAAEyL,EAAAzL,EAAAyL,gBAAiBgF,EAAAzQ,EAAAyQ,kBACd5N,EAAKG,UAELyN,GACAA,EAAkB/Q,MACjBmD,EAAKiP,uBAAuB1H,GAAA,GAE7BvH,EAAKD,MAAMiN,OAAOC,KAAK,CACrBrL,SAAU3E,OAAAiS,EAAA,EAAAjS,CAAmB2Q,EAAkB/Q,OAGjDmD,EAAKK,SAAS,CAAEuI,gBAAeA,EAAE6F,eAAe,EAAOb,kBAAiBA,MAI9E,WACM5N,EAAKG,SACPH,EAAKK,SAAS,CAAEoO,eAAe,OAMzCzO,EAAAmP,4BAA8B,WAC5B,OAAOlS,OAAA2N,EAAA,EAAA3N,GAA0BD,KAAK,SAAA2Q,GAChC3N,EAAKG,SACPH,EAAKK,SAAS,CAAEsN,uBAAsBA,OAK5C3N,EAAAoP,uBAAyB,WACvB,OAAOnS,OAAAoS,EAAA,EAAApS,GAAuBD,KAAK,SAAA+M,GAC7B/J,EAAKG,SACPH,EAAKK,SAAS,CAAE0J,kBAAiBA,OAKvC/J,EAAAiM,mBAAqB,WACnBjM,EAAKsP,eAAe,CAAExE,kBAAc3I,EAAW5C,YAAQ4C,KAGzDnC,EAAAuP,iBAAmB,SAACjS,GAClB0C,EAAKD,MAAMyP,iBACPxP,EAAKiP,uBAAuB1H,GAAA,GAC9BvH,EAAKD,MAAMiN,OAAOC,KAAK,CACrBrL,SAAU,mBACVnB,MAAO,CAAEnD,aAAYA,EAAEmS,IAAKzP,EAAKS,MAAMmI,gBAAkB,OAAS,YAGpE5I,EAAKD,MAAMiN,OAAOC,KAAK,CAAErL,SAAU3E,OAAAiS,EAAA,EAAAjS,CAAmBK,MAI1D0C,EAAAwM,uBAAyB,SAAClP,GAExB,OADA0C,EAAKK,SAAS,CAAE/C,aAAYA,EAAEqO,KAAMpE,GAAA,EAAKY,OAClCkD,QAAQ0D,WAGjB/O,EAAA8L,yBAA2B,WACzB9L,EAAKK,SAAS,CAAEsL,KAAMpE,GAAA,EAAKwE,uBAG7B/L,EAAA0P,eAAiB,WACX1P,EAAKS,MAAMnD,cACb0C,EAAKuP,iBAAiBvP,EAAKS,MAAMnD,aAAaT,MAQlDmD,EAAAiP,uBAAyB,SAACU,GACxB,IAAMC,EAAkB3S,OAAAmQ,EAAA,IAAAnQ,CAAI0S,GAE5B,OADA1S,OAAAmQ,EAAA,OAAAnQ,CAAO0S,GACAC,GAAmBC,EAAoBxC,KAAKC,MAAOwC,OAAOF,IAAoB,IAGvF5P,EAAA+P,YAAc,SAACN,GACbzP,EAAKgQ,eAAe,CAAEP,IAAGA,KAuB3BzP,EAAAiQ,UAAY,SAACvB,GACX,OAAIA,EACKzR,OAAA0C,EAAA,UAAA1C,CAAU,mCAEVA,OAAA0C,EAAA,UAAA1C,CAAU,+CAIrB+C,EAAAgP,eAAiB,SAACpG,GAChB,IAAM/L,EAAMI,OAAAiT,EAAA,QAAAjT,CAAQ2L,EAAgB/L,KAC9BsT,EAAI,CAAItT,GAAGuT,OAAKC,IAAM,EAAG,SAAAC,GAAK,OAAGzT,EAAG,KAAIyT,EAAV,MACpC,OAAO/S,EAAA,EACa,CAAEA,cAAe4S,EAAKI,KAAK,OAC5CvT,KACC,SAACG,OAAEI,EAAAJ,EAAAI,cAED,OADqB4S,EAAKK,KAAK,SAAA3T,GAAO,OAACU,EAAciT,KAAK,SAAAzR,GAAK,OAAAA,EAAElC,MAAFA,OACrCA,EAAG,KAAI4T,KAAKC,KAAqB,IAAhBD,KAAKE,UAAmB,KAErE,WAAM,OAAA9T,IAEPG,KAAK,SAAAH,GACJ,MAAO,CAAE+L,gBAAegI,GAAA,GAAOhI,EAAe,CAAE/L,IAAGA,QAIzDmD,EAAA6Q,YAAc,WACR7Q,EAAKG,SACPH,EAAKK,SAAS,CAAEsO,SAAS,KAI7B3O,EAAAsP,eAAiB,SAACpC,QAAA,IAAAA,MAAA,IAChBlN,EAAKD,MAAMiN,OAAOC,KAAK,CACrBrL,SAAU5B,EAAKD,MAAM+Q,SAASlP,SAC9BsL,MAAOjQ,OAAAsK,GAAA,EAAAtK,CAAc2T,GAAA,GAAM3T,OAAAsK,GAAA,EAAAtK,CAAW+C,EAAKD,MAAM+Q,SAAS5D,OAAWA,IACrEzM,MAAOT,EAAKD,MAAM+Q,SAASrQ,SAI/BT,EAAAgQ,eAAiB,SAACvP,QAAA,IAAAA,MAAA,IAChBT,EAAKD,MAAMiN,OAAOzI,QAAQ,CACxB3C,SAAU5B,EAAKD,MAAM+Q,SAASlP,SAC9BsL,MAAOlN,EAAKD,MAAM+Q,SAAS5D,MAC3BzM,MAAKmQ,GAAA,GAAQ5Q,EAAKD,MAAM+Q,SAASrQ,OAAS,GAAQA,MAItDT,EAAA+Q,cAAgB,SAACjG,GACP,IAAAgG,EAAA9Q,EAAAD,MAAA+Q,SACArQ,EAAAT,EAAAS,MACAnD,EAAAmD,EAAAnD,aAAcqO,EAAAlL,EAAAkL,KAAM5B,EAAAtJ,EAAAsJ,kBACpB5M,GAAA2T,EAAArQ,OAAA,IAAAgP,WAAA,IAAAtS,EAAA,OAAAA,EAEF6T,EAAc,CAClBxE,uBAAwBxM,EAAKwM,uBAC7BV,yBAA0B9L,EAAK8L,yBAC/BhC,OAAQ9J,EAAK0P,eACbpS,aAAYA,EACZqO,KAAIA,EACJ5B,kBAAiBA,GAGnB,IAAK/J,EAAKiR,cAAcxQ,GACtB,OACEjB,EAAA,cAAC0R,GAAwBN,GAAA,GACnBI,EAAW,CACfnH,mBAAoB7J,EAAKD,MAAM8J,mBAC/BO,cAAepK,EAAKxD,mBACpBc,aAAc0C,EAAKS,MAAMnD,aACzBqO,KAAM3L,EAAKS,MAAMkL,QAKf,IAAAhD,EAAAlI,EAAAkI,eAAgBC,EAAAnI,EAAAmI,gBAAiBgF,EAAAnN,EAAAmN,kBAEzC,OACEpO,EAAA,cAAAA,EAAA,cACEA,EAAA,cAAC2R,EAAA3S,EAAI,CACHnB,SAAU2C,EAAK+P,YACf5G,SAAUsG,GAAO,OACjB2B,KAAM,CACJ,CACEvU,IAAK,OACLwU,KAAMpU,OAAA0C,EAAA,wBAAA1C,CACJ,+CACAA,OAAA0C,EAAA,UAAA1C,CAAUA,OAAA2C,EAAA,EAAA3C,CAAc0L,EAAe9L,QAG3C,CACEA,IAAK,SACLwU,KAAMpU,OAAA0C,EAAA,UAAA1C,CAAU,sDAKtBuC,EAAA,cAAC0R,GAAwBN,GAAA,GACnBI,EAAW,CACfjT,UAAWyF,EAAW,CAAEmC,OAAgB,WAAR8J,GAAoBzP,EAAKiR,cAAcxQ,KACvEoJ,mBAAoB7J,EAAKD,MAAM8J,mBAC/BO,cAAepK,EAAKxD,sBAGrBsO,GAAgBlC,IAAoBgF,EACnCpO,EAAA,cAAC8R,GAAsBV,GAAA,GACjBI,EAAW,CACfrI,eAAgBA,EAChBmC,aAAcA,EACdlC,gBAAiBA,EACjB7K,UAAWyF,EAAW,CAAEmC,OAAgB,SAAR8J,IAChC5F,mBAAoB7J,EAAKD,MAAM8J,mBAC/BoC,mBAAoBjM,EAAKiM,mBACzBlB,aAAc/K,EAAKuP,iBACnBnF,cAAepK,EAAKxD,mBACpB0E,qBAAsBlB,EAAKD,MAAMwR,kBAAkB/F,OACjD,SAACrO,OAAEqU,EAAArU,EAAAsU,eAAA,IAAAD,EAAA,GAAAA,EAAwB,OAAVrU,EAAAO,KAAkB+T,EAAQC,WAI/ClS,EAAA,cAAC8O,GAAwB,CACvB3F,eAAgBA,EAChBmC,aAAcA,EACdlC,gBAAiBA,EACjB+E,uBAAwBlN,EAAMkN,uBAC9BC,kBAAmBA,EACnB7P,UAAWyF,EAAW,CAAEmC,OAAgB,SAAR8J,UAwC5C,OA7VwCkC,GAAAnD,EAAA3O,GAUtC2O,EAAAzN,UAAAC,kBAAA,WACEd,KAAKC,SAAU,EACflD,OAAA2U,EAAA,kBAAA3U,GAEA,IAAMiQ,EAAQjQ,OAAAsK,GAAA,EAAAtK,CAAWiD,KAAKH,MAAM+Q,SAAS5D,OAG7C,GACEjQ,OAAA2C,EAAA,EAAA3C,CAA0BiD,KAAKH,MAAM8R,cACrC3E,EAAMpC,cACN5K,KAAK+O,uBAAuB1H,GAAA,GAE5BrH,KAAK4R,sCAAsC5E,EAAMpC,kBAC5C,CACL,IAAMiH,EAAe,CAAC7R,KAAKkP,0BACvBnS,OAAA2C,EAAA,EAAA3C,CAA0BiD,KAAKH,MAAM8R,eACvCE,EAAa9E,KAAK/M,KAAK0O,uBAEnB1B,EAAMpC,aACR5K,KAAK4O,qBAAqB5B,EAAMpC,cAEhCiH,EAAa9E,KAAK/M,KAAKiP,gCAG3B9D,QAAQ2G,IAAID,GAAc/U,KAAKkD,KAAK2Q,YAAa3Q,KAAK2Q,eAI1DrC,EAAAzN,UAAAkR,mBAAA,SAAmBC,GACjB,IAAMC,EAAYlV,OAAAsK,GAAA,EAAAtK,CAAWiV,EAAUpB,SAAS5D,OAC1CA,EAAQjQ,OAAAsK,GAAA,EAAAtK,CAAWiD,KAAKH,MAAM+Q,SAAS5D,OACzChN,KAAKO,MAAMkI,gBAAkBwJ,EAAUrH,eAAiBoC,EAAMpC,eAC5DoC,EAAMpC,aACR5K,KAAK4O,qBAAqB5B,EAAMpC,eAEhC5K,KAAKG,SAAS,CAAEuI,qBAAiBzG,EAAWyL,uBAAmBzL,EAAWwM,SAAS,IACnFzO,KAAKiP,8BAA8BnS,KAAKkD,KAAK2Q,YAAa3Q,KAAK2Q,gBAKrErC,EAAAzN,UAAAE,qBAAA,WACEf,KAAKC,SAAU,EACflD,OAAA2U,EAAA,qBAAA3U,IAiGFuR,EAAAzN,UAAAkQ,cAAA,SAAcxQ,GACZ,OAAOoC,QAAQpC,EAAMkI,iBAavB6F,EAAAzN,UAAA+Q,sCAAA,SAAsCjH,GAAtC,IAAA7K,EAAAE,KACQmK,EAAkBpN,OAAAmQ,EAAA,IAAAnQ,CAAIsK,GAAA,IAA0B,GACtDtK,OAAAmQ,EAAA,OAAAnQ,CAAOsK,GAAA,GAEPrH,KAAKG,SAAS,CAAEqO,oBAAoB,IAEpCzR,OAAA2N,EAAA,EAAA3N,CAAoB,CAClB4N,eAAcA,EACdvN,aAAc+M,IACbrN,KACD,WACEgD,EAAKD,MAAMiN,OAAOC,KAAK,CACrBrL,SAAU,kBAAkByI,IAE9BpN,OAAAmV,EAAA,EAAAnV,CAAwBA,OAAA0C,EAAA,UAAA1C,CAAU,+BAEpC,eAwIJuR,EAAAzN,UAAAK,OAAA,WACU,IAAA0P,EAAA5Q,KAAAH,MAAA+Q,SACF5D,EAAQjQ,OAAAsK,GAAA,EAAAtK,CAAW6T,EAAS5D,OAElC,GAAIhN,KAAKO,MAAMgO,cACb,OAAOjP,EAAA,cAACF,EAAwB,CAACC,OAAQ2N,EAAM3N,SAG3C,IAAApC,EAAA+C,KAAAO,MAAEiO,EAAAvR,EAAAuR,mBAAoB3E,EAAA5M,EAAA4M,kBACtBsI,EAASnS,KAAK+P,UAAUvB,GACxB4D,EAAevI,GAAqBA,EAAkB,IAAMA,EAAkB,GAAG9B,MAEvF,OACEzI,EAAA,cAAAA,EAAA,cACEA,EAAA,cAAC+S,EAAA,OAAM,CAAClL,MAAOgL,EAAQG,cAAc,OACrChT,EAAA,qBAAKzB,UAAU,wDACbyB,EAAA,cAACiT,EAAA,EAAc,CAACC,OAAO,oBAEvBlT,EAAA,wBAAQzB,UAAU,kCAChByB,EAAA,oBAAIzB,UAAU,qCACZyB,EAAA,4BAAS6S,SAEOlQ,IAAjBmQ,GACC9S,EAAA,mBAAGzB,UAAU,oBACVd,OAAA0C,EAAA,UAAA1C,CAAU,qDAIhBiD,KAAKO,MAAMkO,QAAUnP,EAAA,cAACC,EAAAjB,EAAe,MAAM0B,KAAK6Q,cAAc7D,EAAMpC,iBAK/E0D,EA7VA,CAAwChP,EAAA,eA+VlCmT,GAAqB,CACzB9I,mBCzaI,SAA6B1M,GACjC,IAAAO,EAAAP,EAAAO,IACAJ,EAAAsV,EAAAzV,EAAA,SAEA,OAAO,SAACJ,GACN,OAAOQ,EAAA,EACcsV,EAAA,GAAMvV,EAAY,CAAEc,KAAMd,EAAac,MAAQd,EAAaT,OAC9EG,KAAK,SAAC8V,GAKL,OAJA/V,EAASgW,EAAA,EAA0BF,EAAA,GAAMC,EAAe,CAAEpV,IAAGA,MACzDA,GAAOA,EAAIwN,cAAgBxN,EAAIyN,UAAYlO,OAAA2C,EAAA,EAAA3C,CAASS,EAAIb,MAC1DU,EAAA,EAAgBuV,EAAgBjW,KAE3BiW,EAAgBjW,QD8Z7BL,mBAAoBiV,EAAA,EACpBjC,eAAgBwD,EAAA,GAGH1W,EAAA,QAAAW,OAAAgW,EAAA,GACbhW,OAAAiW,EAAA,EAAAjW,CACEA,OAAAwE,EAAA,WAAAxE,CACEA,OAAAkW,EAAA,QAAAlW,CACE,KACA0V,GAFF1V,CAGEsR,2mBE/aM,SAAUkE,EAAe1S,GACrC,OACEqT,EAAA,cAACC,EAAA,EAAYC,SAAQ,KAClB,SAACnW,OAAEoW,EAAApW,EAAAoW,gBAAiBC,EAAArW,EAAAqW,mBAAyB,OAC5CJ,EAAA,cAACK,EAAmBZ,EAAA,CAClBU,gBAAiBA,EACjBC,mBAAoBA,GAChBzT,MAYd,IAAA0T,EAAA,SAAA5T,GAAA,SAAA4T,IAAA,IAAAzT,EAAA,OAAAH,KAAAmC,MAAA9B,KAAA+B,YAAA/B,YASEF,EAAA0T,QAAU,WACF,IAAAvW,EAAA6C,EAAAD,MAAElD,EAAAM,EAAAuV,OAAalB,EAAArU,EAAAkG,MACrB,MAAO,CAAExG,IAAGA,EAAEwG,WADO,IAAAmO,EAAAvU,OAAA0W,EAAA,UAAA1W,CAAA,mBAAAuU,EACAoC,OADsCzW,EAAAyW,WAQ/D,OAlByC9S,EAAA2S,EAAA5T,GACvC4T,EAAA1S,UAAAC,kBAAA,WACEd,KAAKH,MAAMwT,gBAAgBrT,KAAKwT,YAGlCD,EAAA1S,UAAAE,qBAAA,WACEf,KAAKH,MAAMyT,mBAAmBtT,KAAKwT,YAQrCD,EAAA1S,UAAAK,OAAA,WACU,IAAAsR,EAAAxS,KAAAH,MAAA2S,OACR,OAAOU,EAAA,sBAAMzU,GAAI,gBAAgB+T,KAErCe,EAlBA,CAAyCL,EAAA,iDChDzChX,EAAAC,EAAAC,EAAA,sBAAAuX,IAAAzX,EAAAC,EAAAC,EAAA,sBAAAwX,IAAA1X,EAAAC,EAAAC,EAAA,sBAAAyX,IAAA3X,EAAAC,EAAAC,EAAA,sBAAA0X,IAAA5X,EAAAC,EAAAC,EAAA,sBAAA2X,IAAA7X,EAAAC,EAAAC,EAAA,sBAAA4X,IAAA9X,EAAAC,EAAAC,EAAA,sBAAA6X,IAAA,IAAAC,EAAAhY,EAAA,KAqBM,SAAUyX,EAAiBhX,EAAaiG,GAI5C,OAHKA,EAAIuR,SAAS,OAChBvR,GAAO,KAELmR,EAASpX,GACJiG,EAAIyB,QAAQ,cAAe,oBAAsB,SAEnDzB,EAAM,kBAGT,SAAUgR,EAAcQ,GAC5B,OAAOrX,OAAAmX,EAAA,EAAAnX,CAAWqX,IAASA,EAAKC,iBAC5BJ,EAAcG,EAAKC,uBACnBpS,EAGA,SAAU4R,EAA0BO,GACxC,OACErX,OAAAmX,EAAA,EAAAnX,CAAWqX,KAAUN,EAAYM,EAAKC,mBAAqBN,EAASK,EAAKC,mBAIvE,SAAUP,EAAYzU,GAC1B,QAAOA,GAASA,EAAOiV,WAAW,aAG9B,SAAUP,EAAS1U,GACvB,MAAkB,WAAXA,EAGH,SAAU2U,EAAO3U,GACrB,MAAkB,cAAXA,EAGH,SAAU4U,EAAc5U,GAC5B,OAAIyU,EAAYzU,GACP,YAEFA,s6CCrCLkV,GAAmB,EAEjB,SAAUC,EAAc5R,EAAapB,GACzC,YADyC,IAAAA,MAAA,QAClC,IAAI2J,QAAQ,SAAA0D,GACjB,IAAM4F,EAAYC,SAASC,cAAc,UACzCF,EAAUzW,IAAM,GAAGjB,OAAA6X,EAAA,WAAA7X,GAAe6F,EAClC6R,EAAUI,OAAShG,EACnB6F,SAASI,qBAAqBtT,GAAQ,GAAGuT,YAAYN,KAInD,SAAgBO,EAAkBrY,mGAEtC,OADMsY,EAAYlY,OAAAmY,EAAA,EAAAnY,CAAsBJ,IAEtC,GAAOwO,QAAQ0D,QAAQoG,IAGpBV,EAAD,MAEuB,GAAMpJ,QAAA2G,IAAA,CAAA5V,EAAAiZ,EAAA,GAAAjZ,EAAAiZ,EAAA,GAAAjZ,EAAAiZ,EAAA,GAAAjZ,EAAAiZ,EAAA,GAAAjZ,EAAAiZ,EAAA,OAAArY,KAAAZ,EAAAkZ,KAAA,oBAAzBC,EAAmBpY,EAAAqY,OAA8DC,WAEvFhB,GAAmB,mBAGrB,SAAMC,EAAc,WAAW7X,EAAG,eAGlC,OAHAM,EAAAqY,QAEME,EAAQzY,OAAAmY,EAAA,EAAAnY,CAAsBJ,IAElC,GAAO6Y,GAET,GAAOrK,QAAQC,kDCpDjBlP,EAAAC,EAAAC,EAAA,sBAAA8V,IAAA,IAAAuD,EAAAvZ,EAAA,KAAAwZ,EAAAxZ,EAAA,KAsBc,SAAUgW,EAAwByD,GAChC5Y,OAAA2Y,EAAA,QAAA3Y,GACRF,SAAS4Y,EAAA,EAAuCE,2SCY5CtP,gEAVCuP,EACX,4CAEWC,EACX,6CAEWC,EAAwB,0BAExBC,EAA8C,sCAOrD,SAAUC,EAAYjO,EAAgBkO,GAC1C,IAAMC,EAAiBnZ,OAAAoZ,EAAA,cAAApZ,CAAcgL,EAAO,SACzC1D,QAAQ,UAAW,IACnBA,QAAQ,aAAc,OACzB,OAAO4R,EAASC,EAAiBnZ,OAAA0W,EAAA,wBAAA1W,CAAwB,uBAAwBmZ,IATnF,SAAY7P,GACVA,IAAA,6CACAA,IAAA,eAFF,CAAYA,MAAI,KAiBT,IAAM+P,EAAaC,IACxB,SAACC,QAAA,IAAAA,MAAA,IACC,IAAI1L,OAAe3I,EACf5C,OAAS4C,EAEb,GAAIqU,EAAQ,gBACVjX,EAAS,SACTuL,EAAe7N,OAAAwZ,EAAA,sBAAAxZ,CAAsBuZ,EAAQ,sBACxC,GAAIA,EAAQ,UACjBjX,EAAS,YACTuL,EAAe7N,OAAAwZ,EAAA,sBAAAxZ,CAAsBuZ,EAAQ,gBACxC,GAAIA,EAAQ,IAAS,CAC1B,IAAME,EAAMzZ,OAAA0Z,EAAA,UAAA1Z,CAAUuZ,EAAQ,KAC1BE,GAAOA,EAAIE,MACbrX,EAAS,YACTuL,EAAe4L,EAAIE,KAGvB,MAAO,CAAE9L,aAAYA,EAAEvL,OAAMA,KAIpBsX,EAAiB,SAAC3J,GAC7B,OAAAjQ,OAAAwZ,EAAA,WAAAxZ,CAAW,CACT6Z,gBAAiB7Z,OAAAU,EAAA,EAAAV,CAASiQ,EAAM3N,QAAUtC,OAAAwZ,EAAA,gBAAAxZ,CAAgBiQ,EAAMpC,mBAAgB3I,EAChF4U,UAAW9Z,OAAAU,EAAA,EAAAV,CAAYiQ,EAAM3N,QAAUtC,OAAAwZ,EAAA,gBAAAxZ,CAAgBiQ,EAAMpC,mBAAgB3I,qoBCrD3E,SAAU8Q,EAAgB+D,GAC9B,IAAAC,EAAA,SAAApX,GAAA,SAAAoX,mDAgBA,OAhBsBnW,EAAAmW,EAAApX,GAGpBoX,EAAAlW,UAAAC,kBAAA,WACO/D,OAAAia,EAAA,EAAAja,CAAWiD,KAAKH,MAAM8R,cACzBsF,OAIJF,EAAAlW,UAAAK,OAAA,WACE,OAAInE,OAAAia,EAAA,EAAAja,CAAWiD,KAAKH,MAAM8R,aACjBuB,EAAA,cAAC4D,EAAgBnE,EAAA,GAAK3S,KAAKH,QAE3B,MAZJkX,EAAAG,YAAcna,OAAAoa,EAAA,EAAApa,CAAsB+Z,EAAkB,gBAe/DC,EAhBA,CAAsB7D,EAAA,WAkBtB,OAAOnW,OAAAqa,EAAA,EAAAra,CAAgBga,0eCfnB,SAAUM,EAAoBC,GAClC,OAAOva,OAAAwa,EAAA,KAAAxa,CAAK,yCAA0Cua,GAAMvT,MAAMyT,EAAA,GAG9D,SAAUC,IACd,OAAO1a,OAAAwa,EAAA,QAAAxa,CAAQ,sCAAsCgH,MAAMyT,EAAA,GAQvD,SAAUE,EAAmBJ,GAGjC,OAAOva,OAAAwa,EAAA,yBAAAxa,CACL,WAAM,OAAAA,OAAAwa,EAAA,QAAAxa,CAAQ,yCAARua,IACN,CAAEK,IAAK,GAAIC,cAAe,IAC1B,WAAM,UACN,CAAC,MAEA7T,MAAMyT,EAAA,GACN1a,KAAK,SAACG,OAAEyL,EAAAzL,EAAAyL,gBAAiBgF,EAAAzQ,EAAAyQ,kBAAwB,MAAC,CACjDhF,gBAAeiK,EAAA,GACVjK,EAAe,CAClBxK,KAAMwK,EAAgBxK,MAAQwK,EAAgB/L,MAEhD+Q,kBAAiBA,KAIjB,SAAUmK,EAAgBP,GAG9B,OAAOva,OAAAwa,EAAA,QAAAxa,CAAQ,yCAA0Cua,GAAMvT,MAAMyT,EAAA,GAGjE,SAAUM,IACd,OAAO/a,OAAAwa,EAAA,QAAAxa,CAAQ,kDAAkDD,KAC/D,SAACG,GACC,OADCA,EAAA8a,aACYC,IAAI,SAACC,GAAiC,OAAAtF,EAAA,GAAMsF,EAAG,CAAE/Z,KAAM+Z,EAAI/Z,MAAQ+Z,EAA7Btb,SACrD6a,EAAA,GAIE,SAAUU,EAAiBZ,GAI/B,OAAOva,OAAAwa,EAAA,SAAAxa,CAAS,0CAAyC4V,EAAA,GACpD2E,EAAI,CACPa,iBAAkBb,EAAKa,iBAAiB9H,KAAK,QAC5CtM,MAAMyT,EAAA,GAGL,SAAUY,EAAmBxV,GAEjC,IAAMyV,EAASzV,EAAIyB,QAAQ,sBAAuB,iCAClD,OAAOtH,OAAAwa,EAAA,YAAAxa,CAAesb,EAAM,oCCvF9B,IAAAC,EAAcpc,EAAQ,KAEtB,iBAAAoc,MAAA,EAA4CC,EAAAnI,EAASkI,EAAA,MAOrD,IAAA3Z,EAAA,CAAe6Z,KAAA,EAEfC,eAPAA,EAQAC,gBAAAzW,GAEa/F,EAAQ,IAARA,CAAoEoc,EAAA3Z,GAEjF2Z,EAAAK,SAAAJ,EAAAK,QAAAN,EAAAK,0CCjBAzc,EAAAC,EAAAC,EAAA,sBAAAiK,IAAA,IAAAwS,EAAA3c,EAAA,KAAA0B,EAAA1B,EAAA,IAiCc,SAAUmK,EAAKxG,GAC3B,IAAMhC,EAAYgb,EAAW,cAAe,kBAAmB,CAC7DC,UAAWjZ,EAAM2G,KACjBuS,cAAelZ,EAAMyG,WAGjB0S,GAAanZ,EAAM2G,MAAQ3G,EAAMyG,SAOvC,OACE1I,EAAA,qBACEC,UAAWA,EACXyH,QAAS0T,EARO,SAAC3Y,GACnBA,EAAMC,iBACNT,EAAM0G,eAM+BtE,EACnCkH,KAAM6P,EAAY,cAAW/W,EAC7BgX,SAAUD,EAAY,OAAI/W,GAC1BrE,EAAA,qBAAKC,UAAU,0BAA0BgC,EAAM4G,aAC7C5G,EAAM2G,MAAQ3G,EAAMqG,eACtBtI,EAAA,qBAAKC,UAAU,sBACbD,EAAA,wBAAKiC,EAAM6G,aAEX7G,EAAM2G,MAAQ5I,EAAA,qBAAKC,UAAU,sBAC/BD,EAAA,qBAAKC,UAAWgb,EAAW,CAAEpT,QAAS5F,EAAM2G,QAAU3G,EAAMmG,kDC1DlE9J,EAAAC,EAAAC,EAAA,sBAAA4L,IAAA,IAAAkL,EAAAhX,EAAA,IAAAgd,EAAAhd,EAAA,KAAAid,EAAAjd,EAAAkd,EAAAF,GAAAG,EAAAnd,EAAA,IAAAod,EAAApd,EAAA,KAwBMqd,EAAsB,GAEd,SAAUvR,IACtB,OACEkL,EAAA,oBAAIrV,UAAU,QACZqV,EAAA,cAACsG,EAAS,KAAEzc,OAAAsc,EAAA,UAAAtc,CAAU,mDACtBmW,EAAA,cAACsG,EAAS,KAAEzc,OAAAsc,EAAA,UAAAtc,CAAU,oDACtBmW,EAAA,cAACsG,EAAS,KAAEzc,OAAAsc,EAAA,UAAAtc,CAAU,uCACtBmW,EAAA,cAACsG,EAAS,KACRtG,EAAA,4BACGnW,OAAAsc,EAAA,wBAAAtc,CAAwB,mCAAoCwc,MAOjE,SAAUC,EAAUvc,OAAEgJ,EAAAhJ,EAAAgJ,SAC1B,OACEiN,EAAA,oBAAIrV,UAAU,4CACZqV,EAAA,cAACiG,EAAA7a,EAAS,CAACT,UAAU,eAAe4b,KAAMH,EAAA,OAAOI,aAChDzT,sCC7CP/J,EAAAC,EAAAC,EAAA,sBAAAud,IAAAzd,EAAAC,EAAAC,EAAA,sBAAAwd,IAAA,IAAArC,EAAArb,EAAA,IAAAsb,EAAAtb,EAAA,KAsBM,SAAUyd,IACd,OAAO5c,OAAAwa,EAAA,QAAAxa,CAAQ,wCAAwCD,KACrD,SAACG,GAA0B,OAAxBA,EAAA4M,mBACH2N,EAAA,GAIE,SAAUoC,EAAsBtC,GAKpC,OAAOva,OAAAwa,EAAA,KAAAxa,CAAK,6BAA8Bua,2nBCJtC,SAAUtE,EACd8D,GAEA,IAAAC,EAAA,SAAApX,GAAA,SAAAoX,mDAUA,OAVsBnW,EAAAmW,EAAApX,GAGpBoX,EAAAlW,UAAAC,kBAAA,WACEd,KAAKH,MAAMga,wBAGb9C,EAAAlW,UAAAK,OAAA,WACE,OAAOgS,EAAA,cAAC4D,EAAgBnE,EAAA,GAAK3S,KAAKH,SAP7BkX,EAAAG,YAAcna,OAAA+c,EAAA,EAAA/c,CAAsB+Z,EAAkB,yBAS/DC,EAVA,CAAsB7D,EAAA,WAYhBT,EAAqB,CAAEoH,qBAAsBE,EAAA,GAMnD,OAAOhd,OAAAid,EAAA,QAAAjd,CAJP,SAAyBwD,GACvB,MAAO,CAAE8Q,kBAAmBtU,OAAAkd,EAAA,mBAAAld,CAAmBwD,KAK/CkS,EAFK1V,CAGLga,0BCtDJwB,EAAAK,QAA2B1c,EAAQ,IAARA,EAAoE,IAE/F6Q,KAAA,CAAcwL,EAAAnI,EAAS,6hBAA6hB,wjBCuCpjB7G,EAAA,SAAA5J,GAAA,SAAA4J,mDAKA,OAL6C3I,EAAA2I,EAAA5J,GAC3C4J,EAAA1I,UAAAK,OAAA,WACU,IAAAmI,EAAA6Q,OAAAC,aAAA9Q,YACR,OAAO6J,EAAA,cAAC7J,EAAWsJ,EAAA,GAAK3S,KAAKH,SAEjC0J,EALA,CAA6C2J,EAAA","file":"js/307.1570825310815.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport * as api from '../../api/organizations';\nimport { addGlobalSuccessMessage } from '../../store/globalMessages';\nimport * as actions from '../../store/organizations';\n\nexport function updateOrganization(key: string, changes: T.OrganizationBase) {\n  return (dispatch: Dispatch<any>) => {\n    return api.updateOrganization(key, changes).then(() => {\n      dispatch(actions.updateOrganization(key, changes));\n      dispatch(addGlobalSuccessMessage(translate('organization.updated')));\n    });\n  };\n}\n\nexport function deleteOrganization(key: string) {\n  return (dispatch: Dispatch<any>) => {\n    return api.deleteOrganization(key).then(() => {\n      dispatch(actions.deleteOrganization(key));\n    });\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { sanitizeAlmId } from '../../../helpers/almIntegrations';\n\ninterface Props {\n  hideIcons?: boolean;\n  onChange: (organization: T.Organization) => void;\n  organization: string;\n  organizations: T.Organization[];\n}\n\nexport default function OrganizationSelect({\n  hideIcons,\n  onChange,\n  organization,\n  organizations\n}: Props) {\n  const optionRenderer = getOptionRenderer(hideIcons);\n  return (\n    <Select\n      autoFocus={!organization}\n      className=\"input-super-large\"\n      clearable={false}\n      id=\"select-organization\"\n      labelKey=\"name\"\n      onChange={onChange}\n      optionRenderer={optionRenderer}\n      options={sortBy(organizations, o => o.name.toLowerCase())}\n      placeholder={translate('onboarding.import_organization.choose_organization')}\n      required={true}\n      value={organization}\n      valueKey=\"key\"\n      valueRenderer={optionRenderer}\n    />\n  );\n}\n\nexport function getOptionRenderer(hideIcons?: boolean) {\n  return function optionRenderer(organization: T.Organization) {\n    const icon = organization.alm\n      ? `sonarcloud/${sanitizeAlmId(organization.alm.key)}`\n      : 'sonarcloud-square-logo';\n    const isPaidOrg = organization.subscription === 'PAID';\n    return (\n      <div className=\"display-flex-space-between\">\n        <span className=\"text-ellipsis flex-1\">\n          {!hideIcons && (\n            <img\n              alt={organization.alm ? organization.alm.key : 'SonarCloud'}\n              className=\"little-spacer-right\"\n              height={14}\n              src={`${getBaseUrl()}/images/${icon}.svg`}\n            />\n          )}\n          {organization.name}\n          <span className=\"note little-spacer-left\">{organization.key}</span>\n        </span>\n        {isPaidOrg && <div className=\"badge\">{translate('organization.paid_plan.badge')}</div>}\n      </div>\n    );\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { sanitizeAlmId } from '../../../helpers/almIntegrations';\n\nexport default function AlmApplicationInstalling({ almKey }: { almKey?: string }) {\n  return (\n    <DeferredSpinner\n      customSpinner={\n        <div className=\"sonarcloud page page-limited\">\n          <div className=\"huge-spacer-top text-center\">\n            <i className=\"spinner\" />\n            <p className=\"big-spacer-top\">\n              {translateWithParameters(\n                'onboarding.import_organization.installing',\n                almKey ? translate(sanitizeAlmId(almKey)) : 'ALM'\n              )}\n            </p>\n          </div>\n        </div>\n      }\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { isGithub } from '../../../helpers/almIntegrations';\nimport OrganizationSelect from '../components/OrganizationSelect';\n\ninterface Props {\n  almKey: string;\n  onBindOrganization: (organization: string) => Promise<void>;\n  unboundOrganizations: T.Organization[];\n}\n\ninterface State {\n  organization: string;\n  submitting: boolean;\n}\n\nexport default class AutoOrganizationBind extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { organization: this.getInitialSelectedOrganization(props), submitting: false };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getInitialSelectedOrganization(props: Props) {\n    if (props.unboundOrganizations.length === 1) {\n      return props.unboundOrganizations[0].key;\n    }\n    return '';\n  }\n\n  handleChange = ({ key }: T.Organization) => {\n    this.setState({ organization: key });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { organization } = this.state;\n    if (organization) {\n      this.setState({ submitting: true });\n      this.props.onBindOrganization(organization).then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  render() {\n    const { almKey } = this.props;\n    const { organization, submitting } = this.state;\n    return (\n      <form id=\"bind-organization-form\" onSubmit={this.handleSubmit}>\n        <OrganizationSelect\n          onChange={this.handleChange}\n          organization={organization}\n          organizations={this.props.unboundOrganizations}\n        />\n        {isGithub(almKey) && (\n          <Alert className=\"abs-width-400 big-spacer-top\" display=\"block\" variant=\"info\">\n            {translateWithParameters(\n              'onboarding.import_organization.bind_members_not_sync_info_x',\n              translate('organization', almKey)\n            )}\n            <Link\n              className=\"spacer-left\"\n              target=\"_blank\"\n              to={{ pathname: '/documentation/organizations/manage-team/' }}>\n              {translate('learn_more')}\n            </Link>\n          </Alert>\n        )}\n        <div className=\"display-flex-center big-spacer-top\">\n          <SubmitButton disabled={submitting || !organization}>\n            {translate('onboarding.import_organization.bind')}\n          </SubmitButton>\n          {submitting && <DeferredSpinner className=\"spacer-left\" />}\n        </div>\n      </form>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isWebUri } from 'valid-url';\nimport OrganizationAvatar from '../../../components/common/OrganizationAvatar';\n\ninterface Props {\n  initialValue?: string;\n  name?: string;\n  onChange: (value: string | undefined) => void;\n}\n\ninterface State {\n  editing: boolean;\n  error?: string;\n  touched: boolean;\n  value: string;\n}\n\nexport default class OrganizationAvatarInput extends React.PureComponent<Props, State> {\n  state: State = { error: undefined, editing: false, touched: false, value: '' };\n\n  componentDidMount() {\n    if (this.props.initialValue) {\n      const value = this.props.initialValue;\n      const error = this.validateUrl(value);\n      this.setState({ error, touched: Boolean(error), value });\n    }\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value.trim();\n    const error = this.validateUrl(value);\n    this.setState({ error, touched: true, value });\n    this.props.onChange(error === undefined ? value : undefined);\n  };\n\n  handleBlur = () => {\n    this.setState({ editing: false });\n  };\n\n  handleFocus = () => {\n    this.setState({ editing: true });\n  };\n\n  validateUrl(url: string) {\n    if (url.length > 0 && !isWebUri(url)) {\n      return translate('onboarding.create_organization.url.error');\n    }\n    return undefined;\n  }\n\n  render() {\n    const isInvalid = this.state.touched && !this.state.editing && this.state.error !== undefined;\n    const isValidUrl = this.state.error === undefined && this.state.value !== '';\n    const isValid = this.state.touched && isValidUrl;\n    return (\n      <ValidationInput\n        description={translate('onboarding.create_organization.avatar.description')}\n        error={this.state.error}\n        id=\"organization-avatar\"\n        isInvalid={isInvalid}\n        isValid={isValid}\n        label={translate('onboarding.create_organization.avatar')}>\n        <>\n          {(isValidUrl || this.props.name) && (\n            <OrganizationAvatar\n              className=\"display-block spacer-bottom\"\n              organization={{\n                avatar: isValidUrl ? this.state.value : undefined,\n                name: this.props.name || ''\n              }}\n            />\n          )}\n          <input\n            className={classNames('input-super-large', 'text-middle', {\n              'is-invalid': isInvalid,\n              'is-valid': isValid\n            })}\n            id=\"organization-avatar\"\n            onBlur={this.handleBlur}\n            onChange={this.handleChange}\n            onFocus={this.handleFocus}\n            placeholder={translate('onboarding.create_organization.avatar.placeholder')}\n            type=\"text\"\n            value={this.state.value}\n          />\n        </>\n      </ValidationInput>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getHostUrl } from 'sonar-ui-common/helpers/urls';\nimport { getOrganization } from '../../../api/organizations';\n\ninterface Props {\n  initialValue?: string;\n  onChange: (value: string | undefined) => void;\n}\n\ninterface State {\n  error?: string;\n  touched: boolean;\n  validating: boolean;\n  value: string;\n}\n\nexport default class OrganizationKeyInput extends React.PureComponent<Props, State> {\n  mounted = false;\n  constructor(props: Props) {\n    super(props);\n    this.state = { error: undefined, touched: false, validating: false, value: '' };\n    this.checkFreeKey = debounce(this.checkFreeKey, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.props.initialValue !== undefined) {\n      this.setState({ value: this.props.initialValue });\n      this.validateKey(this.props.initialValue);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkFreeKey = (key: string) => {\n    this.setState({ validating: true });\n    return getOrganization(key)\n      .then(organization => {\n        if (this.mounted) {\n          if (organization === undefined) {\n            this.setState({ error: undefined, validating: false });\n            this.props.onChange(key);\n          } else {\n            this.setState({\n              error: translate('onboarding.create_organization.organization_name.taken'),\n              touched: true,\n              validating: false\n            });\n            this.props.onChange(undefined);\n          }\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ error: undefined, validating: false });\n          this.props.onChange(key);\n        }\n      });\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    this.setState({ touched: true, value });\n    this.validateKey(value);\n  };\n\n  validateKey(key: string) {\n    if (key.length > 255 || !/^[a-z0-9][a-z0-9-]*[a-z0-9]?$/.test(key)) {\n      this.setState({\n        error: translate('onboarding.create_organization.organization_name.error'),\n        touched: true\n      });\n      this.props.onChange(undefined);\n    } else {\n      this.checkFreeKey(key);\n    }\n  }\n\n  render() {\n    const isInvalid = this.state.touched && this.state.error !== undefined;\n    const isValid = this.state.touched && !this.state.validating && this.state.error === undefined;\n    return (\n      <ValidationInput\n        error={this.state.error}\n        id=\"organization-key\"\n        isInvalid={isInvalid}\n        isValid={isValid}\n        label={translate('onboarding.create_organization.organization_name')}\n        required={true}>\n        <div className=\"display-inline-flex-baseline\">\n          <span className=\"little-spacer-right\">\n            {getHostUrl().replace(/https*:\\/\\//, '') + '/organizations/'}\n          </span>\n          <input\n            autoFocus={true}\n            className={classNames('input-super-large', {\n              'is-invalid': isInvalid,\n              'is-valid': isValid\n            })}\n            id=\"organization-key\"\n            maxLength={255}\n            onChange={this.handleChange}\n            type=\"text\"\n            value={this.state.value}\n          />\n        </div>\n      </ValidationInput>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isWebUri } from 'valid-url';\n\ninterface Props {\n  initialValue?: string;\n  onChange: (value: string | undefined) => void;\n}\n\ninterface State {\n  editing: boolean;\n  error?: string;\n  touched: boolean;\n  value: string;\n}\n\nexport default class OrganizationUrlInput extends React.PureComponent<Props, State> {\n  state: State = { error: undefined, editing: false, touched: false, value: '' };\n\n  componentDidMount() {\n    if (this.props.initialValue) {\n      const value = this.props.initialValue;\n      const error = this.validateUrl(value);\n      this.setState({ error, touched: Boolean(error), value });\n    }\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value.trim();\n    const error = this.validateUrl(value);\n    this.setState({ error, touched: true, value });\n    this.props.onChange(error === undefined ? value : undefined);\n  };\n\n  handleBlur = () => {\n    this.setState({ editing: false });\n  };\n\n  handleFocus = () => {\n    this.setState({ editing: true });\n  };\n\n  validateUrl(url: string) {\n    if (url.length > 0 && !isWebUri(url)) {\n      return translate('onboarding.create_organization.url.error');\n    }\n    return undefined;\n  }\n\n  render() {\n    const isInvalid = this.state.touched && !this.state.editing && this.state.error !== undefined;\n    const isValid = this.state.touched && this.state.error === undefined && this.state.value !== '';\n    return (\n      <ValidationInput\n        error={this.state.error}\n        id=\"organization-url\"\n        isInvalid={isInvalid}\n        isValid={isValid}\n        label={translate('onboarding.create_organization.url')}>\n        <input\n          className={classNames('input-super-large', 'text-middle', {\n            'is-invalid': isInvalid,\n            'is-valid': isValid\n          })}\n          id=\"organization-url\"\n          onBlur={this.handleBlur}\n          onChange={this.handleChange}\n          onFocus={this.handleFocus}\n          type=\"text\"\n          value={this.state.value}\n        />\n      </ValidationInput>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport OrganizationAvatarInput from '../components/OrganizationAvatarInput';\nimport OrganizationKeyInput from '../components/OrganizationKeyInput';\nimport OrganizationUrlInput from '../components/OrganizationUrlInput';\n\ntype RequiredOrganization = Required<T.OrganizationBase>;\n\ninterface Props {\n  infoBlock?: React.ReactNode;\n  onContinue: (organization: T.Organization) => Promise<void>;\n  organization?: T.Organization;\n  submitText: string;\n}\n\ninterface State {\n  additional: boolean;\n  avatar?: string;\n  description?: string;\n  key?: string;\n  name?: string;\n  submitting: boolean;\n  url?: string;\n}\n\ntype ValidState = Pick<State, Exclude<keyof State, RequiredOrganization>> & RequiredOrganization;\n\nexport default class OrganizationDetailsForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    const { organization } = props;\n    this.state = {\n      additional: false,\n      avatar: (organization && organization.avatar) || '',\n      description: (organization && organization.description) || '',\n      key: (organization && organization.key) || undefined,\n      name: (organization && organization.name) || '',\n      submitting: false,\n      url: (organization && organization.url) || ''\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  canSubmit(state: State): state is ValidState {\n    return Boolean(\n      state.key !== undefined &&\n        state.name !== undefined &&\n        state.description !== undefined &&\n        state.avatar !== undefined &&\n        state.url !== undefined\n    );\n  }\n\n  handleAdditionalClick = () => {\n    this.setState(state => ({ additional: !state.additional }));\n  };\n\n  handleAvatarUpdate = (avatar: string | undefined) => {\n    this.setState({ avatar });\n  };\n\n  handleDescriptionUpdate = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ description: event.currentTarget.value });\n  };\n\n  handleKeyUpdate = (key: string | undefined) => {\n    this.setState({ key });\n  };\n\n  handleNameUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handleUrlUpdate = (url: string | undefined) => {\n    this.setState({ url });\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const { state } = this;\n    if (this.canSubmit(state)) {\n      this.setState({ submitting: true });\n      this.props\n        .onContinue({\n          avatar: state.avatar,\n          description: state.description,\n          key: state.key,\n          name: state.name,\n          url: state.url\n        })\n        .then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  render() {\n    const { submitting } = this.state;\n    const { infoBlock } = this.props;\n    return (\n      <form id=\"organization-form\" onSubmit={this.handleSubmit}>\n        <OrganizationKeyInput initialValue={this.state.key} onChange={this.handleKeyUpdate} />\n        <div className=\"big-spacer-top\">\n          <ResetButtonLink onClick={this.handleAdditionalClick}>\n            {translate(\n              this.state.additional\n                ? 'onboarding.create_organization.hide_additional_info'\n                : 'onboarding.create_organization.add_additional_info'\n            )}\n            <DropdownIcon className=\"little-spacer-left\" turned={this.state.additional} />\n          </ResetButtonLink>\n        </div>\n        <div className=\"js-additional-info\" hidden={!this.state.additional}>\n          <div className=\"big-spacer-top\">\n            <label htmlFor=\"organization-display-name\">\n              <strong>{translate('onboarding.create_organization.display_name')}</strong>\n            </label>\n            <div className=\"little-spacer-top\">\n              <input\n                className=\"input-super-large text-middle\"\n                id=\"organization-display-name\"\n                maxLength={255}\n                onChange={this.handleNameUpdate}\n                type=\"text\"\n                value={this.state.name}\n              />\n            </div>\n            <div className=\"note abs-width-400\">\n              {translate('onboarding.create_organization.display_name.description')}\n            </div>\n          </div>\n          <div className=\"big-spacer-top\">\n            <OrganizationAvatarInput\n              initialValue={this.state.avatar}\n              name={this.state.name}\n              onChange={this.handleAvatarUpdate}\n            />\n          </div>\n          <div className=\"big-spacer-top\">\n            <label htmlFor=\"organization-description\">\n              <strong>{translate('onboarding.create_organization.description')}</strong>\n            </label>\n            <div className=\"little-spacer-top\">\n              <textarea\n                className=\"input-super-large text-middle\"\n                id=\"organization-description\"\n                maxLength={256}\n                onChange={this.handleDescriptionUpdate}\n                rows={3}\n                value={this.state.description}\n              />\n            </div>\n          </div>\n          <div className=\"big-spacer-top\">\n            <OrganizationUrlInput initialValue={this.state.url} onChange={this.handleUrlUpdate} />\n          </div>\n        </div>\n\n        {infoBlock}\n\n        <div className=\"display-flex-center big-spacer-top\">\n          <SubmitButton disabled={submitting || !this.canSubmit(this.state)}>\n            {this.props.submitText}\n          </SubmitButton>\n          {submitting && <DeferredSpinner className=\"spacer-left\" />}\n        </div>\n      </form>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Step from '../../tutorials/components/Step';\n\ninterface Props {\n  children: React.ReactNode;\n  finished: boolean;\n  onOpen: () => void;\n  open: boolean;\n  organization?: T.Organization;\n  stepTitle?: string;\n}\nexport default class OrganizationDetailsStep extends React.PureComponent<Props> {\n  renderForm = () => {\n    return <div className=\"boxed-group-inner\">{this.props.children}</div>;\n  };\n\n  renderResult = () => {\n    const { organization } = this.props;\n    return organization ? (\n      <div className=\"boxed-group-actions display-flex-center\">\n        <AlertSuccessIcon className=\"spacer-right\" />\n        <strong className=\"text-limited\">{organization.key}</strong>\n      </div>\n    ) : null;\n  };\n\n  render() {\n    return (\n      <Step\n        finished={this.props.finished}\n        onOpen={this.props.onOpen}\n        open={this.props.open}\n        renderForm={this.renderForm}\n        renderResult={this.renderResult}\n        stepNumber={1}\n        stepTitle={\n          this.props.stepTitle || translate('onboarding.create_organization.enter_org_details')\n        }\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport RadioCard, { RadioCardProps } from 'sonar-ui-common/components/controls/RadioCard';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatPrice } from '../organization/utils';\n\ninterface Props extends RadioCardProps {\n  almName?: string;\n  hasWarning: boolean;\n}\n\nexport default function FreeCardPlan({ almName, hasWarning, ...props }: Props) {\n  const showInfo = almName && props.disabled;\n  const showWarning = almName && hasWarning && !props.disabled;\n\n  return (\n    <RadioCard title={translate('billing.free_plan.title')} titleInfo={formatPrice(0)} {...props}>\n      <div className=\"spacer-left\">\n        <ul className=\"big-spacer-left note\">\n          <li className=\"little-spacer-bottom\">\n            {translate('billing.free_plan.all_projects_analyzed_public')}\n          </li>\n          <li>{translate('billing.free_plan.anyone_can_browse_source_code')}</li>\n        </ul>\n      </div>\n      {showWarning && (\n        <Alert variant=\"warning\">\n          <FormattedMessage\n            defaultMessage={translate('billing.free_plan.private_repo_warning')}\n            id=\"billing.free_plan.private_repo_warning\"\n            values={{ alm: almName }}\n          />\n        </Alert>\n      )}\n      {showInfo && (\n        <Alert variant=\"info\">\n          <FormattedMessage\n            defaultMessage={translate('billing.free_plan.not_available_info')}\n            id=\"billing.free_plan.not_available_info\"\n            values={{ alm: almName }}\n          />\n        </Alert>\n      )}\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport RadioCard, { RadioCardProps } from 'sonar-ui-common/components/controls/RadioCard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatPrice } from '../organization/utils';\nimport UpgradeOrganizationAdvantages from './UpgradeOrganizationAdvantages';\n\ninterface Props extends RadioCardProps {\n  isRecommended: boolean;\n  startingPrice?: number;\n}\n\nexport default function PaidCardPlan({ isRecommended, startingPrice, ...props }: Props) {\n  return (\n    <RadioCard\n      recommended={isRecommended ? translate('billing.paid_plan.recommended') : undefined}\n      title={translate('billing.paid_plan.title')}\n      titleInfo={\n        startingPrice !== undefined && (\n          <FormattedMessage\n            defaultMessage={translate('billing.price_from_x')}\n            id=\"billing.price_from_x\"\n            values={{\n              price: <span className=\"big\">{formatPrice(startingPrice)}</span>\n            }}\n          />\n        )\n      }\n      {...props}>\n      <UpgradeOrganizationAdvantages />\n      <div className=\"big-spacer-left\">\n        <Link className=\"spacer-left\" target=\"_blank\" to=\"/about/pricing\">\n          {translate('billing.pricing.learn_more')}\n        </Link>\n      </div>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport FreeCardPlan from '../components/FreeCardPlan';\nimport PaidCardPlan from '../components/PaidCardPlan';\n\nexport enum Plan {\n  Free = 'free',\n  Paid = 'paid'\n}\n\ninterface Props {\n  almApplication?: T.AlmApplication;\n  almOrganization?: T.AlmOrganization;\n  onChange: (plan: Plan) => void;\n  plan: Plan;\n  startingPrice: number;\n}\n\nexport default class PlanSelect extends React.PureComponent<Props> {\n  handleFreePlanClick = () => {\n    this.props.onChange(Plan.Free);\n  };\n\n  handlePaidPlanClick = () => {\n    this.props.onChange(Plan.Paid);\n  };\n\n  render() {\n    const { almApplication, almOrganization, plan } = this.props;\n    const hasPrivateRepo = Boolean(almOrganization && almOrganization.privateRepos > 0);\n    const onlyPrivateRepo = Boolean(\n      hasPrivateRepo && almOrganization && almOrganization.publicRepos === 0\n    );\n\n    const cards = [\n      <PaidCardPlan\n        isRecommended={hasPrivateRepo}\n        key=\"paid\"\n        onClick={this.handlePaidPlanClick}\n        selected={plan === Plan.Paid}\n        startingPrice={this.props.startingPrice}\n      />,\n      <FreeCardPlan\n        almName={almApplication && almApplication.name}\n        disabled={onlyPrivateRepo}\n        hasWarning={hasPrivateRepo && plan === Plan.Free}\n        key=\"free\"\n        onClick={this.handleFreePlanClick}\n        selected={plan === Plan.Free}\n      />\n    ];\n\n    return (\n      <div\n        aria-label={translate('onboarding.create_organization.choose_plan')}\n        className=\"display-flex-row huge-spacer-bottom\"\n        role=\"radiogroup\">\n        {hasPrivateRepo ? cards : cards.reverse()}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport RadioToggle from 'sonar-ui-common/components/controls/RadioToggle';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { bindAlmOrganization } from '../../../api/alm-integration';\nimport { getAlmMembersUrl, isGithub, sanitizeAlmId } from '../../../helpers/almIntegrations';\nimport AutoOrganizationBind from './AutoOrganizationBind';\nimport OrganizationDetailsForm from './OrganizationDetailsForm';\nimport OrganizationDetailsStep from './OrganizationDetailsStep';\nimport PlanStep from './PlanStep';\nimport { Step } from './utils';\n\nenum Filters {\n  Bind = 'bind',\n  Create = 'create'\n}\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  almInstallId: string;\n  almOrganization: T.AlmOrganization;\n  className?: string;\n  createOrganization: (\n    organization: T.Organization & { installationId?: string }\n  ) => Promise<string>;\n  handleCancelImport: () => void;\n  handleOrgDetailsFinish: (organization: T.Organization) => Promise<void>;\n  handleOrgDetailsStepOpen: () => void;\n  onDone: () => void;\n  onOrgCreated: (organization: string) => void;\n  onUpgradeFail: () => void;\n  organization?: T.Organization;\n  step: Step;\n  subscriptionPlans?: T.SubscriptionPlan[];\n  unboundOrganizations: T.Organization[];\n}\n\ninterface State {\n  filter?: Filters;\n}\n\nexport default class AutoOrganizationCreate extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      filter: props.unboundOrganizations.length === 0 ? Filters.Create : undefined\n    };\n  }\n\n  handleBindOrganization = (organization: string) => {\n    return bindAlmOrganization({\n      organization,\n      installationId: this.props.almInstallId\n    }).then(() => this.props.onOrgCreated(organization));\n  };\n\n  handleCreateOrganization = () => {\n    const { almApplication, almOrganization, organization } = this.props;\n    if (!organization) {\n      return Promise.reject();\n    }\n    return this.props.createOrganization({\n      ...organization,\n      alm: {\n        key: almApplication.key,\n        membersSync: true,\n        personal: almOrganization.personal,\n        url: almOrganization.almUrl\n      },\n      installationId: this.props.almInstallId\n    });\n  };\n\n  handleOptionChange = (filter: Filters) => {\n    this.setState({ filter });\n  };\n\n  render() {\n    const {\n      almApplication,\n      almOrganization,\n      className,\n      organization,\n      step,\n      subscriptionPlans,\n      unboundOrganizations\n    } = this.props;\n    const { filter } = this.state;\n    const hasUnboundOrgs = unboundOrganizations.length > 0;\n    const almKey = sanitizeAlmId(almApplication.key);\n    return (\n      <div className={className}>\n        <OrganizationDetailsStep\n          finished={organization !== undefined}\n          onOpen={this.props.handleOrgDetailsStepOpen}\n          open={step === Step.OrganizationDetails}\n          organization={organization}\n          stepTitle={translate('onboarding.import_organization.import_org_details')}>\n          <div className=\"huge-spacer-bottom\">\n            <p className=\"display-flex-center big-spacer-bottom\">\n              <FormattedMessage\n                defaultMessage={translate('onboarding.import_organization_x')}\n                id=\"onboarding.import_organization_x\"\n                values={{\n                  avatar: (\n                    <img\n                      alt={almApplication.name}\n                      className=\"little-spacer-left\"\n                      src={`${getBaseUrl()}/images/sonarcloud/${sanitizeAlmId(\n                        almApplication.key\n                      )}.svg`}\n                      width={16}\n                    />\n                  ),\n                  name: <strong>{almOrganization.name}</strong>\n                }}\n              />\n              <ClearButton className=\"little-spacer-left\" onClick={this.props.handleCancelImport} />\n            </p>\n\n            {hasUnboundOrgs && (\n              <RadioToggle\n                name=\"filter\"\n                onCheck={this.handleOptionChange}\n                options={[\n                  {\n                    label: translate('onboarding.import_organization.create_new'),\n                    value: Filters.Create\n                  },\n                  {\n                    label: translate('onboarding.import_organization.bind_existing'),\n                    value: Filters.Bind\n                  }\n                ]}\n                value={filter}\n              />\n            )}\n          </div>\n\n          {filter === Filters.Create && (\n            <OrganizationDetailsForm\n              infoBlock={\n                isGithub(almKey) && (\n                  <Alert className=\"abs-width-600 big-spacer-top\" display=\"block\" variant=\"info\">\n                    <p>\n                      {translateWithParameters(\n                        'onboarding.import_organization.members_sync_info_x',\n                        translate('organization', almKey),\n                        almOrganization.name,\n                        translate(almKey)\n                      )}\n                    </p>\n                    <a\n                      href={getAlmMembersUrl(almApplication.key, almOrganization.almUrl)}\n                      rel=\"noopener noreferrer\"\n                      target=\"_blank\">\n                      {translateWithParameters(\n                        'organization.members.see_all_members_on_x',\n                        translate(almKey)\n                      )}\n                    </a>\n                  </Alert>\n                )\n              }\n              onContinue={this.props.handleOrgDetailsFinish}\n              organization={almOrganization}\n              submitText={translate('continue')}\n            />\n          )}\n          {filter === Filters.Bind && (\n            <AutoOrganizationBind\n              almKey={almKey}\n              onBindOrganization={this.handleBindOrganization}\n              unboundOrganizations={unboundOrganizations}\n            />\n          )}\n        </OrganizationDetailsStep>\n\n        {subscriptionPlans !== undefined && filter !== Filters.Bind && (\n          <PlanStep\n            almApplication={this.props.almApplication}\n            almOrganization={this.props.almOrganization}\n            createOrganization={this.handleCreateOrganization}\n            onDone={this.props.onDone}\n            onUpgradeFail={this.props.onUpgradeFail}\n            open={step === Step.Plan}\n            subscriptionPlans={subscriptionPlans}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\nimport { getExtensionStart } from '../../../helpers/extensions';\nimport Step from '../../tutorials/components/Step';\nimport BillingFormShim from '../components/BillingFormShim';\nimport PlanSelect, { Plan } from './PlanSelect';\n\nconst BillingForm = withCurrentUser(BillingFormShim);\n\ninterface Props {\n  almApplication?: T.AlmApplication;\n  almOrganization?: T.AlmOrganization;\n  createOrganization: () => Promise<string>;\n  onDone: () => void;\n  onUpgradeFail?: () => void;\n  open: boolean;\n  subscriptionPlans: T.SubscriptionPlan[];\n}\n\ninterface State {\n  plan: Plan;\n  ready: boolean;\n  submitting: boolean;\n}\n\nexport default class PlanStep extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      plan: props.almOrganization && props.almOrganization.privateRepos > 0 ? Plan.Paid : Plan.Free,\n      ready: false,\n      submitting: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getExtensionStart('billing/billing').then(\n      () => {\n        if (this.mounted) {\n          this.setState({ ready: true });\n        }\n      },\n      () => {}\n    );\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handlePlanChange = (plan: Plan) => {\n    this.setState({ plan });\n  };\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleFreePlanSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.setState({ submitting: true });\n    return this.props.createOrganization().then(() => {\n      this.props.onDone();\n      this.stopSubmitting();\n    }, this.stopSubmitting);\n  };\n\n  renderForm = () => {\n    const { submitting } = this.state;\n    const { subscriptionPlans } = this.props;\n    const startingPrice = subscriptionPlans && subscriptionPlans[0] && subscriptionPlans[0].price;\n    return (\n      <div className=\"boxed-group-inner\">\n        {this.state.ready && (\n          <>\n            <PlanSelect\n              almApplication={this.props.almApplication}\n              almOrganization={this.props.almOrganization}\n              onChange={this.handlePlanChange}\n              plan={this.state.plan}\n              startingPrice={startingPrice}\n            />\n\n            {this.state.plan === Plan.Paid ? (\n              <BillingForm\n                onCommit={this.props.onDone}\n                onFailToUpgrade={this.props.onUpgradeFail}\n                organizationKey={this.props.createOrganization}\n                subscriptionPlans={this.props.subscriptionPlans}>\n                {({ onSubmit, renderFormFields, renderSubmitGroup }) => (\n                  <form id=\"organization-paid-plan-form\" onSubmit={onSubmit}>\n                    {renderFormFields()}\n                    <div className=\"billing-input-large big-spacer-top\">\n                      {renderSubmitGroup(\n                        translate('onboarding.create_organization.create_and_upgrade')\n                      )}\n                    </div>\n                  </form>\n                )}\n              </BillingForm>\n            ) : (\n              <form\n                className=\"display-flex-center big-spacer-top\"\n                id=\"organization-free-plan-form\"\n                onSubmit={this.handleFreePlanSubmit}>\n                <SubmitButton disabled={submitting}>\n                  {translate('my_account.create_organization')}\n                </SubmitButton>\n                {submitting && <DeferredSpinner className=\"spacer-left\" />}\n              </form>\n            )}\n          </>\n        )}\n      </div>\n    );\n  };\n\n  render() {\n    const { almOrganization } = this.props;\n    const stepTitle = translate(\n      almOrganization && almOrganization.privateRepos > 0 && almOrganization.publicRepos === 0\n        ? 'onboarding.create_organization.enter_payment_details'\n        : 'onboarding.create_organization.choose_plan'\n    );\n\n    return (\n      <Step\n        finished={false}\n        onOpen={() => {}}\n        open={this.props.open}\n        renderForm={this.renderForm}\n        renderResult={() => null}\n        stepNumber={2}\n        stepTitle={stepTitle}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport OrganizationDetailsForm from './OrganizationDetailsForm';\nimport OrganizationDetailsStep from './OrganizationDetailsStep';\nimport PlanStep from './PlanStep';\nimport { Step } from './utils';\n\ninterface Props {\n  createOrganization: (organization: T.Organization) => Promise<string>;\n  className?: string;\n  onUpgradeFail: () => void;\n  handleOrgDetailsFinish: (organization: T.Organization) => Promise<void>;\n  handleOrgDetailsStepOpen: () => void;\n  onDone: () => void;\n  organization?: T.Organization;\n  step: Step;\n  subscriptionPlans?: T.SubscriptionPlan[];\n}\n\nexport default class ManualOrganizationCreate extends React.PureComponent<Props> {\n  handleCreateOrganization = () => {\n    const { organization } = this.props;\n    if (!organization) {\n      return Promise.reject();\n    }\n    return this.props.createOrganization(organization);\n  };\n\n  render() {\n    const { className, organization, subscriptionPlans } = this.props;\n    return (\n      <div className={className}>\n        <OrganizationDetailsStep\n          finished={organization !== undefined}\n          onOpen={this.props.handleOrgDetailsStepOpen}\n          open={this.props.step === Step.OrganizationDetails}\n          organization={organization}>\n          <OrganizationDetailsForm\n            onContinue={this.props.handleOrgDetailsFinish}\n            organization={organization}\n            submitText={translate('continue')}\n          />\n        </OrganizationDetailsStep>\n\n        {subscriptionPlans !== undefined && (\n          <PlanStep\n            createOrganization={this.handleCreateOrganization}\n            onDone={this.props.onDone}\n            onUpgradeFail={this.props.onUpgradeFail}\n            open={this.props.step === Step.Plan}\n            subscriptionPlans={subscriptionPlans}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport IdentityProviderLink from 'sonar-ui-common/components/controls/IdentityProviderLink';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { save } from 'sonar-ui-common/helpers/storage';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport OrganizationAvatar from '../../../components/common/OrganizationAvatar';\nimport { sanitizeAlmId } from '../../../helpers/almIntegrations';\nimport { ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP, serializeQuery } from './utils';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  almInstallId?: string;\n  almOrganization?: T.AlmOrganization;\n  almUnboundApplications: T.AlmUnboundApplication[];\n  boundOrganization?: T.OrganizationBase;\n  className?: string;\n}\n\ninterface State {\n  unboundInstallationId: string;\n}\n\nexport class RemoteOrganizationChoose extends React.PureComponent<Props & WithRouterProps, State> {\n  state: State = { unboundInstallationId: '' };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const { unboundInstallationId } = this.state;\n    if (unboundInstallationId) {\n      this.props.router.push({\n        pathname: '/create-organization',\n        query: serializeQuery({\n          almInstallId: unboundInstallationId,\n          almKey: this.props.almApplication.key\n        })\n      });\n    }\n  };\n\n  handleInstallAppClick = () => {\n    save(ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP, Date.now().toString(10));\n  };\n\n  handleInstallationChange = ({ installationId }: T.AlmUnboundApplication) => {\n    this.setState({ unboundInstallationId: installationId });\n  };\n\n  renderOption = (organization: T.AlmUnboundApplication) => {\n    const { almApplication } = this.props;\n    return (\n      <span>\n        <img\n          alt={almApplication.name}\n          className=\"spacer-right\"\n          height={14}\n          src={`${getBaseUrl()}/images/sonarcloud/${sanitizeAlmId(almApplication.key)}.svg`}\n        />\n        {organization.name}\n      </span>\n    );\n  };\n\n  render() {\n    const {\n      almApplication,\n      almInstallId,\n      almOrganization,\n      almUnboundApplications,\n      boundOrganization,\n      className\n    } = this.props;\n    const { unboundInstallationId } = this.state;\n    return (\n      <div className={classNames('boxed-group', className)}>\n        <div className=\"boxed-group-header\">\n          <h2>{translate('onboarding.import_organization.import_org_details')}</h2>\n        </div>\n        <div className=\"boxed-group-inner\">\n          {almInstallId && !almOrganization && (\n            <Alert className=\"big-spacer-bottom width-60\" variant=\"error\">\n              <div className=\"markdown\">\n                {translate('onboarding.import_organization.org_not_found')}\n                <ul>\n                  <li>{translate('onboarding.import_organization.org_not_found.tips_1')}</li>\n                  <li>{translate('onboarding.import_organization.org_not_found.tips_2')}</li>\n                </ul>\n              </div>\n            </Alert>\n          )}\n          {almOrganization && boundOrganization && (\n            <Alert className=\"big-spacer-bottom width-60\" variant=\"error\">\n              <FormattedMessage\n                defaultMessage={translate('onboarding.import_organization.already_bound_x')}\n                id=\"onboarding.import_organization.already_bound_x\"\n                values={{\n                  avatar: (\n                    <img\n                      alt={almApplication.name}\n                      className=\"little-spacer-left\"\n                      src={`${getBaseUrl()}/images/sonarcloud/${sanitizeAlmId(\n                        almApplication.key\n                      )}.svg`}\n                      width={16}\n                    />\n                  ),\n                  name: <strong>{almOrganization.name}</strong>,\n                  boundAvatar: (\n                    <OrganizationAvatar\n                      className=\"little-spacer-left\"\n                      organization={boundOrganization}\n                      small={true}\n                    />\n                  ),\n                  boundName: <strong>{boundOrganization.name}</strong>\n                }}\n              />\n            </Alert>\n          )}\n          <div className=\"display-flex-center\">\n            <div className=\"display-inline-block\">\n              <IdentityProviderLink\n                backgroundColor={almApplication.backgroundColor}\n                className=\"display-inline-block\"\n                iconPath={almApplication.iconPath}\n                name={almApplication.name}\n                onClick={this.handleInstallAppClick}\n                small={true}\n                url={almApplication.installationUrl}>\n                {translate(\n                  'onboarding.import_organization.choose_organization_button',\n                  almApplication.key\n                )}\n              </IdentityProviderLink>\n            </div>\n            {almUnboundApplications.length > 0 && (\n              <div className=\"display-flex-stretch\">\n                <div className=\"vertical-pipe-separator\">\n                  <div className=\"vertical-separator \" />\n                  <span className=\"note\">{translate('or')}</span>\n                  <div className=\"vertical-separator\" />\n                </div>\n                <form className=\"big-spacer-top big-spacer-bottom\" onSubmit={this.handleSubmit}>\n                  <div className=\"form-field abs-width-400\">\n                    <label className=\"text-normal\" htmlFor=\"select-unbound-installation\">\n                      {translateWithParameters(\n                        'onboarding.import_organization.choose_unbound_installation_x',\n                        translate(sanitizeAlmId(almApplication.key))\n                      )}\n                    </label>\n                    <Select\n                      className=\"input-super-large\"\n                      clearable={false}\n                      id=\"select-unbound-installation\"\n                      labelKey=\"name\"\n                      onChange={this.handleInstallationChange}\n                      optionRenderer={this.renderOption}\n                      options={sortBy(almUnboundApplications, o => o.name.toLowerCase())}\n                      placeholder={translate('onboarding.import_organization.choose_organization')}\n                      value={unboundInstallationId}\n                      valueKey=\"installationId\"\n                      valueRenderer={this.renderOption}\n                    />\n                  </div>\n                  <SubmitButton disabled={!unboundInstallationId}>\n                    {translate('continue')}\n                  </SubmitButton>\n                </form>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(RemoteOrganizationChoose);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as differenceInMinutes from 'date-fns/difference_in_minutes';\nimport { times } from 'lodash';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport Tabs from 'sonar-ui-common/components/controls/Tabs';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { addWhitePageClass, removeWhitePageClass } from 'sonar-ui-common/helpers/pages';\nimport { get, remove } from 'sonar-ui-common/helpers/storage';\nimport { slugify } from 'sonar-ui-common/helpers/strings';\nimport {\n  bindAlmOrganization,\n  getAlmAppInfo,\n  getAlmOrganization,\n  GetAlmOrganizationResponse,\n  listUnboundApplications\n} from '../../../api/alm-integration';\nimport { getSubscriptionPlans } from '../../../api/billing';\nimport * as api from '../../../api/organizations';\nimport A11ySkipTarget from '../../../app/components/a11y/A11ySkipTarget';\nimport addGlobalSuccessMessage from '../../../app/utils/addGlobalSuccessMessage';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { withUserOrganizations } from '../../../components/hoc/withUserOrganizations';\nimport { hasAdvancedALMIntegration, sanitizeAlmId } from '../../../helpers/almIntegrations';\nimport { getOrganizationUrl } from '../../../helpers/urls';\nimport { skipOnboarding } from '../../../store/users';\nimport { deleteOrganization } from '../../organizations/actions';\nimport '../../tutorials/styles.css'; // TODO remove me\nimport { createOrganization } from './actions';\nimport AlmApplicationInstalling from './AlmApplicationInstalling';\nimport AutoOrganizationCreate from './AutoOrganizationCreate';\nimport ManualOrganizationCreate from './ManualOrganizationCreate';\nimport RemoteOrganizationChoose from './RemoteOrganizationChoose';\nimport {\n  BIND_ORGANIZATION_KEY,\n  BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP,\n  ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP,\n  ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP,\n  parseQuery,\n  Query,\n  serializeQuery,\n  Step\n} from './utils';\n\ninterface Props {\n  createOrganization: (\n    organization: T.Organization & { installationId?: string }\n  ) => Promise<string>;\n  currentUser: T.LoggedInUser;\n  deleteOrganization: (key: string) => Promise<void>;\n  userOrganizations: T.Organization[];\n  skipOnboarding: () => void;\n}\n\ninterface State {\n  almApplication?: T.AlmApplication;\n  almOrganization?: T.AlmOrganization;\n  almOrgLoading: boolean;\n  almUnboundApplications: T.AlmUnboundApplication[];\n  bindingExistingOrg: boolean;\n  boundOrganization?: T.OrganizationBase;\n  loading: boolean;\n  organization?: T.Organization;\n  step: Step;\n  subscriptionPlans?: T.SubscriptionPlan[];\n}\n\ntype StateWithAutoImport = State & Required<Pick<State, 'almApplication'>>;\n\ntype TabKeys = 'auto' | 'manual';\n\ninterface LocationState {\n  tab?: TabKeys;\n}\n\nexport class CreateOrganization extends React.PureComponent<Props & WithRouterProps, State> {\n  mounted = false;\n  state: State = {\n    almOrgLoading: false,\n    almUnboundApplications: [],\n    bindingExistingOrg: false,\n    loading: true,\n    step: Step.OrganizationDetails\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    addWhitePageClass();\n\n    const query = parseQuery(this.props.location.query);\n\n    //highjack the process for the organization settings\n    if (\n      hasAdvancedALMIntegration(this.props.currentUser) &&\n      query.almInstallId &&\n      this.isStoredTimestampValid(BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP)\n    ) {\n      this.bindAndRedirectToOrganizationSettings(query.almInstallId);\n    } else {\n      const initRequests = [this.fetchSubscriptionPlans()];\n      if (hasAdvancedALMIntegration(this.props.currentUser)) {\n        initRequests.push(this.fetchAlmApplication());\n\n        if (query.almInstallId) {\n          this.fetchAlmOrganization(query.almInstallId);\n        } else {\n          initRequests.push(this.fetchAlmUnboundApplications());\n        }\n      }\n      Promise.all(initRequests).then(this.stopLoading, this.stopLoading);\n    }\n  }\n\n  componentDidUpdate(prevProps: WithRouterProps) {\n    const prevQuery = parseQuery(prevProps.location.query);\n    const query = parseQuery(this.props.location.query);\n    if (this.state.almApplication && prevQuery.almInstallId !== query.almInstallId) {\n      if (query.almInstallId) {\n        this.fetchAlmOrganization(query.almInstallId);\n      } else {\n        this.setState({ almOrganization: undefined, boundOrganization: undefined, loading: true });\n        this.fetchAlmUnboundApplications().then(this.stopLoading, this.stopLoading);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeWhitePageClass();\n  }\n\n  deleteOrganization = () => {\n    if (this.state.organization) {\n      this.props.deleteOrganization(this.state.organization.key);\n    }\n  };\n\n  fetchAlmApplication = () => {\n    return getAlmAppInfo().then(({ application }) => {\n      if (this.mounted) {\n        this.setState({ almApplication: application });\n      }\n    });\n  };\n\n  fetchAlmOrganization = (installationId: string) => {\n    this.setState({ almOrgLoading: true });\n    return getAlmOrganization({ installationId })\n      .then(({ almOrganization, boundOrganization }) => {\n        if (boundOrganization) {\n          return Promise.resolve({ almOrganization, boundOrganization });\n        }\n        return this.setValidOrgKey(almOrganization);\n      })\n      .then(\n        ({ almOrganization, boundOrganization }: GetAlmOrganizationResponse) => {\n          if (this.mounted) {\n            if (\n              boundOrganization &&\n              boundOrganization.key &&\n              !this.isStoredTimestampValid(ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP)\n            ) {\n              this.props.router.push({\n                pathname: getOrganizationUrl(boundOrganization.key)\n              });\n            } else {\n              this.setState({ almOrganization, almOrgLoading: false, boundOrganization });\n            }\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ almOrgLoading: false });\n          }\n        }\n      );\n  };\n\n  fetchAlmUnboundApplications = () => {\n    return listUnboundApplications().then(almUnboundApplications => {\n      if (this.mounted) {\n        this.setState({ almUnboundApplications });\n      }\n    });\n  };\n\n  fetchSubscriptionPlans = () => {\n    return getSubscriptionPlans().then(subscriptionPlans => {\n      if (this.mounted) {\n        this.setState({ subscriptionPlans });\n      }\n    });\n  };\n\n  handleCancelImport = () => {\n    this.updateUrlQuery({ almInstallId: undefined, almKey: undefined });\n  };\n\n  handleOrgCreated = (organization: string) => {\n    this.props.skipOnboarding();\n    if (this.isStoredTimestampValid(ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP)) {\n      this.props.router.push({\n        pathname: '/projects/create',\n        state: { organization, tab: this.state.almOrganization ? 'auto' : 'manual' }\n      });\n    } else {\n      this.props.router.push({ pathname: getOrganizationUrl(organization) });\n    }\n  };\n\n  handleOrgDetailsFinish = (organization: T.Organization) => {\n    this.setState({ organization, step: Step.Plan });\n    return Promise.resolve();\n  };\n\n  handleOrgDetailsStepOpen = () => {\n    this.setState({ step: Step.OrganizationDetails });\n  };\n\n  handlePlanDone = () => {\n    if (this.state.organization) {\n      this.handleOrgCreated(this.state.organization.key);\n    }\n  };\n\n  hasAutoImport(state: State): state is StateWithAutoImport {\n    return Boolean(state.almApplication);\n  }\n\n  isStoredTimestampValid = (timestampKey: string) => {\n    const storedTimestamp = get(timestampKey);\n    remove(timestampKey);\n    return storedTimestamp && differenceInMinutes(Date.now(), Number(storedTimestamp)) < 10;\n  };\n\n  onTabChange = (tab: TabKeys) => {\n    this.updateUrlState({ tab });\n  };\n\n  bindAndRedirectToOrganizationSettings(installationId: string) {\n    const organizationKey = get(BIND_ORGANIZATION_KEY) || '';\n    remove(BIND_ORGANIZATION_KEY);\n\n    this.setState({ bindingExistingOrg: true });\n\n    bindAlmOrganization({\n      installationId,\n      organization: organizationKey\n    }).then(\n      () => {\n        this.props.router.push({\n          pathname: `/organizations/${organizationKey}`\n        });\n        addGlobalSuccessMessage(translate('organization.bind.success'));\n      },\n      () => {}\n    );\n  }\n\n  getHeader = (bindingExistingOrg: boolean) => {\n    if (bindingExistingOrg) {\n      return translate('onboarding.binding_organization');\n    } else {\n      return translate('onboarding.create_organization.page.header');\n    }\n  };\n\n  setValidOrgKey = (almOrganization: T.AlmOrganization) => {\n    const key = slugify(almOrganization.key);\n    const keys = [key, ...times(9, i => `${key}-${i + 1}`)];\n    return api\n      .getOrganizations({ organizations: keys.join(',') })\n      .then(\n        ({ organizations }) => {\n          const availableKey = keys.find(key => !organizations.find(o => o.key === key));\n          return availableKey || `${key}-${Math.ceil(Math.random() * 1000) + 10}`;\n        },\n        () => key\n      )\n      .then(key => {\n        return { almOrganization: { ...almOrganization, key } };\n      });\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  updateUrlQuery = (query: Partial<Query> = {}) => {\n    this.props.router.push({\n      pathname: this.props.location.pathname,\n      query: serializeQuery({ ...parseQuery(this.props.location.query), ...query }),\n      state: this.props.location.state\n    });\n  };\n\n  updateUrlState = (state: Partial<LocationState> = {}) => {\n    this.props.router.replace({\n      pathname: this.props.location.pathname,\n      query: this.props.location.query,\n      state: { ...(this.props.location.state || {}), ...state }\n    });\n  };\n\n  renderContent = (almInstallId?: string) => {\n    const { location } = this.props;\n    const { state } = this;\n    const { organization, step, subscriptionPlans } = state;\n    const { tab = 'auto' } = (location.state || {}) as LocationState;\n\n    const commonProps = {\n      handleOrgDetailsFinish: this.handleOrgDetailsFinish,\n      handleOrgDetailsStepOpen: this.handleOrgDetailsStepOpen,\n      onDone: this.handlePlanDone,\n      organization,\n      step,\n      subscriptionPlans\n    };\n\n    if (!this.hasAutoImport(state)) {\n      return (\n        <ManualOrganizationCreate\n          {...commonProps}\n          createOrganization={this.props.createOrganization}\n          onUpgradeFail={this.deleteOrganization}\n          organization={this.state.organization}\n          step={this.state.step}\n        />\n      );\n    }\n\n    const { almApplication, almOrganization, boundOrganization } = state;\n\n    return (\n      <>\n        <Tabs<TabKeys>\n          onChange={this.onTabChange}\n          selected={tab || 'auto'}\n          tabs={[\n            {\n              key: 'auto',\n              node: translateWithParameters(\n                'onboarding.import_organization.import_from_x',\n                translate(sanitizeAlmId(almApplication.key))\n              )\n            },\n            {\n              key: 'manual',\n              node: translate('onboarding.create_organization.create_manually')\n            }\n          ]}\n        />\n\n        <ManualOrganizationCreate\n          {...commonProps}\n          className={classNames({ hidden: tab !== 'manual' && this.hasAutoImport(state) })}\n          createOrganization={this.props.createOrganization}\n          onUpgradeFail={this.deleteOrganization}\n        />\n\n        {almInstallId && almOrganization && !boundOrganization ? (\n          <AutoOrganizationCreate\n            {...commonProps}\n            almApplication={almApplication}\n            almInstallId={almInstallId}\n            almOrganization={almOrganization}\n            className={classNames({ hidden: tab !== 'auto' })}\n            createOrganization={this.props.createOrganization}\n            handleCancelImport={this.handleCancelImport}\n            onOrgCreated={this.handleOrgCreated}\n            onUpgradeFail={this.deleteOrganization}\n            unboundOrganizations={this.props.userOrganizations.filter(\n              ({ actions = {}, alm }) => !alm && actions.admin\n            )}\n          />\n        ) : (\n          <RemoteOrganizationChoose\n            almApplication={almApplication}\n            almInstallId={almInstallId}\n            almOrganization={almOrganization}\n            almUnboundApplications={state.almUnboundApplications}\n            boundOrganization={boundOrganization}\n            className={classNames({ hidden: tab !== 'auto' })}\n          />\n        )}\n      </>\n    );\n  };\n\n  render() {\n    const { location } = this.props;\n    const query = parseQuery(location.query);\n\n    if (this.state.almOrgLoading) {\n      return <AlmApplicationInstalling almKey={query.almKey} />;\n    }\n\n    const { bindingExistingOrg, subscriptionPlans } = this.state;\n    const header = this.getHeader(bindingExistingOrg);\n    const startedPrice = subscriptionPlans && subscriptionPlans[0] && subscriptionPlans[0].price;\n\n    return (\n      <>\n        <Helmet title={header} titleTemplate=\"%s\" />\n        <div className=\"page page-limited huge-spacer-top huge-spacer-bottom\">\n          <A11ySkipTarget anchor=\"create_org_main\" />\n\n          <header className=\"page-header huge-spacer-bottom\">\n            <h1 className=\"page-title huge big-spacer-bottom\">\n              <strong>{header}</strong>\n            </h1>\n            {startedPrice !== undefined && (\n              <p className=\"page-description\">\n                {translate('onboarding.create_organization.page.description')}\n              </p>\n            )}\n          </header>\n          {this.state.loading ? <DeferredSpinner /> : this.renderContent(query.almInstallId)}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  createOrganization: createOrganization as any,\n  deleteOrganization: deleteOrganization as any,\n  skipOnboarding: skipOnboarding as any\n};\n\nexport default whenLoggedIn(\n  withUserOrganizations(\n    withRouter(\n      connect(\n        null,\n        mapDispatchToProps\n      )(CreateOrganization)\n    )\n  )\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport * as api from '../../../api/organizations';\nimport { isGithub } from '../../../helpers/almIntegrations';\nimport * as actions from '../../../store/organizations';\n\nexport function createOrganization({\n  alm,\n  ...organization\n}: T.Organization & { installationId?: string }) {\n  return (dispatch: Dispatch) => {\n    return api\n      .createOrganization({ ...organization, name: organization.name || organization.key })\n      .then((newOrganization: T.Organization) => {\n        dispatch(actions.createOrganization({ ...newOrganization, alm }));\n        if (alm && alm.membersSync && !alm.personal && isGithub(alm.key)) {\n          api.syncMembers(newOrganization.key);\n        }\n        return newOrganization.key;\n      });\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function getAlmMembersUrl(key: string, url: string): string {\n  if (!url.endsWith('/')) {\n    url += '/';\n  }\n  if (isGithub(key)) {\n    return url.replace('github.com/', 'github.com/orgs/') + 'people';\n  }\n  return url + 'profile/members';\n}\n\nexport function getUserAlmKey(user: T.CurrentUser) {\n  return isLoggedIn(user) && user.externalProvider\n    ? sanitizeAlmId(user.externalProvider)\n    : undefined;\n}\n\nexport function hasAdvancedALMIntegration(user: T.CurrentUser) {\n  return (\n    isLoggedIn(user) && (isBitbucket(user.externalProvider) || isGithub(user.externalProvider))\n  );\n}\n\nexport function isBitbucket(almKey?: string): boolean {\n  return almKey ? almKey.startsWith('bitbucket') : false;\n}\n\nexport function isGithub(almKey?: string): boolean {\n  return almKey === 'github';\n}\n\nexport function isVSTS(almKey?: string): boolean {\n  return almKey === 'microsoft';\n}\n\nexport function sanitizeAlmId(almKey: string) {\n  if (isBitbucket(almKey)) {\n    return 'bitbucket';\n  }\n  return almKey;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { getExtensionFromCache } from './extensionsHandler';\n\nlet librariesExposed = false;\n\nexport function installScript(url: string, target: 'body' | 'head' = 'body'): Promise<any> {\n  return new Promise(resolve => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = `${getBaseUrl()}${url}`;\n    scriptTag.onload = resolve;\n    document.getElementsByTagName(target)[0].appendChild(scriptTag);\n  });\n}\n\nexport async function getExtensionStart(key: string) {\n  const fromCache = getExtensionFromCache(key);\n  if (fromCache) {\n    return Promise.resolve(fromCache);\n  }\n\n  if (!librariesExposed) {\n    // Async import allows to reduce initial vendor bundle size\n    const exposeLibraries = (await import('../app/components/extensions/exposeLibraries')).default;\n    exposeLibraries();\n    librariesExposed = true;\n  }\n\n  await installScript(`/static/${key}.js`);\n\n  const start = getExtensionFromCache(key);\n  if (start) {\n    return start;\n  }\n  return Promise.reject();\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as globalMessages from '../../store/globalMessages';\nimport getStore from './getStore';\n\nexport default function addGlobalSuccessMessage(message: string): void {\n  const store = getStore();\n  store.dispatch(globalMessages.addGlobalSuccessMessage(message));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { memoize } from 'lodash';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { cleanQuery, parseAsOptionalString, serializeString } from 'sonar-ui-common/helpers/query';\nimport { decodeJwt } from 'sonar-ui-common/helpers/strings';\nimport { isBitbucket, isGithub } from '../../../helpers/almIntegrations';\n\nexport const ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP =\n  'sonarcloud.import_org.binding_in_progress';\n\nexport const ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP =\n  'sonarcloud.import_org.redirect_to_projects';\n\nexport const BIND_ORGANIZATION_KEY = 'sonarcloud.bind_org.key';\n\nexport const BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP = 'sonarcloud.bind_org.redirect_to_org';\n\nexport enum Step {\n  OrganizationDetails,\n  Plan\n}\n\nexport function formatPrice(price?: number, noSign?: boolean) {\n  const priceFormatted = formatMeasure(price, 'FLOAT')\n    .replace(/[.|,]0$/, '')\n    .replace(/([.|,]\\d)$/, '$10');\n  return noSign ? priceFormatted : translateWithParameters('billing.price_format', priceFormatted);\n}\n\nexport interface Query {\n  almInstallId?: string;\n  almKey?: string;\n}\n\nexport const parseQuery = memoize(\n  (urlQuery: T.RawQuery = {}): Query => {\n    let almInstallId = undefined;\n    let almKey = undefined;\n\n    if (urlQuery['installation_id']) {\n      almKey = 'github';\n      almInstallId = parseAsOptionalString(urlQuery['installation_id']);\n    } else if (urlQuery['clientKey']) {\n      almKey = 'bitbucket';\n      almInstallId = parseAsOptionalString(urlQuery['clientKey']);\n    } else if (urlQuery['jwt']) {\n      const jwt = decodeJwt(urlQuery['jwt']);\n      if (jwt && jwt.iss) {\n        almKey = 'bitbucket';\n        almInstallId = jwt.iss;\n      }\n    }\n    return { almInstallId, almKey };\n  }\n);\n\nexport const serializeQuery = (query: Query): T.RawQuery =>\n  cleanQuery({\n    installation_id: isGithub(query.almKey) ? serializeString(query.almInstallId) : undefined,\n    clientKey: isBitbucket(query.almKey) ? serializeString(query.almInstallId) : undefined\n  });\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport handleRequiredAuthentication from 'sonar-ui-common/helpers/handleRequiredAuthentication';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getWrappedDisplayName } from './utils';\nimport { withCurrentUser } from './withCurrentUser';\n\nexport function whenLoggedIn<P>(WrappedComponent: React.ComponentType<P>) {\n  class Wrapper extends React.Component<P & { currentUser: T.CurrentUser }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'whenLoggedIn');\n\n    componentDidMount() {\n      if (!isLoggedIn(this.props.currentUser)) {\n        handleRequiredAuthentication();\n      }\n    }\n\n    render() {\n      if (isLoggedIn(this.props.currentUser)) {\n        return <WrappedComponent {...this.props} />;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  return withCurrentUser(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport {\n  getCorsJSON,\n  getJSON,\n  post,\n  postJSON,\n  requestTryAndRepeatUntil\n} from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { AlmLanguagesStats } from '../apps/tutorials/analyzeProject/utils';\n\nexport function bindAlmOrganization(data: { installationId: string; organization: string }) {\n  return post('/api/alm_integration/bind_organization', data).catch(throwGlobalError);\n}\n\nexport function getAlmAppInfo(): Promise<{ application: T.AlmApplication }> {\n  return getJSON('/api/alm_integration/show_app_info').catch(throwGlobalError);\n}\n\nexport interface GetAlmOrganizationResponse {\n  almOrganization: T.AlmOrganization;\n  boundOrganization?: T.OrganizationBase;\n}\n\nexport function getAlmOrganization(data: {\n  installationId: string;\n}): Promise<GetAlmOrganizationResponse> {\n  return requestTryAndRepeatUntil(\n    () => getJSON('/api/alm_integration/show_organization', data),\n    { max: 25, slowThreshold: 20 },\n    () => true,\n    [404]\n  )\n    .catch(throwGlobalError)\n    .then(({ almOrganization, boundOrganization }) => ({\n      almOrganization: {\n        ...almOrganization,\n        name: almOrganization.name || almOrganization.key\n      },\n      boundOrganization\n    }));\n}\n\nexport function getRepositories(data: {\n  organization: string;\n}): Promise<{ repositories: T.AlmRepository[] }> {\n  return getJSON('/api/alm_integration/list_repositories', data).catch(throwGlobalError);\n}\n\nexport function listUnboundApplications(): Promise<T.AlmUnboundApplication[]> {\n  return getJSON('/api/alm_integration/list_unbound_applications').then(\n    ({ applications }) =>\n      applications.map((app: T.AlmUnboundApplication) => ({ ...app, name: app.name || app.key })),\n    throwGlobalError\n  );\n}\n\nexport function provisionProject(data: {\n  installationKeys: string[];\n  organization: string;\n}): Promise<{ projects: Array<{ projectKey: string }> }> {\n  return postJSON('/api/alm_integration/provision_projects', {\n    ...data,\n    installationKeys: data.installationKeys.join(',')\n  }).catch(throwGlobalError);\n}\n\nexport function getGithubLanguages(url: string): Promise<AlmLanguagesStats> {\n  // We don't want to throwGlobalError\n  const apiUrl = url.replace('https://github.com/', 'https://api.github.com/repos/');\n  return getCorsJSON(`${apiUrl}/languages`);\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n/* eslint-disable jsx-a11y/no-static-element-interactions, jsx-a11y/no-noninteractive-tabindex */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\n\ninterface Props {\n  finished?: boolean;\n  onOpen: VoidFunction;\n  open: boolean;\n  renderForm: () => React.ReactNode;\n  renderResult: () => React.ReactNode;\n  stepNumber: number;\n  stepTitle: React.ReactNode;\n}\n\nexport default function Step(props: Props) {\n  const className = classNames('boxed-group', 'onboarding-step', {\n    'is-open': props.open,\n    'is-finished': props.finished\n  });\n\n  const clickable = !props.open && props.finished;\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    props.onOpen();\n  };\n\n  return (\n    <div\n      className={className}\n      onClick={clickable ? handleClick : undefined}\n      role={clickable ? 'button' : undefined}\n      tabIndex={clickable ? 0 : undefined}>\n      <div className=\"onboarding-step-number\">{props.stepNumber}</div>\n      {!props.open && props.renderResult()}\n      <div className=\"boxed-group-header\">\n        <h2>{props.stepTitle}</h2>\n      </div>\n      {!props.open && <div className=\"boxed-group-inner\" />}\n      <div className={classNames({ hidden: !props.open })}>{props.renderForm()}</div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\n\nconst TRIAL_DURATION_DAYS = 14;\n\nexport default function UpgradeOrganizationAdvantages() {\n  return (\n    <ul className=\"note\">\n      <Advantage>{translate('billing.upgrade_box.unlimited_private_projects')}</Advantage>\n      <Advantage>{translate('billing.upgrade_box.strict_control_private_data')}</Advantage>\n      <Advantage>{translate('billing.upgrade_box.cancel_anytime')}</Advantage>\n      <Advantage>\n        <strong>\n          {translateWithParameters('billing.upgrade_box.free_trial_x', TRIAL_DURATION_DAYS)}\n        </strong>\n      </Advantage>\n    </ul>\n  );\n}\n\nexport function Advantage({ children }: { children: React.ReactNode }) {\n  return (\n    <li className=\"display-flex-center little-spacer-bottom\">\n      <CheckIcon className=\"spacer-right\" fill={colors.lightGreen} />\n      {children}\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getSubscriptionPlans(): Promise<T.SubscriptionPlan[]> {\n  return getJSON('/api/billing/show_subscription_plans').then(\n    ({ subscriptionPlans }) => subscriptionPlans,\n    throwGlobalError\n  );\n}\n\nexport function giveDowngradeFeedback(data: {\n  organization: string;\n  feedback: string;\n  additionalFeedback?: string;\n}): Promise<void> {\n  return post('/api/billing/send_feedback', data);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMyOrganizations } from '../../apps/account/organizations/actions';\nimport { getMyOrganizations, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\ninterface OwnProps {\n  fetchMyOrganizations: () => Promise<void>;\n  userOrganizations: T.Organization[];\n}\n\nexport function withUserOrganizations<P>(\n  WrappedComponent: React.ComponentType<P & Partial<OwnProps>>\n) {\n  class Wrapper extends React.Component<P & OwnProps> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withUserOrganizations');\n\n    componentDidMount() {\n      this.props.fetchMyOrganizations();\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  const mapDispatchToProps = { fetchMyOrganizations: fetchMyOrganizations as any };\n\n  function mapStateToProps(state: Store) {\n    return { userOrganizations: getMyOrganizations(state) };\n  }\n\n  return connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Wrapper);\n}\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".onboarding-step{position:relative;padding-left:34px}.onboarding-step:not(.is-open):not(.is-finished){opacity:.4}.onboarding-step .boxed-group-actions{height:24px;line-height:24px}.onboarding-step hr{margin-left:-54px}.onboarding-step-number{position:absolute;top:15px;left:15px;width:24px;height:24px;line-height:24px;border-radius:24px;background-color:#b9b9b9;color:#fff;font-size:14px;text-align:center}.onboarding-step.is-open .onboarding-step-number{background-color:#236a97}.onboarding-step.is-finished{cursor:pointer;outline:none}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface ChildrenProps {\n  onSubmit: React.FormEventHandler;\n  processingUpgrade: boolean;\n  renderFormFields: () => React.ReactNode;\n  renderNextCharge: (className?: string) => React.ReactNode;\n  renderRecap: () => React.ReactNode;\n  renderSubmitButton: (submitText?: string) => React.ReactNode;\n  renderSubmitGroup: (submitText?: string) => React.ReactNode;\n}\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  initialCountry?: string;\n  currentUser: T.CurrentUser;\n  onCommit: () => void | Promise<void>;\n  onFailToUpgrade?: () => void;\n  organizationKey: string | (() => Promise<string>);\n  subscriptionPlans: T.SubscriptionPlan[];\n}\n\nexport default class BillingFormShim extends React.Component<Props> {\n  render() {\n    const { BillingForm } = (window as any).SonarBilling;\n    return <BillingForm {...this.props} />;\n  }\n}\n"],"sourceRoot":""}