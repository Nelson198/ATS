{"version":3,"sources":["webpack:///./src/main/js/components/shared/Organization.tsx","webpack:///./src/main/js/apps/background-tasks/background-tasks.css?4904","webpack:///./src/main/js/apps/background-tasks/background-tasks.css","webpack:///./src/main/js/apps/background-tasks/utils.ts","webpack:///./src/main/js/apps/background-tasks/components/Footer.tsx","webpack:///./src/main/js/apps/background-tasks/components/NoWorkersSupportPopup.tsx","webpack:///./src/main/js/apps/background-tasks/components/WorkersForm.tsx","webpack:///./src/main/js/apps/background-tasks/components/Workers.tsx","webpack:///./src/main/js/apps/background-tasks/components/Header.tsx","webpack:///./src/main/js/apps/background-tasks/components/CurrentsFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/DateFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatusFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/TypesFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/Search.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatPendingCount.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatPendingTime.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatStillFailing.tsx","webpack:///./src/main/js/apps/background-tasks/components/Stats.tsx","webpack:///./src/main/js/apps/background-tasks/components/ScannerContext.tsx","webpack:///./src/main/js/apps/background-tasks/components/Stacktrace.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskActions.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskType.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskComponent.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskDate.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskDay.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskExecutionTime.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskId.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskStatus.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskSubmitter.tsx","webpack:///./src/main/js/apps/background-tasks/components/Task.tsx","webpack:///./src/main/js/apps/background-tasks/components/Tasks.tsx","webpack:///./src/main/js/apps/background-tasks/components/BackgroundTasksApp.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/intl/DateFormatter.tsx","webpack:///./src/main/js/apps/background-tasks/constants.ts","webpack:///./src/main/js/components/controls/DateInput.tsx","webpack:///./src/main/js/components/controls/DayPicker.css?dc71","webpack:///./src/main/js/components/controls/DayPicker.css","webpack:///./src/main/js/components/controls/styles.css?00e9","webpack:///./src/main/js/components/controls/styles.css","webpack:///./src/main/js/api/ce.ts","webpack:///./src/main/js/components/intl/TimeFormatter.tsx","webpack:///./src/main/js/components/controls/DateRangeInput.tsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react_redux__WEBPACK_IMPORTED_MODULE_1__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_2__","_ui_OrganizationLink__WEBPACK_IMPORTED_MODULE_3__","Organization","props","_a","link","organization","shouldBeDisplayed","className","linkClassName","name","__webpack_exports__","Object","state","ownProps","organizationKey","content","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","ONE_SECOND","ONE_MINUTE","ONE_HOUR","format","int","suffix","LIMIT","Footer","tasks","length","index_js_exposed","l10n","NoWorkersSupportPopup","href","rel","target","_super","WorkersForm","_this","call","this","mounted","handleClose","onClose","handleWorkerCountChange","option","setState","newWorkerCount","value","handleSubmit","event","preventDefault","submitting","ce","then","workerCount","__extends","prototype","componentDidMount","componentWillUnmount","render","label","String","Modal_default","a","contentLabel","onRequestClose","onSubmit","Select_default","clearable","onChange","searchable","Alert","variant","buttons","disabled","onClick","Workers","apply","arguments","canSetWorkerCount","formOpen","loading","noSupportPopup","loadWorkers","closeForm","handleChangeClick","handleHelpClick","stopPropagation","toggleNoSupportPopup","show","Workers_extends","Tooltip_default","overlay","AlertWarnIcon_default","fill","HelpTooltip_default","components_WorkersForm","Header","component","components_Workers","react_router_es","to","pathname","CurrentsFilter","handleChange","newValue","constants","ONLY_CURRENTS","ALL","CurrentsFilter_extends","checked","Checkbox_default","onCheck","DateFilter","handleDateRangeChange","from","minSubmittedAt","maxExecutedAt","DateFilter_extends","dateRange","DateRangeInput","StatusFilter","StatusFilter_extends","ALL_EXCEPT_PENDING","PENDING","IN_PROGRESS","SUCCESS","FAILED","CANCELED","TypesFilter","TypesFilter_extends","types","map","t","allOptions","Search","handleStatusChange","status","onFilterUpdate","handleTypeChange","taskType","handleCurrentsChange","currents","handleDateChange","date","handleQueryChange","query","handleReset","Search_extends","renderSearchBox","SearchBox_default","placeholder","components_StatusFilter","components_TypesFilter","components_CurrentsFilter","components_DateFilter","onReload","components_StatPendingCount","es","isSystemAdmin","rootReducer","canAdmin","onCancelAllPending","pendingCount","ConfirmButton_default","cancelButtonText","confirmButtonText","isDestructive","modalBody","modalHeader","onConfirm","color","theme","red","MIN_PENDING_TIME_THRESHOLD","StatPendingTime","pendingTime","measures","StatStillFailing","failingCount","onShowFailing","Stats","__rest","ScannerContext","handleCloseClick","ScannerContext_extends","loadScannerContext","task","id","scannerContext","size","componentName","type","Stacktrace","Stacktrace_extends","loadStacktrace","stacktrace","errorStacktrace","errorMessage","AnalysisWarningsModal","lazyLoad","e","bind","TaskActions","cancelTaskOpen","scannerContextOpen","stacktraceOpen","warningsOpen","handleFilterClick","onFilterTask","handleCancelTask","onCancelTask","handleCancelClick","handleShowScannerContextClick","closeCancelTask","closeScannerContext","handleShowStacktraceClick","closeStacktrace","handleShowWarningsClick","closeWarnings","TaskActions_extends","canFilter","canCancel","canShowStacktrace","canShowWarnings","warningCount","hasScannerContext","ActionsDropdown_default","ActionsDropdown","destructive","ConfirmModal_default","header","components_ScannerContext","components_Stacktrace","taskId","TaskType","TaskComponent","componentKey","branchType","ShortLivingBranchIcon_default","LongLivingBranchIcon_default","pullRequest","PullRequestIcon_default","componentQualifier","QualifierIcon_default","qualifier","getTaskComponentUrl","branch","title","style","marginLeft","marginRight","pullRequestTitle","urls","TaskDate","baseDate","parsedDate","dates","parsedBaseDate","diff","difference_in_days","TimeFormatter","long","TaskDay","submittedAt","prevSubmittedAt","shouldDisplay","is_same_day","DateFormatter","TaskExecutionTime","ms","seconds","Math","floor","minutes_1","hours","minutes","formatDuration","TaskId","TaskStatus","inner","PendingIcon_default","TaskSubmitter","submitter","Task","previousTask","submitterLogin","startedAt","executedAt","executionTimeMs","components_TaskActions","Tasks","classnames","new-loading","index","key","BackgroundTasksApp_BackgroundTasksApp","BackgroundTasksApp","stopLoading","loadTasks","parameters","filters","join","onlyCurrents","q","mapFiltersToParameters","location","componentId","Promise","all","organizations","uniq_default","filter","o","fetchOrganizations","failing","pending","handleFilterUpdate","nextState","nextQuery","__assign","keys","forEach","router","nextTask","newTask","handleFilterTask","handleShowFailing","handleCancelAllPending","loadTasksDebounced","debounce_default","BackgroundTasksApp_extends","componentDidUpdate","prevProps","helpers_query","Suggestions","suggestions","Helmet_default","components_Search","mapDispatchToProps","rootActions","_SuggestionsContext__WEBPACK_IMPORTED_MODULE_1__","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","formatterOption","year","month","day","longFormatterOption","children","react_intl__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","d","STATUSES","ALL_TYPES","CURRENTS","DEFAULT_FILTERS","DEBOUNCE_DELAY","DayPicker","sonar_ui_common_components_lazyLoad__WEBPACK_IMPORTED_MODULE_14__","DateInput","focus","input","openCalendar","handleResetClick","closeCalendar","currentMonth","Date","lastHovered","open","handleDayClick","modifiers","handleDayMouseEnter","handleCurrentMonthChange","date_fns_set_month__WEBPACK_IMPORTED_MODULE_3__","handleCurrentYearChange","date_fns_set_year__WEBPACK_IMPORTED_MODULE_4__","handlePreviousMonthClick","date_fns_sub_months__WEBPACK_IMPORTED_MODULE_5__","handleNextMonthClick","date_fns_add_months__WEBPACK_IMPORTED_MODULE_2__","highlightFrom","highlightTo","minDate","after","maxDate","months","lodash_range__WEBPACK_IMPORTED_MODULE_0___default","years","getFullYear","selectedDays","lastHoveredOrValue","highlighted","weekdaysLong","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_15__","weekdaysShort","react__WEBPACK_IMPORTED_MODULE_6__","sonar_ui_common_components_controls_OutsideClickHandler__WEBPACK_IMPORTED_MODULE_9___default","onClickOutside","classnames__WEBPACK_IMPORTED_MODULE_1__","InputWrapper","inputClassName","is-filled","innerRef","node","onFocus","readOnly","sonar_ui_common_components_icons_CalendarIcon__WEBPACK_IMPORTED_MODULE_11___default","sonar_ui_common_components_controls_buttons__WEBPACK_IMPORTED_MODULE_8__","iconProps","sonar_ui_common_components_icons_ChevronLeftIcon__WEBPACK_IMPORTED_MODULE_12___default","sonar_ui_common_components_controls_Select__WEBPACK_IMPORTED_MODULE_10___default","getMonth","sonar_ui_common_components_icons_ChevronRightIcon__WEBPACK_IMPORTED_MODULE_13___default","captionElement","NullComponent","disabledDays","before","firstDayOfWeek","navbarElement","onDayClick","onDayMouseEnter","react_intl__WEBPACK_IMPORTED_MODULE_7__","intl","other","formattedValue","formatDate","ref","getAnalysisStatus","getActivity","getStatus","getTask","cancelTask","cancelAllTasks","getTasksForComponent","getTypes","getWorkers","setWorkerCount","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","data","catch","assign","additionalFields","r","taskTypes","count","hour","minute","second","handleFromChange","setTimeout","toDateInput","handleToChange","defineProperty","react__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_0__","_DateInput__WEBPACK_IMPORTED_MODULE_3__","data-test","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__","element"],"mappings":"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","file":"js/312.1570825310815.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { areThereCustomOrganizations, getOrganizationByKey, Store } from '../../store/rootReducer';\nimport OrganizationLink from '../ui/OrganizationLink';\n\ninterface OwnProps {\n  organizationKey: string;\n}\n\ninterface Props {\n  link?: boolean;\n  linkClassName?: string;\n  organization: { key: string; name: string } | null;\n  shouldBeDisplayed?: boolean;\n}\n\nfunction Organization(props: Props) {\n  const { link = true, organization, shouldBeDisplayed } = props;\n\n  if (!shouldBeDisplayed || !organization) {\n    return null;\n  }\n\n  return (\n    <span>\n      {link ? (\n        <OrganizationLink className={props.linkClassName} organization={organization}>\n          {organization.name}\n        </OrganizationLink>\n      ) : (\n        organization.name\n      )}\n      <span className=\"slash-separator\" />\n    </span>\n  );\n}\n\nconst mapStateToProps = (state: Store, ownProps: OwnProps) => ({\n  organization: getOrganizationByKey(state, ownProps.organizationKey),\n  shouldBeDisplayed: areThereCustomOrganizations(state)\n});\n\nexport default connect(mapStateToProps)(Organization);\n\nexport const UnconnectedOrganization = Organization;\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./background-tasks.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./background-tasks.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./background-tasks.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".bt-search-form{display:flex;align-items:flex-end}.bt-search-form>li+li{margin-left:16px}.bt-search-form-label{margin-bottom:4px}.bt-search-form-field{padding:4px 0}.bt-search-form-large{flex:1}.bt-workers-warning-icon{margin-top:5px}.emphasised-measure{font-size:24px;font-weight:300}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { toShortNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { ALL_TYPES, CURRENTS, STATUSES } from './constants';\n\nexport interface Query {\n  currents: string;\n  maxExecutedAt?: Date;\n  minSubmittedAt?: Date;\n  query: string;\n  status: string;\n  taskType: string;\n}\n\nexport function updateTask(tasks: T.Task[], newTask: T.Task) {\n  return tasks.map(task => (task.id === newTask.id ? newTask : task));\n}\n\nexport function mapFiltersToParameters(filters: Partial<Query> = {}) {\n  const parameters: any = {};\n\n  if (filters.status === STATUSES.ALL) {\n    parameters.status = [\n      STATUSES.PENDING,\n      STATUSES.IN_PROGRESS,\n      STATUSES.SUCCESS,\n      STATUSES.FAILED,\n      STATUSES.CANCELED\n    ].join();\n  } else if (filters.status === STATUSES.ALL_EXCEPT_PENDING) {\n    parameters.status = [\n      STATUSES.IN_PROGRESS,\n      STATUSES.SUCCESS,\n      STATUSES.FAILED,\n      STATUSES.CANCELED\n    ].join();\n  } else {\n    parameters.status = filters.status;\n  }\n\n  if (filters.taskType !== ALL_TYPES) {\n    parameters.type = filters.taskType;\n  }\n\n  if (filters.currents !== CURRENTS.ALL) {\n    parameters.onlyCurrents = true;\n  }\n\n  if (filters.minSubmittedAt) {\n    parameters.minSubmittedAt = toShortNotSoISOString(filters.minSubmittedAt);\n  }\n\n  if (filters.maxExecutedAt) {\n    parameters.maxExecutedAt = toShortNotSoISOString(filters.maxExecutedAt);\n  }\n\n  if (filters.query) {\n    parameters.q = filters.query;\n  }\n\n  return parameters;\n}\n\nconst ONE_SECOND = 1000;\nconst ONE_MINUTE = 60 * ONE_SECOND;\nconst ONE_HOUR = 60 * ONE_MINUTE;\n\nfunction format(int: number, suffix: string) {\n  return `${int}${suffix}`;\n}\n\nexport function formatDuration(value: number | undefined) {\n  if (!value) {\n    return '';\n  }\n  if (value < ONE_SECOND) {\n    return format(value, 'ms');\n  } else if (value < ONE_SECOND * 10) {\n    const seconds = Math.floor(value / ONE_SECOND);\n    const ms = value - seconds * ONE_SECOND;\n    return seconds + '.' + format(ms, 's');\n  } else if (value < ONE_MINUTE) {\n    const seconds = Math.floor(value / ONE_SECOND);\n    return format(seconds, 's');\n  } else if (value < ONE_MINUTE * 10) {\n    const minutes = Math.floor(value / ONE_MINUTE);\n    const seconds = Math.floor((value - minutes * ONE_MINUTE) / ONE_SECOND);\n    return format(minutes, 'min') + ' ' + format(seconds, 's');\n  }\n  const hours = Math.floor(value / ONE_HOUR);\n  const minutes = Math.floor((value - hours * ONE_HOUR) / ONE_MINUTE);\n  return format(hours, 'h') + ' ' + format(minutes, 'min');\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\nconst LIMIT = 1000;\n\ninterface Props {\n  tasks: T.Task[];\n}\n\nexport default function Footer({ tasks }: Props) {\n  if (tasks.length < LIMIT) {\n    return null;\n  }\n\n  return (\n    <footer className=\"spacer-top note text-center\">\n      {translateWithParameters('max_results_reached', LIMIT)}\n    </footer>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport default function NoWorkersSupportPopup() {\n  return (\n    <>\n      <p className=\"spacer-bottom\">\n        <strong>{translate('background_tasks.add_more_workers')}</strong>\n      </p>\n      <p className=\"big-spacer-bottom markdown\">\n        {translate('background_tasks.add_more_workers.text')}\n      </p>\n      <p>\n        <a\n          href=\"https://redirect.sonarsource.com/editions/enterprise.html\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\">\n          {translate('learn_more')}\n        </a>\n      </p>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { setWorkerCount } from '../../../api/ce';\n\nconst MAX_WORKERS = 10;\n\ninterface Props {\n  onClose: (newWorkerCount?: number) => void;\n  workerCount: number;\n}\n\ninterface State {\n  newWorkerCount: number;\n  submitting: boolean;\n}\n\nexport default class WorkersForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      newWorkerCount: props.workerCount,\n      submitting: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleClose = () => {\n    this.props.onClose();\n  };\n\n  handleWorkerCountChange = (option: { value: number }) =>\n    this.setState({ newWorkerCount: option.value });\n\n  handleSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.setState({ submitting: true });\n    const { newWorkerCount } = this.state;\n    setWorkerCount(newWorkerCount).then(\n      () => {\n        if (this.mounted) {\n          this.props.onClose(newWorkerCount);\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ submitting: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const options = [];\n    for (let i = 1; i <= MAX_WORKERS; i++) {\n      options.push({ label: String(i), value: i });\n    }\n\n    return (\n      <Modal\n        contentLabel={translate('background_tasks.change_number_of_workers')}\n        onRequestClose={this.handleClose}>\n        <header className=\"modal-head\">\n          <h2>{translate('background_tasks.change_number_of_workers')}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <Select\n              className=\"input-tiny spacer-top\"\n              clearable={false}\n              onChange={this.handleWorkerCountChange}\n              options={options}\n              searchable={false}\n              value={this.state.newWorkerCount}\n            />\n            <Alert className=\"big-spacer-top\" variant=\"info\">\n              {translate('background_tasks.change_number_of_workers.hint')}\n            </Alert>\n          </div>\n          <footer className=\"modal-foot\">\n            <div>\n              {this.state.submitting && <i className=\"spinner spacer-right\" />}\n              <SubmitButton disabled={this.state.submitting}>{translate('save')}</SubmitButton>\n              <ResetButtonLink onClick={this.handleClose}>{translate('cancel')}</ResetButtonLink>\n            </div>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { EditButton } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport AlertWarnIcon from 'sonar-ui-common/components/icons/AlertWarnIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getWorkers } from '../../../api/ce';\nimport NoWorkersSupportPopup from './NoWorkersSupportPopup';\nimport WorkersForm from './WorkersForm';\n\ninterface State {\n  canSetWorkerCount: boolean;\n  formOpen: boolean;\n  loading: boolean;\n  noSupportPopup: boolean;\n  workerCount: number;\n}\n\nexport default class Workers extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    canSetWorkerCount: false,\n    formOpen: false,\n    loading: true,\n    noSupportPopup: false,\n    workerCount: 1\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadWorkers();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadWorkers = () => {\n    this.setState({ loading: true });\n    getWorkers().then(\n      ({ canSetWorkerCount, value }) => {\n        if (this.mounted) {\n          this.setState({\n            canSetWorkerCount,\n            loading: false,\n            workerCount: value\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  closeForm = (newWorkerCount?: number) =>\n    newWorkerCount\n      ? this.setState({ formOpen: false, workerCount: newWorkerCount })\n      : this.setState({ formOpen: false });\n\n  handleChangeClick = () => {\n    this.setState({ formOpen: true });\n  };\n\n  handleHelpClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.toggleNoSupportPopup();\n  };\n\n  toggleNoSupportPopup = (show?: boolean) => {\n    if (show !== undefined) {\n      this.setState({ noSupportPopup: show });\n    } else {\n      this.setState(state => ({ noSupportPopup: !state.noSupportPopup }));\n    }\n  };\n\n  render() {\n    const { canSetWorkerCount, formOpen, loading, workerCount } = this.state;\n\n    return (\n      <div className=\"display-flex-center\">\n        {!loading && workerCount > 1 && (\n          <Tooltip overlay={translate('background_tasks.number_of_workers.warning')}>\n            <span className=\"display-inline-flex-center little-spacer-right\">\n              <AlertWarnIcon fill=\"#d3d3d3\" />\n            </span>\n          </Tooltip>\n        )}\n\n        <span className=\"text-middle\">\n          {translate('background_tasks.number_of_workers')}\n\n          {loading ? (\n            <i className=\"spinner little-spacer-left\" />\n          ) : (\n            <strong className=\"little-spacer-left\">{workerCount}</strong>\n          )}\n        </span>\n\n        {!loading && canSetWorkerCount && (\n          <Tooltip overlay={translate('background_tasks.change_number_of_workers')}>\n            <EditButton\n              className=\"js-edit button-small spacer-left\"\n              onClick={this.handleChangeClick}\n            />\n          </Tooltip>\n        )}\n\n        {!loading && !canSetWorkerCount && (\n          <HelpTooltip className=\"spacer-left\" overlay={<NoWorkersSupportPopup />} />\n        )}\n\n        {formOpen && <WorkersForm onClose={this.closeForm} workerCount={this.state.workerCount} />}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Workers from './Workers';\n\ninterface Props {\n  component?: any;\n}\n\nexport default function Header(props: Props) {\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('background_tasks.page')}</h1>\n      {!props.component && (\n        <div className=\"page-actions\">\n          <Workers />\n        </div>\n      )}\n      <p className=\"page-description\">\n        {translate('background_tasks.page.description')}\n        <Link\n          className=\"spacer-left\"\n          target=\"_blank\"\n          to={{ pathname: '/documentation/analysis/background-tasks/' }}>\n          {translate('learn_more')}\n        </Link>\n      </p>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { CURRENTS } from '../constants';\n\ninterface Props {\n  value?: string;\n  onChange: (value: string) => void;\n}\n\nexport default class CurrentsFilter extends React.PureComponent<Props> {\n  handleChange = (value: boolean) => {\n    const newValue = value ? CURRENTS.ONLY_CURRENTS : CURRENTS.ALL;\n    this.props.onChange(newValue);\n  };\n\n  render() {\n    const checked = this.props.value === CURRENTS.ONLY_CURRENTS;\n    return (\n      <div className=\"bt-search-form-field\">\n        <Checkbox checked={checked} onCheck={this.handleChange}>\n          <span className=\"little-spacer-left\">{translate('yes')}</span>\n        </Checkbox>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DageRangeInput from '../../../components/controls/DateRangeInput';\n\ninterface Props {\n  maxExecutedAt: Date | undefined;\n  minSubmittedAt: Date | undefined;\n  onChange: (x: { maxExecutedAt?: Date; minSubmittedAt?: Date }) => void;\n}\n\nexport default class DateFilter extends React.PureComponent<Props> {\n  handleDateRangeChange = ({ from, to }: { from?: Date; to?: Date }) => {\n    this.props.onChange({ minSubmittedAt: from, maxExecutedAt: to });\n  };\n\n  render() {\n    const dateRange = { from: this.props.minSubmittedAt, to: this.props.maxExecutedAt };\n    return (\n      <div className=\"nowrap\">\n        <DageRangeInput onChange={this.handleDateRangeChange} value={dateRange} />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { STATUSES } from '../constants';\n\ninterface Props {\n  value?: string;\n  onChange: (value?: string) => void;\n}\n\nexport default class StatusFilter extends React.PureComponent<Props> {\n  handleChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const options = [\n      { value: STATUSES.ALL, label: translate('background_task.status.ALL') },\n      {\n        value: STATUSES.ALL_EXCEPT_PENDING,\n        label: translate('background_task.status.ALL_EXCEPT_PENDING')\n      },\n      { value: STATUSES.PENDING, label: translate('background_task.status.PENDING') },\n      { value: STATUSES.IN_PROGRESS, label: translate('background_task.status.IN_PROGRESS') },\n      { value: STATUSES.SUCCESS, label: translate('background_task.status.SUCCESS') },\n      { value: STATUSES.FAILED, label: translate('background_task.status.FAILED') },\n      { value: STATUSES.CANCELED, label: translate('background_task.status.CANCELED') }\n    ];\n\n    return (\n      <Select\n        className=\"input-medium\"\n        clearable={false}\n        onChange={this.handleChange}\n        options={options}\n        searchable={false}\n        value={this.props.value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALL_TYPES } from '../constants';\n\ninterface Props {\n  value: string;\n  onChange: Function;\n  types: string[];\n}\n\nexport default class TypesFilter extends React.PureComponent<Props> {\n  handleChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const { value, types } = this.props;\n    const options = types.map(t => {\n      return {\n        value: t,\n        label: translate('background_task.type', t)\n      };\n    });\n\n    const allOptions = [\n      { value: ALL_TYPES, label: translate('background_task.type.ALL') },\n      ...options\n    ];\n\n    return (\n      <Select\n        className=\"input-medium\"\n        clearable={false}\n        onChange={this.handleChange}\n        options={allOptions}\n        searchable={false}\n        value={value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { DEFAULT_FILTERS } from '../constants';\nimport { Query } from '../utils';\nimport CurrentsFilter from './CurrentsFilter';\nimport DateFilter from './DateFilter';\nimport StatusFilter from './StatusFilter';\nimport TypesFilter from './TypesFilter';\n\ninterface Props {\n  component?: unknown;\n  currents: string;\n  loading: boolean;\n  onFilterUpdate: (changes: Partial<Query>) => void;\n  onReload: () => void;\n  query: string;\n  status: string;\n  taskType: string;\n  maxExecutedAt: Date | undefined;\n  minSubmittedAt: Date | undefined;\n  types: string[];\n}\n\nexport default class Search extends React.PureComponent<Props> {\n  handleStatusChange = (status: string) => {\n    this.props.onFilterUpdate({ status });\n  };\n\n  handleTypeChange = (taskType: string) => {\n    this.props.onFilterUpdate({ taskType });\n  };\n\n  handleCurrentsChange = (currents: string) => {\n    this.props.onFilterUpdate({ currents });\n  };\n\n  handleDateChange = (date: { maxExecutedAt?: Date; minSubmittedAt?: Date }) => {\n    this.props.onFilterUpdate(date);\n  };\n\n  handleQueryChange = (query: string) => {\n    this.props.onFilterUpdate({ query });\n  };\n\n  handleReset = () => {\n    this.props.onFilterUpdate(DEFAULT_FILTERS);\n  };\n\n  renderSearchBox() {\n    const { component, query } = this.props;\n\n    if (component) {\n      // do not render search form on the project-level page\n      return null;\n    }\n\n    return (\n      <li className=\"bt-search-form-large\">\n        <SearchBox\n          onChange={this.handleQueryChange}\n          placeholder={translate('background_tasks.search_by_task_or_component')}\n          value={query}\n        />\n      </li>\n    );\n  }\n\n  render() {\n    const {\n      loading,\n      component,\n      types,\n      status,\n      taskType,\n      currents,\n      minSubmittedAt,\n      maxExecutedAt\n    } = this.props;\n\n    return (\n      <section className=\"big-spacer-top big-spacer-bottom\">\n        <ul className=\"bt-search-form\">\n          <li>\n            <h6 className=\"bt-search-form-label\">{translate('status')}</h6>\n            <StatusFilter onChange={this.handleStatusChange} value={status} />\n          </li>\n          {types.length > 1 && (\n            <li>\n              <h6 className=\"bt-search-form-label\">{translate('type')}</h6>\n              <TypesFilter onChange={this.handleTypeChange} types={types} value={taskType} />\n            </li>\n          )}\n          {!component && (\n            <li>\n              <h6 className=\"bt-search-form-label\">\n                {translate('background_tasks.currents_filter.ONLY_CURRENTS')}\n              </h6>\n              <CurrentsFilter onChange={this.handleCurrentsChange} value={currents} />\n            </li>\n          )}\n          <li>\n            <h6 className=\"bt-search-form-label\">{translate('date')}</h6>\n            <DateFilter\n              maxExecutedAt={maxExecutedAt}\n              minSubmittedAt={minSubmittedAt}\n              onChange={this.handleDateChange}\n            />\n          </li>\n\n          {this.renderSearchBox()}\n\n          <li className=\"nowrap\">\n            <Button className=\"js-reload\" disabled={loading} onClick={this.props.onReload}>\n              {translate('reload')}\n            </Button>{' '}\n            <Button disabled={loading} onClick={this.handleReset}>\n              {translate('reset_verb')}\n            </Button>\n          </li>\n        </ul>\n      </section>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport ConfirmButton from 'sonar-ui-common/components/controls/ConfirmButton';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\nimport { getAppState, Store } from '../../../store/rootReducer';\n\nexport interface Props {\n  isSystemAdmin?: boolean;\n  onCancelAllPending: () => void;\n  pendingCount?: number;\n}\n\nexport function StatPendingCount({ isSystemAdmin, onCancelAllPending, pendingCount }: Props) {\n  if (pendingCount === undefined) {\n    return null;\n  }\n\n  return (\n    <span>\n      <span className=\"emphasised-measure\">{pendingCount}</span>\n      <span className=\"little-spacer-left display-inline-flex-center\">\n        {translate('background_tasks.pending')}\n        {isSystemAdmin && pendingCount > 0 && (\n          <ConfirmButton\n            cancelButtonText={translate('close')}\n            confirmButtonText={translate('background_tasks.cancel_all_tasks.submit')}\n            isDestructive={true}\n            modalBody={translate('background_tasks.cancel_all_tasks.text')}\n            modalHeader={translate('background_tasks.cancel_all_tasks')}\n            onConfirm={onCancelAllPending}>\n            {({ onClick }) => (\n              <Tooltip overlay={translate('background_tasks.cancel_all_tasks')}>\n                <ClearButton className=\"little-spacer-left\" color={colors.red} onClick={onClick} />\n              </Tooltip>\n            )}\n          </ConfirmButton>\n        )}\n      </span>\n    </span>\n  );\n}\n\nconst mapStateToProps = (state: Store) => ({\n  isSystemAdmin: getAppState(state).canAdmin\n});\n\nexport default connect(mapStateToProps)(StatPendingCount);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\n\n// Do not display the pending time for values smaller than this threshold (in ms)\nconst MIN_PENDING_TIME_THRESHOLD = 1000;\n\nexport interface Props {\n  className?: string;\n  component?: Pick<T.Component, 'key'>;\n  pendingCount?: number;\n  pendingTime?: number;\n}\n\nexport default function StatPendingTime({ className, pendingCount, pendingTime }: Props) {\n  if (!pendingTime || !pendingCount || pendingTime < MIN_PENDING_TIME_THRESHOLD) {\n    return null;\n  }\n  return (\n    <span className={className}>\n      <span className=\"emphasised-measure\">{formatMeasure(pendingTime, 'MILLISEC')}</span>\n      <span className=\"little-spacer-left\">{translate('background_tasks.pending_time')}</span>\n      <HelpTooltip\n        className=\"little-spacer-left\"\n        overlay={translate('background_tasks.pending_time.description')}\n      />\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  className?: string;\n  failingCount?: number;\n  onShowFailing: () => void;\n}\n\nexport default function StatStillFailing({ className, failingCount, onShowFailing }: Props) {\n  if (failingCount === undefined) {\n    return null;\n  }\n\n  return (\n    <span className={className}>\n      {failingCount > 0 ? (\n        <ButtonLink className=\"emphasised-measure text-baseline\" onClick={onShowFailing}>\n          {failingCount}\n        </ButtonLink>\n      ) : (\n        <span className=\"emphasised-measure\">{failingCount}</span>\n      )}\n      <span className=\"little-spacer-left\">{translate('background_tasks.failures')}</span>\n      <HelpTooltip\n        className=\"little-spacer-left\"\n        overlay={translate('background_tasks.failing_count')}\n      />\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport StatPendingCount from './StatPendingCount';\nimport StatPendingTime from './StatPendingTime';\nimport StatStillFailing from './StatStillFailing';\n\nexport interface Props {\n  component?: Pick<T.Component, 'key'>;\n  failingCount?: number;\n  onCancelAllPending: () => void;\n  onShowFailing: () => void;\n  pendingCount?: number;\n  pendingTime?: number;\n}\n\nexport default function Stats({ component, pendingCount, pendingTime, ...props }: Props) {\n  return (\n    <section className=\"big-spacer-top big-spacer-bottom\">\n      <StatPendingCount onCancelAllPending={props.onCancelAllPending} pendingCount={pendingCount} />\n      {!component && (\n        <StatPendingTime\n          className=\"huge-spacer-left\"\n          pendingCount={pendingCount}\n          pendingTime={pendingTime}\n        />\n      )}\n      {!component && (\n        <StatStillFailing\n          className=\"huge-spacer-left\"\n          failingCount={props.failingCount}\n          onShowFailing={props.onShowFailing}\n        />\n      )}\n    </section>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getTask } from '../../../api/ce';\n\ninterface Props {\n  onClose: () => void;\n  task: Pick<T.Task, 'componentName' | 'id' | 'type'>;\n}\n\ninterface State {\n  scannerContext?: string;\n}\n\nexport default class ScannerContext extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadScannerContext();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadScannerContext() {\n    getTask(this.props.task.id, ['scannerContext']).then(task => {\n      if (this.mounted) {\n        this.setState({ scannerContext: task.scannerContext });\n      }\n    });\n  }\n\n  handleCloseClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.props.onClose();\n  };\n\n  render() {\n    const { task } = this.props;\n    const { scannerContext } = this.state;\n\n    return (\n      <Modal contentLabel=\"scanner context\" onRequestClose={this.props.onClose} size=\"large\">\n        <div className=\"modal-head\">\n          <h2>\n            {translate('background_tasks.scanner_context')}\n            {': '}\n            {task.componentName}\n            {' ['}\n            {translate('background_task.type', task.type)}\n            {']'}\n          </h2>\n        </div>\n\n        <div className=\"modal-body modal-container\">\n          {scannerContext != null ? (\n            <pre className=\"js-task-scanner-context\">{scannerContext}</pre>\n          ) : (\n            <i className=\"spinner\" />\n          )}\n        </div>\n\n        <div className=\"modal-foot\">\n          <a className=\"js-modal-close\" href=\"#\" onClick={this.handleCloseClick}>\n            {translate('close')}\n          </a>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getTask } from '../../../api/ce';\n\ninterface Props {\n  onClose: () => void;\n  task: Pick<T.Task, 'componentName' | 'errorMessage' | 'id' | 'type'>;\n}\n\ninterface State {\n  loading: boolean;\n  stacktrace?: string;\n}\n\nexport default class Stacktrace extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadStacktrace();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadStacktrace() {\n    getTask(this.props.task.id, ['stacktrace']).then(\n      task => {\n        if (this.mounted) {\n          this.setState({ loading: false, stacktrace: task.errorStacktrace });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleCloseClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.props.onClose();\n  };\n\n  render() {\n    const { task } = this.props;\n    const { loading, stacktrace } = this.state;\n\n    return (\n      <Modal contentLabel=\"stacktrace\" onRequestClose={this.props.onClose} size=\"large\">\n        <div className=\"modal-head\">\n          <h2>\n            {translate('background_tasks.error_stacktrace')}\n            {': '}\n            {task.componentName}\n            {' ['}\n            {translate('background_task.type', task.type)}\n            {']'}\n          </h2>\n        </div>\n\n        <div className=\"modal-body modal-container\">\n          {loading ? (\n            <i className=\"spinner\" />\n          ) : stacktrace ? (\n            <div>\n              <h4 className=\"spacer-bottom\">{translate('background_tasks.error_stacktrace')}</h4>\n              <pre className=\"js-task-stacktrace\">{stacktrace}</pre>\n            </div>\n          ) : (\n            <div>\n              <h4 className=\"spacer-bottom\">{translate('background_tasks.error_message')}</h4>\n              <pre className=\"js-task-error-message\">{task.errorMessage}</pre>\n            </div>\n          )}\n        </div>\n\n        <div className=\"modal-foot\">\n          <a className=\"js-modal-close\" href=\"#\" onClick={this.handleCloseClick}>\n            {translate('close')}\n          </a>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { lazyLoad } from 'sonar-ui-common/components/lazyLoad';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { STATUSES } from '../constants';\nimport ScannerContext from './ScannerContext';\nimport Stacktrace from './Stacktrace';\n\nconst AnalysisWarningsModal = lazyLoad(\n  () => import('../../../components/common/AnalysisWarningsModal'),\n  'AnalysisWarningsModal'\n);\n\ninterface Props {\n  component?: unknown;\n  onCancelTask: (task: T.Task) => Promise<void>;\n  onFilterTask: (task: T.Task) => void;\n  task: T.Task;\n}\n\ninterface State {\n  cancelTaskOpen: boolean;\n  scannerContextOpen: boolean;\n  stacktraceOpen: boolean;\n  warningsOpen: boolean;\n}\n\nexport default class TaskActions extends React.PureComponent<Props, State> {\n  state: State = {\n    cancelTaskOpen: false,\n    scannerContextOpen: false,\n    stacktraceOpen: false,\n    warningsOpen: false\n  };\n\n  handleFilterClick = () => {\n    this.props.onFilterTask(this.props.task);\n  };\n\n  handleCancelTask = () => {\n    return this.props.onCancelTask(this.props.task);\n  };\n\n  handleCancelClick = () => {\n    this.setState({ cancelTaskOpen: true });\n  };\n\n  handleShowScannerContextClick = () => {\n    this.setState({ scannerContextOpen: true });\n  };\n\n  closeCancelTask = () => {\n    this.setState({ cancelTaskOpen: false });\n  };\n\n  closeScannerContext = () => {\n    this.setState({ scannerContextOpen: false });\n  };\n\n  handleShowStacktraceClick = () => {\n    this.setState({ stacktraceOpen: true });\n  };\n\n  closeStacktrace = () => {\n    this.setState({ stacktraceOpen: false });\n  };\n\n  handleShowWarningsClick = () => {\n    this.setState({ warningsOpen: true });\n  };\n\n  closeWarnings = () => {\n    this.setState({ warningsOpen: false });\n  };\n\n  render() {\n    const { component, task } = this.props;\n\n    const canFilter = component === undefined;\n    const canCancel = task.status === STATUSES.PENDING;\n    const canShowStacktrace = task.errorMessage !== undefined;\n    const canShowWarnings = task.warningCount !== undefined && task.warningCount > 0;\n    const hasActions =\n      canFilter || canCancel || task.hasScannerContext || canShowStacktrace || canShowWarnings;\n\n    if (!hasActions) {\n      return <td>&nbsp;</td>;\n    }\n\n    return (\n      <td className=\"thin nowrap\">\n        <ActionsDropdown className=\"js-task-action\">\n          {canFilter && task.componentName && (\n            <ActionsDropdownItem className=\"js-task-filter\" onClick={this.handleFilterClick}>\n              {translateWithParameters(\n                'background_tasks.filter_by_component_x',\n                task.componentName\n              )}\n            </ActionsDropdownItem>\n          )}\n          {canCancel && (\n            <ActionsDropdownItem\n              className=\"js-task-cancel\"\n              destructive={true}\n              onClick={this.handleCancelClick}>\n              {translate('background_tasks.cancel_task')}\n            </ActionsDropdownItem>\n          )}\n          {task.hasScannerContext && (\n            <ActionsDropdownItem\n              className=\"js-task-show-scanner-context\"\n              onClick={this.handleShowScannerContextClick}>\n              {translate('background_tasks.show_scanner_context')}\n            </ActionsDropdownItem>\n          )}\n          {canShowStacktrace && (\n            <ActionsDropdownItem\n              className=\"js-task-show-stacktrace\"\n              onClick={this.handleShowStacktraceClick}>\n              {translate('background_tasks.show_stacktrace')}\n            </ActionsDropdownItem>\n          )}\n          {canShowWarnings && (\n            <ActionsDropdownItem\n              className=\"js-task-show-warnings\"\n              onClick={this.handleShowWarningsClick}>\n              {translate('background_tasks.show_warnings')}\n            </ActionsDropdownItem>\n          )}\n        </ActionsDropdown>\n\n        {this.state.cancelTaskOpen && (\n          <ConfirmModal\n            cancelButtonText={translate('close')}\n            confirmButtonText={translate('background_tasks.cancel_task')}\n            header={translate('background_tasks.cancel_task')}\n            isDestructive={true}\n            onClose={this.closeCancelTask}\n            onConfirm={this.handleCancelTask}>\n            {translate('background_tasks.cancel_task.text')}\n          </ConfirmModal>\n        )}\n\n        {this.state.scannerContextOpen && (\n          <ScannerContext onClose={this.closeScannerContext} task={task} />\n        )}\n\n        {this.state.stacktraceOpen && <Stacktrace onClose={this.closeStacktrace} task={task} />}\n\n        {this.state.warningsOpen && (\n          <AnalysisWarningsModal onClose={this.closeWarnings} taskId={task.id} />\n        )}\n      </td>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  type: string;\n}\n\nexport default function TaskType({ type }: Props) {\n  return (\n    <span className=\"display-inline-block note\">\n      {'['}\n      {translate('background_task.type', type)}\n      {']'}\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport LongLivingBranchIcon from 'sonar-ui-common/components/icons/LongLivingBranchIcon';\nimport PullRequestIcon from 'sonar-ui-common/components/icons/PullRequestIcon';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport ShortLivingBranchIcon from 'sonar-ui-common/components/icons/ShortLivingBranchIcon';\nimport Organization from '../../../components/shared/Organization';\nimport {\n  getLongLivingBranchUrl,\n  getProjectUrl,\n  getPullRequestUrl,\n  getShortLivingBranchUrl\n} from '../../../helpers/urls';\nimport TaskType from './TaskType';\n\ninterface Props {\n  task: T.Task;\n}\n\nexport default function TaskComponent({ task }: Props) {\n  if (!task.componentKey) {\n    return (\n      <td>\n        <span className=\"note\">{task.id}</span>\n        <TaskType type={task.type} />\n      </td>\n    );\n  }\n\n  return (\n    <td>\n      {task.branchType === 'SHORT' && <ShortLivingBranchIcon className=\"little-spacer-right\" />}\n      {task.branchType === 'LONG' && <LongLivingBranchIcon className=\"little-spacer-right\" />}\n      {task.pullRequest !== undefined && <PullRequestIcon className=\"little-spacer-right\" />}\n\n      {!task.branchType && !task.pullRequest && task.componentQualifier && (\n        <span className=\"little-spacer-right\">\n          <QualifierIcon qualifier={task.componentQualifier} />\n        </span>\n      )}\n\n      {task.organization && <Organization organizationKey={task.organization} />}\n\n      {task.componentName && (\n        <Link className=\"spacer-right\" to={getTaskComponentUrl(task.componentKey, task)}>\n          {task.componentName}\n\n          {task.branch && (\n            <span className=\"text-limited text-text-top\" title={task.branch}>\n              <span style={{ marginLeft: 5, marginRight: 5 }}>/</span>\n              {task.branch}\n            </span>\n          )}\n\n          {task.pullRequest && (\n            <span className=\"text-limited text-text-top\" title={task.pullRequestTitle}>\n              <span style={{ marginLeft: 5, marginRight: 5 }}>/</span>\n              {task.pullRequest}\n            </span>\n          )}\n        </Link>\n      )}\n\n      <TaskType type={task.type} />\n    </td>\n  );\n}\n\nfunction getTaskComponentUrl(componentKey: string, task: T.Task) {\n  if (task.branch) {\n    if (task.branchType === 'SHORT') {\n      return getShortLivingBranchUrl(componentKey, task.branch);\n    } else if (task.branchType === 'LONG') {\n      return getLongLivingBranchUrl(componentKey, task.branch);\n    }\n  } else if (task.pullRequest) {\n    return getPullRequestUrl(componentKey, task.pullRequest);\n  }\n  return getProjectUrl(componentKey);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as differenceInDays from 'date-fns/difference_in_days';\nimport * as React from 'react';\nimport { isValidDate, parseDate } from 'sonar-ui-common/helpers/dates';\nimport TimeFormatter from '../../../components/intl/TimeFormatter';\n\ninterface Props {\n  date?: string;\n  baseDate?: string;\n}\n\nexport default function TaskDate({ date, baseDate }: Props) {\n  const parsedDate = date && parseDate(date);\n  const parsedBaseDate = baseDate && parseDate(baseDate);\n  const diff =\n    parsedDate && parsedBaseDate && isValidDate(parsedDate) && isValidDate(parsedBaseDate)\n      ? differenceInDays(parsedDate, parsedBaseDate)\n      : 0;\n\n  return (\n    <td className=\"thin nowrap text-right\">\n      {diff > 0 && <span className=\"text-warning little-spacer-right\">{`(+${diff}d)`}</span>}\n\n      {parsedDate && isValidDate(parsedDate) ? <TimeFormatter date={parsedDate} long={true} /> : ''}\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as isSameDay from 'date-fns/is_same_day';\nimport * as React from 'react';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\nimport DateFormatter from '../../../components/intl/DateFormatter';\n\ninterface Props {\n  submittedAt: string;\n  prevSubmittedAt?: string;\n}\n\nexport default function TaskDay({ submittedAt, prevSubmittedAt }: Props) {\n  const shouldDisplay =\n    !prevSubmittedAt || !isSameDay(parseDate(submittedAt), parseDate(prevSubmittedAt));\n\n  return (\n    <td className=\"thin nowrap text-right small\">\n      {shouldDisplay ? <DateFormatter date={submittedAt} long={true} /> : ''}\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { formatDuration } from '../utils';\n\ninterface Props {\n  ms?: number;\n}\n\nexport default function TaskExecutionTime({ ms }: Props) {\n  return <td className=\"thin nowrap text-right\">{ms && formatDuration(ms)}</td>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface Props {\n  id: string;\n}\n\nexport default function TaskId({ id }: Props) {\n  return (\n    <td className=\"thin nowrap\">\n      <div className=\"note\">{id}</div>\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport PendingIcon from 'sonar-ui-common/components/icons/PendingIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { STATUSES } from '../constants';\n\ninterface Props {\n  status: string;\n}\n\nexport default function TaskStatus({ status }: Props) {\n  let inner;\n\n  switch (status) {\n    case STATUSES.PENDING:\n      inner = <PendingIcon />;\n      break;\n    case STATUSES.IN_PROGRESS:\n      inner = <i className=\"spinner\" />;\n      break;\n    case STATUSES.SUCCESS:\n      inner = (\n        <span className=\"badge badge-success\">{translate('background_task.status.SUCCESS')}</span>\n      );\n      break;\n    case STATUSES.FAILED:\n      inner = (\n        <span className=\"badge badge-error\">{translate('background_task.status.FAILED')}</span>\n      );\n      break;\n    case STATUSES.CANCELED:\n      inner = <span className=\"badge\">{translate('background_task.status.CANCELED')}</span>;\n      break;\n    default:\n      inner = '';\n  }\n\n  return <td className=\"thin spacer-right\">{inner}</td>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  submitter?: string;\n}\n\nexport default function TaskSubmitter({ submitter }: Props) {\n  return (\n    <td className=\"thin note\">\n      <span className=\"text-limited-small text-bottom\">{submitter || translate('anonymous')}</span>\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport TaskActions from './TaskActions';\nimport TaskComponent from './TaskComponent';\nimport TaskDate from './TaskDate';\nimport TaskDay from './TaskDay';\nimport TaskExecutionTime from './TaskExecutionTime';\nimport TaskId from './TaskId';\nimport TaskStatus from './TaskStatus';\nimport TaskSubmitter from './TaskSubmitter';\n\ninterface Props {\n  component?: unknown;\n  onCancelTask: (task: T.Task) => Promise<void>;\n  onFilterTask: (task: T.Task) => void;\n  task: T.Task;\n  previousTask?: T.Task;\n}\n\nexport default function Task(props: Props) {\n  const { task, component, onCancelTask, onFilterTask, previousTask } = props;\n\n  return (\n    <tr>\n      <TaskStatus status={task.status} />\n      <TaskComponent task={task} />\n      <TaskId id={task.id} />\n      <TaskSubmitter submitter={task.submitterLogin} />\n      <TaskDay\n        prevSubmittedAt={previousTask && previousTask.submittedAt}\n        submittedAt={task.submittedAt}\n      />\n      <TaskDate date={task.submittedAt} />\n      <TaskDate baseDate={task.submittedAt} date={task.startedAt} />\n      <TaskDate baseDate={task.submittedAt} date={task.executedAt} />\n      <TaskExecutionTime ms={task.executionTimeMs} />\n      <TaskActions\n        component={component}\n        onCancelTask={onCancelTask}\n        onFilterTask={onFilterTask}\n        task={task}\n      />\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Task from './Task';\n\ninterface Props {\n  tasks: T.Task[];\n  component?: unknown;\n  loading: boolean;\n  onCancelTask: (task: T.Task) => Promise<void>;\n  onFilterTask: (task: T.Task) => void;\n}\n\nexport default function Tasks({ tasks, component, loading, onCancelTask, onFilterTask }: Props) {\n  const className = classNames('data zebra zebra-hover background-tasks', {\n    'new-loading': loading\n  });\n\n  return (\n    <div className=\"boxed-group boxed-group-inner\">\n      <table className={className}>\n        <thead>\n          <tr>\n            <th>{translate('background_tasks.table.status')}</th>\n            <th>{translate('background_tasks.table.task')}</th>\n            <th>{translate('background_tasks.table.id')}</th>\n            <th>{translate('background_tasks.table.submitter')}</th>\n            <th>&nbsp;</th>\n            <th className=\"text-right\">{translate('background_tasks.table.submitted')}</th>\n            <th className=\"text-right\">{translate('background_tasks.table.started')}</th>\n            <th className=\"text-right\">{translate('background_tasks.table.finished')}</th>\n            <th className=\"text-right\">{translate('background_tasks.table.duration')}</th>\n            <th>&nbsp;</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tasks.map((task, index, tasks) => (\n            <Task\n              component={component}\n              key={task.id}\n              onCancelTask={onCancelTask}\n              onFilterTask={onFilterTask}\n              previousTask={index > 0 ? tasks[index - 1] : undefined}\n              task={task}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce, uniq } from 'lodash';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { toShortNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { parseAsDate } from 'sonar-ui-common/helpers/query';\nimport {\n  cancelAllTasks,\n  cancelTask as cancelTaskAPI,\n  getActivity,\n  getStatus,\n  getTypes\n} from '../../../api/ce';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { Location, Router } from '../../../components/hoc/withRouter';\nimport { fetchOrganizations } from '../../../store/rootActions';\nimport '../background-tasks.css';\nimport { CURRENTS, DEBOUNCE_DELAY, DEFAULT_FILTERS, STATUSES } from '../constants';\nimport { mapFiltersToParameters, Query, updateTask } from '../utils';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Search from './Search';\nimport Stats from './Stats';\nimport Tasks from './Tasks';\n\ninterface Props {\n  component?: Pick<T.Component, 'key'> & { id: string }; // id should be removed when api/ce/activity accept a component key instead of an id\n  fetchOrganizations: (keys: string[]) => void;\n  location: Location;\n  router: Pick<Router, 'push'>;\n}\n\ninterface State {\n  failingCount: number;\n  loading: boolean;\n  pendingCount: number;\n  pendingTime?: number;\n  tasks: T.Task[];\n  types?: string[];\n}\n\nexport class BackgroundTasksApp extends React.PureComponent<Props, State> {\n  loadTasksDebounced: () => void;\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { failingCount: 0, loading: true, pendingCount: 0, tasks: [] };\n    this.loadTasksDebounced = debounce(this.loadTasks, DEBOUNCE_DELAY);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    getTypes().then(\n      types => {\n        this.setState({ types });\n        this.loadTasks();\n      },\n      () => {}\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.component !== this.props.component ||\n      prevProps.location !== this.props.location\n    ) {\n      this.loadTasksDebounced();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  loadTasks = () => {\n    this.setState({ loading: true });\n\n    const status = this.props.location.query.status || DEFAULT_FILTERS.status;\n    const taskType = this.props.location.query.taskType || DEFAULT_FILTERS.taskType;\n    const currents = this.props.location.query.currents || DEFAULT_FILTERS.currents;\n    const minSubmittedAt =\n      this.props.location.query.minSubmittedAt || DEFAULT_FILTERS.minSubmittedAt;\n    const maxExecutedAt = this.props.location.query.maxExecutedAt || DEFAULT_FILTERS.maxExecutedAt;\n    const query = this.props.location.query.query || DEFAULT_FILTERS.query;\n\n    const filters = { status, taskType, currents, minSubmittedAt, maxExecutedAt, query };\n    const parameters = mapFiltersToParameters(filters);\n\n    if (this.props.component) {\n      parameters.componentId = this.props.component.id;\n    }\n\n    Promise.all([getActivity(parameters), getStatus(parameters.componentId)]).then(\n      ([{ tasks }, status]) => {\n        if (this.mounted) {\n          const organizations = uniq(tasks.map(task => task.organization).filter(o => o));\n          this.props.fetchOrganizations(organizations);\n\n          this.setState({\n            failingCount: status.failing,\n            loading: false,\n            pendingCount: status.pending,\n            pendingTime: status.pendingTime,\n            tasks\n          });\n        }\n      },\n      this.stopLoading\n    );\n  };\n\n  handleFilterUpdate = (nextState: Partial<Query>) => {\n    const nextQuery = { ...this.props.location.query, ...nextState };\n\n    // remove defaults\n    Object.keys(DEFAULT_FILTERS).forEach((key: keyof typeof DEFAULT_FILTERS) => {\n      if (nextQuery[key] === DEFAULT_FILTERS[key]) {\n        delete nextQuery[key];\n      }\n    });\n\n    if (nextQuery.minSubmittedAt) {\n      nextQuery.minSubmittedAt = toShortNotSoISOString(nextQuery.minSubmittedAt);\n    }\n\n    if (nextQuery.maxExecutedAt) {\n      nextQuery.maxExecutedAt = toShortNotSoISOString(nextQuery.maxExecutedAt);\n    }\n\n    this.props.router.push({\n      pathname: this.props.location.pathname,\n      query: nextQuery\n    });\n  };\n\n  handleCancelTask = (task: T.Task) => {\n    this.setState({ loading: true });\n\n    return cancelTaskAPI(task.id).then(nextTask => {\n      if (this.mounted) {\n        this.setState(state => ({\n          tasks: updateTask(state.tasks, nextTask),\n          loading: false\n        }));\n      }\n    }, this.stopLoading);\n  };\n\n  handleFilterTask = (task: T.Task) => {\n    this.handleFilterUpdate({ query: task.componentKey });\n  };\n\n  handleShowFailing = () => {\n    this.handleFilterUpdate({\n      ...DEFAULT_FILTERS,\n      status: STATUSES.FAILED,\n      currents: CURRENTS.ONLY_CURRENTS\n    });\n  };\n\n  handleCancelAllPending = () => {\n    this.setState({ loading: true });\n\n    cancelAllTasks().then(() => {\n      if (this.mounted) {\n        this.loadTasks();\n      }\n    }, this.stopLoading);\n  };\n\n  render() {\n    const { component } = this.props;\n    const { loading, types, tasks } = this.state;\n\n    if (!types) {\n      return (\n        <div className=\"page page-limited\">\n          <i className=\"spinner\" />\n        </div>\n      );\n    }\n\n    const status = this.props.location.query.status || DEFAULT_FILTERS.status;\n    const taskType = this.props.location.query.taskType || DEFAULT_FILTERS.taskType;\n    const currents = this.props.location.query.currents || DEFAULT_FILTERS.currents;\n    const minSubmittedAt = parseAsDate(this.props.location.query.minSubmittedAt);\n    const maxExecutedAt = parseAsDate(this.props.location.query.maxExecutedAt);\n    const query = this.props.location.query.query || '';\n\n    return (\n      <div className=\"page page-limited\">\n        <Suggestions suggestions=\"background_tasks\" />\n        <Helmet title={translate('background_tasks.page')} />\n        <Header component={component} />\n\n        <Stats\n          component={component}\n          failingCount={this.state.failingCount}\n          onCancelAllPending={this.handleCancelAllPending}\n          onShowFailing={this.handleShowFailing}\n          pendingCount={this.state.pendingCount}\n          pendingTime={this.state.pendingTime}\n        />\n\n        <Search\n          component={component}\n          currents={currents}\n          loading={loading}\n          maxExecutedAt={maxExecutedAt}\n          minSubmittedAt={minSubmittedAt}\n          onFilterUpdate={this.handleFilterUpdate}\n          onReload={this.loadTasksDebounced}\n          query={query}\n          status={status}\n          taskType={taskType}\n          types={types}\n        />\n\n        <Tasks\n          component={component}\n          loading={loading}\n          onCancelTask={this.handleCancelTask}\n          onFilterTask={this.handleFilterTask}\n          tasks={tasks}\n        />\n\n        <Footer tasks={tasks} />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchOrganizations };\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(BackgroundTasksApp);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { year: 'numeric', month: 'short', day: '2-digit' };\n\nexport const longFormatterOption = { year: 'numeric', month: 'long', day: 'numeric' };\n\nexport default function DateFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedDate>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Query } from './utils';\n\nexport const STATUSES = {\n  ALL: '__ALL__',\n  ALL_EXCEPT_PENDING: '__ALL_EXCEPT_PENDING__',\n  PENDING: 'PENDING',\n  IN_PROGRESS: 'IN_PROGRESS',\n  SUCCESS: 'SUCCESS',\n  FAILED: 'FAILED',\n  CANCELED: 'CANCELED'\n};\n\nexport const ALL_TYPES = 'ALL_TYPES';\n\nexport const CURRENTS = {\n  ALL: '__ALL__',\n  ONLY_CURRENTS: 'CURRENTS'\n};\n\nexport const DATE = {\n  ANY: 'ANY',\n  TODAY: 'TODAY',\n  CUSTOM: 'CUSTOM'\n};\n\nexport const DEFAULT_FILTERS: Query = {\n  status: STATUSES.ALL_EXCEPT_PENDING,\n  taskType: ALL_TYPES,\n  currents: CURRENTS.ALL,\n  minSubmittedAt: undefined,\n  maxExecutedAt: undefined,\n  query: ''\n};\n\nexport const DATE_FORMAT = 'YYYY-MM-DD';\n\nexport const DEBOUNCE_DELAY = 250;\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as addMonths from 'date-fns/add_months';\nimport * as setMonth from 'date-fns/set_month';\nimport * as setYear from 'date-fns/set_year';\nimport * as subMonths from 'date-fns/sub_months';\nimport { range } from 'lodash';\nimport * as React from 'react';\nimport { DayModifiers, Modifier, Modifiers } from 'react-day-picker';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport { ButtonIcon, ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport OutsideClickHandler from 'sonar-ui-common/components/controls/OutsideClickHandler';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport CalendarIcon from 'sonar-ui-common/components/icons/CalendarIcon';\nimport ChevronLeftIcon from 'sonar-ui-common/components/icons/ChevronLeftIcon';\nimport ChevronRightIcon from 'sonar-ui-common/components/icons/ChevronRightIcon';\nimport { lazyLoad } from 'sonar-ui-common/components/lazyLoad';\nimport {\n  getShortMonthName,\n  getShortWeekDayName,\n  getWeekDayName\n} from 'sonar-ui-common/helpers/l10n';\nimport './DayPicker.css';\nimport './styles.css';\n\nconst DayPicker = lazyLoad(() => import('react-day-picker'));\n\ninterface Props {\n  className?: string;\n  currentMonth?: Date;\n  highlightFrom?: Date;\n  highlightTo?: Date;\n  inputClassName?: string;\n  maxDate?: Date;\n  minDate?: Date;\n  name?: string;\n  onChange: (date: Date | undefined) => void;\n  placeholder: string;\n  value?: Date;\n}\n\ninterface State {\n  currentMonth: Date;\n  open: boolean;\n  lastHovered?: Date;\n}\n\ntype Week = [string, string, string, string, string, string, string];\n\nexport default class DateInput extends React.PureComponent<Props, State> {\n  input?: HTMLInputElement | null;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { currentMonth: props.value || props.currentMonth || new Date(), open: false };\n  }\n\n  focus = () => {\n    if (this.input) {\n      this.input.focus();\n    }\n    this.openCalendar();\n  };\n\n  handleResetClick = () => {\n    this.closeCalendar();\n    this.props.onChange(undefined);\n  };\n\n  openCalendar = () => {\n    this.setState({\n      currentMonth: this.props.value || this.props.currentMonth || new Date(),\n      lastHovered: undefined,\n      open: true\n    });\n  };\n\n  closeCalendar = () => {\n    this.setState({ open: false });\n  };\n\n  handleDayClick = (day: Date, modifiers: DayModifiers) => {\n    if (!modifiers.disabled) {\n      this.closeCalendar();\n      this.props.onChange(day);\n    }\n  };\n\n  handleDayMouseEnter = (day: Date, modifiers: DayModifiers) => {\n    this.setState({ lastHovered: modifiers.disabled ? undefined : day });\n  };\n\n  handleCurrentMonthChange = ({ value }: { value: number }) => {\n    this.setState((state: State) => ({ currentMonth: setMonth(state.currentMonth, value) }));\n  };\n\n  handleCurrentYearChange = ({ value }: { value: number }) => {\n    this.setState(state => ({ currentMonth: setYear(state.currentMonth, value) }));\n  };\n\n  handlePreviousMonthClick = () => {\n    this.setState(state => ({ currentMonth: subMonths(state.currentMonth, 1) }));\n  };\n\n  handleNextMonthClick = () => {\n    this.setState(state => ({ currentMonth: addMonths(state.currentMonth, 1) }));\n  };\n\n  render() {\n    const { highlightFrom, highlightTo, minDate, value } = this.props;\n    const { lastHovered } = this.state;\n\n    const after = this.props.maxDate || new Date();\n\n    const months = range(12);\n    const years = range(new Date().getFullYear() - 10, new Date().getFullYear() + 1);\n\n    const selectedDays: Modifier[] = value ? [value] : [];\n    let modifiers: Partial<Modifiers> | undefined;\n    const lastHoveredOrValue = lastHovered || value;\n\n    if (highlightFrom && lastHoveredOrValue) {\n      modifiers = { highlighted: { from: highlightFrom, to: lastHoveredOrValue } };\n      selectedDays.push(highlightFrom);\n    }\n    if (highlightTo && lastHoveredOrValue) {\n      modifiers = { highlighted: { from: lastHoveredOrValue, to: highlightTo } };\n      selectedDays.push(highlightTo);\n    }\n\n    const weekdaysLong = range(7).map(getWeekDayName) as Week;\n    const weekdaysShort = range(7).map(getShortWeekDayName) as Week;\n\n    return (\n      <OutsideClickHandler onClickOutside={this.closeCalendar}>\n        <span className={classNames('date-input-control', this.props.className)}>\n          <InputWrapper\n            className={classNames('date-input-control-input', this.props.inputClassName, {\n              'is-filled': this.props.value !== undefined\n            })}\n            innerRef={node => (this.input = node)}\n            name={this.props.name}\n            onFocus={this.openCalendar}\n            placeholder={this.props.placeholder}\n            readOnly={true}\n            type=\"text\"\n            value={value}\n          />\n          <CalendarIcon className=\"date-input-control-icon\" fill=\"\" />\n          {this.props.value !== undefined && (\n            <ClearButton\n              className=\"button-tiny date-input-control-reset\"\n              iconProps={{ size: 12 }}\n              onClick={this.handleResetClick}\n            />\n          )}\n          {this.state.open && (\n            <div className=\"date-input-calendar\">\n              <nav className=\"date-input-calendar-nav\">\n                <ButtonIcon className=\"button-small\" onClick={this.handlePreviousMonthClick}>\n                  <ChevronLeftIcon />\n                </ButtonIcon>\n                <div className=\"date-input-calender-month\">\n                  <Select\n                    className=\"date-input-calender-month-select\"\n                    onChange={this.handleCurrentMonthChange}\n                    options={months.map(month => ({\n                      label: getShortMonthName(month),\n                      value: month\n                    }))}\n                    value={this.state.currentMonth.getMonth()}\n                  />\n                  <Select\n                    className=\"date-input-calender-month-select spacer-left\"\n                    onChange={this.handleCurrentYearChange}\n                    options={years.map(year => ({ label: String(year), value: year }))}\n                    value={this.state.currentMonth.getFullYear()}\n                  />\n                </div>\n                <ButtonIcon className=\"button-small\" onClick={this.handleNextMonthClick}>\n                  <ChevronRightIcon />\n                </ButtonIcon>\n              </nav>\n              <DayPicker\n                captionElement={<NullComponent />}\n                disabledDays={{ after, before: minDate }}\n                firstDayOfWeek={1}\n                modifiers={modifiers}\n                month={this.state.currentMonth}\n                navbarElement={<NullComponent />}\n                onDayClick={this.handleDayClick}\n                onDayMouseEnter={this.handleDayMouseEnter}\n                selectedDays={selectedDays}\n                weekdaysLong={weekdaysLong}\n                weekdaysShort={weekdaysShort}\n              />\n            </div>\n          )}\n        </span>\n      </OutsideClickHandler>\n    );\n  }\n}\n\nfunction NullComponent() {\n  return null;\n}\n\ntype InputWrapperProps = T.Omit<React.InputHTMLAttributes<HTMLInputElement>, 'value'> &\n  InjectedIntlProps & {\n    innerRef: React.Ref<HTMLInputElement>;\n    value: Date | undefined;\n  };\n\nconst InputWrapper = injectIntl(({ innerRef, intl, value, ...other }: InputWrapperProps) => {\n  const formattedValue =\n    value && intl.formatDate(value, { year: 'numeric', month: 'short', day: 'numeric' });\n  return <input {...other} ref={innerRef} value={formattedValue || ''} />;\n});\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./DayPicker.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./DayPicker.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./DayPicker.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".DayPicker{display:inline-block}.DayPicker-wrapper{position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;padding-bottom:8px;flex-direction:row}.DayPicker-Months{display:flex;flex-wrap:wrap;justify-content:center}.DayPicker-Month{display:table;border-collapse:collapse;border-spacing:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;margin:8px 8px 0}.DayPicker-Weekdays{display:table-header-group}.DayPicker-WeekdaysRow{display:table-row}.DayPicker-Weekday{display:table-cell;padding:8px;font-size:12px;text-align:center;color:#999}.DayPicker-Weekday abbr[title]{border-bottom:none;text-decoration:none}.DayPicker-Body{display:table-row-group}.DayPicker-Week{display:table-row}.DayPicker-Day{display:table-cell;line-height:15px;padding:8px;text-align:center;cursor:pointer;vertical-align:top;outline:none}.DayPicker--interactionDisabled .DayPicker-Day{cursor:default}.DayPicker-Footer{padding-top:8px}.DayPicker-Day--today{font-weight:700}.DayPicker-Day--outside{cursor:default;color:#8b9898}.DayPicker-Day--disabled{color:#cdcdcd;cursor:not-allowed}.DayPicker-Day--sunday{background-color:#f7f8f8}.DayPicker-Day--sunday:not(.DayPicker-Day--today){color:#dce0e0}.DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside){background-color:#4b9fd5;color:#fff}.DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--highlighted):not(.DayPicker-Day--outside):hover{background-color:#f3f3f3}.DayPicker-Day--highlighted:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside){background-color:#cae3f2}\", \"\"]);\n\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".date-input-control{position:relative;display:inline-block;cursor:pointer}.date-input-control-input{width:130px;padding-left:24px!important;cursor:pointer}.date-input-control-input.is-filled{padding-right:16px!important}.date-input-control-icon{position:absolute;top:4px;left:4px}.date-input-control-icon path{fill:#cdcdcd;transition:fill .3s ease}.date-input-control-input:focus+.date-input-control-icon path{fill:#4b9fd5}.date-input-control-reset{position:absolute;top:4px;right:4px;border:none}.date-input-calendar{position:absolute;z-index:7500;top:100%;left:0;border:1px solid #e6e6e6;background-color:#fff;box-shadow:0 6px 12px rgba(0,0,0,.175)}.date-input-calendar-nav{display:flex;justify-content:space-between;align-items:center;padding-top:8px;padding-left:8px;padding-right:8px}.date-input-calender-month-select{width:70px}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getAnalysisStatus(data: {\n  component: string;\n  branch?: string;\n  pullRequest?: string;\n}): Promise<{\n  component: {\n    branch?: string;\n    key: string;\n    name: string;\n    organization?: string;\n    pullRequest?: string;\n    warnings: string[];\n  };\n}> {\n  return getJSON('/api/ce/analysis_status', data).catch(throwGlobalError);\n}\n\nexport function getActivity(data: RequestData): Promise<{ tasks: T.Task[] }> {\n  return getJSON('/api/ce/activity', data);\n}\n\nexport function getStatus(\n  componentId?: string\n): Promise<{ failing: number; inProgress: number; pending: number; pendingTime?: number }> {\n  const data = {};\n  if (componentId) {\n    Object.assign(data, { componentId });\n  }\n  return getJSON('/api/ce/activity_status', data);\n}\n\nexport function getTask(id: string, additionalFields?: string[]): Promise<T.Task> {\n  return getJSON('/api/ce/task', { id, additionalFields }).then(r => r.task);\n}\n\nexport function cancelTask(id: string): Promise<any> {\n  return post('/api/ce/cancel', { id }).then(() => getTask(id), () => getTask(id));\n}\n\nexport function cancelAllTasks(): Promise<any> {\n  return post('/api/ce/cancel_all');\n}\n\nexport function getTasksForComponent(\n  component: string\n): Promise<{ queue: T.Task[]; current: T.Task }> {\n  return getJSON('/api/ce/component', { component }).catch(throwGlobalError);\n}\n\nexport function getTypes(): Promise<string[]> {\n  return getJSON('/api/ce/task_types').then(r => r.taskTypes);\n}\n\nexport function getWorkers(): Promise<{ canSetWorkerCount: boolean; value: number }> {\n  return getJSON('/api/ce/worker_count').catch(throwGlobalError);\n}\n\nexport function setWorkerCount(count: number): Promise<void | Response> {\n  return post('/api/ce/set_worker_count', { count }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedTime } from 'react-intl';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { hour: 'numeric', minute: 'numeric' };\n\nexport const longFormatterOption = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n\nexport default function TimeFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedTime value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedTime>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DateInput from './DateInput';\n\ntype DateRange = { from?: Date; to?: Date };\n\ninterface Props {\n  className?: string;\n  maxDate?: Date;\n  minDate?: Date;\n  onChange: (date: DateRange) => void;\n  value?: DateRange;\n}\n\nexport default class DateRangeInput extends React.PureComponent<Props> {\n  toDateInput?: DateInput | null;\n\n  get from() {\n    return this.props.value && this.props.value.from;\n  }\n\n  get to() {\n    return this.props.value && this.props.value.to;\n  }\n\n  handleFromChange = (from: Date | undefined) => {\n    this.props.onChange({ from, to: this.to });\n\n    // use `setTimeout` to work around the immediate closing of the `toDateInput`\n    setTimeout(() => {\n      if (from && !this.to && this.toDateInput) {\n        this.toDateInput.focus();\n      }\n    }, 0);\n  };\n\n  handleToChange = (to: Date | undefined) => {\n    this.setState({ to });\n    this.props.onChange({ from: this.from, to });\n  };\n\n  render() {\n    return (\n      <div className={classNames('display-inline-flex-center', this.props.className)}>\n        <DateInput\n          currentMonth={this.to}\n          data-test=\"from\"\n          highlightTo={this.to}\n          maxDate={this.to}\n          onChange={this.handleFromChange}\n          placeholder={translate('start_date')}\n          value={this.from}\n        />\n        <span className=\"note little-spacer-left little-spacer-right\">{translate('to_')}</span>\n        <DateInput\n          currentMonth={this.from}\n          data-test=\"to\"\n          highlightFrom={this.from}\n          minDate={this.from}\n          onChange={this.handleToChange}\n          placeholder={translate('end_date')}\n          ref={element => (this.toDateInput = element)}\n          value={this.to}\n        />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}