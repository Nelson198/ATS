{"version":3,"sources":["webpack:///./src/main/js/apps/projectQualityGate/Form.tsx","webpack:///./src/main/js/apps/projectQualityGate/Header.tsx","webpack:///./src/main/js/apps/projectQualityGate/App.tsx","webpack:///./node_modules/sonar-ui-common/components/controls/HelpTooltip.js","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./node_modules/sonar-ui-common/components/controls/HelpTooltip.css?df4d","webpack:///./node_modules/sonar-ui-common/components/controls/HelpTooltip.css","webpack:///./src/main/js/components/docs/DocTooltip.tsx","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/helpers/markdown.js","webpack:///./src/main/js/app/utils/addGlobalSuccessMessage.ts","webpack:///./src/main/js/app/utils/handleRequiredAuthorization.ts","webpack:///../sonar-docs/src/tooltips/quality-gates/quality-gate-projects.md"],"names":["Form_Form","index_js_exposed","[object Object]","this","mounted","state","loading","stopLoading","setState","handleChange","option","gate","props","isSet","value","isUnset","isChanged","id","Number","onChange","then","renderGateName","isDefault","Object","l10n","label","_this$props","options","allGates","map","String","name","Select_default","a","clearable","disabled","optionRenderer","style","width","valueRenderer","renderSelect","className","Header","DocTooltip","doc","Promise","resolve","__webpack_require__","bind","App_App","handleChangeGate","oldId","newId","component","requestData","gateId","organization","projectKey","key","quality_gates","addGlobalSuccessMessage","newGate","find","onComponentChange","qualityGate","undefined","checkPermissions","fetchQualityGates","handleRequiredAuthorization","configuration","showQualityGates","all","project","_ref","_ref2","_slicedToArray","qualitygates","_this$state","Suggestions","suggestions","Helmet_default","title","A11ySkipTarget","anchor","defineProperty","exports","classNames","React","HelpIcon_1","theme_1","Tooltip_1","default","_a","tagName","createElement","mouseLeaveDelay","onShow","overlay","placement","children","ThemeConsumer","theme","fill","colors","gray71","size","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_SuggestionsContext__WEBPACK_IMPORTED_MODULE_1__","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","prevProps","content","module","i","hmr","transform","insertInto","locals","push","sonar_ui_common_components_controls_HelpTooltip__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_controls_HelpTooltip__WEBPACK_IMPORTED_MODULE_1___default","n","sonar_ui_common_components_lazyLoad__WEBPACK_IMPORTED_MODULE_2__","_helpers_markdown__WEBPACK_IMPORTED_MODULE_3__","DocMarkdownBlock","e","open","close","document","addEventListener","removeEventListener","childProps","overlayProps","isTooltip","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_1__","_A11yContext__WEBPACK_IMPORTED_MODULE_2__","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","assign","getLink","_this$props$label","weight","concat","getFrontMatterPosition","lines","firstLine","lastLine","length","trim","parseFrontMatter","data","tokens","split","x","cutConditionalContent","tag","beginning","ending","newContent","start","indexOf","end","substring","getFrontMatter","position","slice","separateFrontMatter","frontmatter","join","filterContent","regexBase","_require","isSonarCloud","getInstance","contentWithoutStatic","replace","RegExp","_store_globalMessages__WEBPACK_IMPORTED_MODULE_0__","_getStore__WEBPACK_IMPORTED_MODULE_1__","message","dispatch","sonar_ui_common_helpers_getHistory__WEBPACK_IMPORTED_MODULE_0__","sonar_ui_common_helpers_getHistory__WEBPACK_IMPORTED_MODULE_0___default","_store_appState__WEBPACK_IMPORTED_MODULE_1__","_getStore__WEBPACK_IMPORTED_MODULE_2__","store","history","returnTo","window","location","pathname","search","hash","query","return_to","r"],"mappings":"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","file":"js/320.m.48304b31.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  allGates: T.QualityGate[];\n  gate?: T.QualityGate;\n  onChange: (oldGate?: number, newGate?: number) => Promise<void>;\n}\n\ninterface State {\n  loading: boolean;\n}\n\ninterface Option {\n  isDefault?: boolean;\n  label: string;\n  value: string;\n}\n\nexport default class Form extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  handleChange = (option: { value: string }) => {\n    const { gate } = this.props;\n\n    const isSet = gate == null && option.value != null;\n    const isUnset = gate != null && option.value == null;\n    const isChanged = gate != null && gate.id !== Number(option.value);\n    const hasChanged = isSet || isUnset || isChanged;\n\n    if (hasChanged) {\n      this.setState({ loading: true });\n      this.props\n        .onChange(gate && gate.id, Number(option.value))\n        .then(this.stopLoading, this.stopLoading);\n    }\n  };\n\n  renderGateName = (option: { isDefault?: boolean; label: string }) => {\n    if (option.isDefault) {\n      return (\n        <span>\n          <strong>{translate('default')}</strong>\n          {': '}\n          {option.label}\n        </span>\n      );\n    }\n\n    return <span>{option.label}</span>;\n  };\n\n  renderSelect() {\n    const { gate, allGates } = this.props;\n\n    const options: Option[] = allGates.map(gate => ({\n      value: String(gate.id),\n      label: gate.name,\n      isDefault: gate.isDefault\n    }));\n\n    return (\n      <Select\n        clearable={false}\n        disabled={this.state.loading}\n        onChange={this.handleChange}\n        optionRenderer={this.renderGateName}\n        options={options}\n        style={{ width: 300 }}\n        value={gate && String(gate.id)}\n        valueRenderer={this.renderGateName}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderSelect()}\n        {this.state.loading && <i className=\"spinner spacer-left\" />}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DocTooltip from '../../components/docs/DocTooltip';\n\nexport default function Header() {\n  return (\n    <header className=\"page-header\">\n      <div className=\"page-title display-flex-center\">\n        <h1>{translate('project_quality_gate.page')}</h1>\n        <DocTooltip\n          className=\"spacer-left\"\n          doc={import(/* webpackMode: \"eager\" */ 'Docs/tooltips/quality-gates/quality-gate-projects.md')}\n        />\n      </div>\n      <div className=\"page-description\">{translate('project_quality_gate.page.description')}</div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  associateGateWithProject,\n  dissociateGateWithProject,\n  fetchQualityGates,\n  getGateForProject\n} from '../../api/quality-gates';\nimport A11ySkipTarget from '../../app/components/a11y/A11ySkipTarget';\nimport Suggestions from '../../app/components/embed-docs-modal/Suggestions';\nimport addGlobalSuccessMessage from '../../app/utils/addGlobalSuccessMessage';\nimport handleRequiredAuthorization from '../../app/utils/handleRequiredAuthorization';\nimport Form from './Form';\nimport Header from './Header';\n\ninterface Props {\n  component: T.Component;\n  onComponentChange: (changes: {}) => void;\n}\n\ninterface State {\n  allGates?: T.QualityGate[];\n  gate?: T.QualityGate;\n  loading: boolean;\n}\n\nexport default class App extends React.PureComponent<Props> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.checkPermissions()) {\n      this.fetchQualityGates();\n    } else {\n      handleRequiredAuthorization();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkPermissions() {\n    const { configuration } = this.props.component;\n    const hasPermission = configuration && configuration.showQualityGates;\n    return !!hasPermission;\n  }\n\n  fetchQualityGates() {\n    const { component } = this.props;\n    this.setState({ loading: true });\n    Promise.all([\n      fetchQualityGates({ organization: component.organization }),\n      getGateForProject({ organization: component.organization, project: component.key })\n    ]).then(\n      ([{ qualitygates: allGates }, gate]) => {\n        if (this.mounted) {\n          this.setState({ allGates, gate, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleChangeGate = (oldId?: number, newId?: number) => {\n    const { allGates } = this.state;\n    if ((!oldId && !newId) || !allGates) {\n      return Promise.resolve();\n    }\n\n    const { component } = this.props;\n    const requestData = {\n      gateId: newId ? newId : oldId!,\n      organization: component.organization,\n      projectKey: component.key\n    };\n    const request = newId\n      ? associateGateWithProject(requestData)\n      : dissociateGateWithProject(requestData);\n\n    return request.then(() => {\n      if (this.mounted) {\n        addGlobalSuccessMessage(translate('project_quality_gate.successfully_updated'));\n        if (newId) {\n          const newGate = allGates.find(gate => gate.id === newId);\n          if (newGate) {\n            this.setState({ gate: newGate });\n            this.props.onComponentChange({ qualityGate: newGate });\n          }\n        } else {\n          this.setState({ gate: undefined });\n        }\n      }\n    });\n  };\n\n  render() {\n    if (!this.checkPermissions()) {\n      return null;\n    }\n\n    const { allGates, gate, loading } = this.state;\n\n    return (\n      <div className=\"page page-limited\" id=\"project-quality-gate\">\n        <Suggestions suggestions=\"project_quality_gate\" />\n        <Helmet title={translate('project_quality_gate.page')} />\n        <A11ySkipTarget anchor=\"qg_main\" />\n        <Header />\n        {loading ? (\n          <i className=\"spinner\" />\n        ) : (\n          allGates && <Form allGates={allGates} gate={gate} onChange={this.handleChangeGate} />\n        )}\n      </div>\n    );\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar HelpIcon_1 = require(\"../icons/HelpIcon\");\nvar theme_1 = require(\"../theme\");\nrequire(\"./HelpTooltip.css\");\nvar Tooltip_1 = require(\"./Tooltip\");\nfunction HelpTooltip(props) {\n    var _a = props.tagName, tagName = _a === void 0 ? 'div' : _a;\n    return React.createElement(tagName, { className: classNames('help-tooltip', props.className) }, React.createElement(Tooltip_1.default, { mouseLeaveDelay: 0.25, onShow: props.onShow, overlay: props.overlay, placement: props.placement },\n        React.createElement(\"span\", { className: \"display-inline-flex-center\" }, props.children || (React.createElement(theme_1.ThemeConsumer, null, function (theme) { return React.createElement(HelpIcon_1.default, { fill: theme.colors.gray71, size: 12 }); })))));\n}\nexports.default = HelpTooltip;\n//# sourceMappingURL=HelpTooltip.js.map","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","\nvar content = require(\"!!../../../css-loader/dist/cjs.js??ref--6-1!../../../postcss-loader/src/index.js??postcss!./HelpTooltip.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../css-loader/dist/cjs.js??ref--6-1!../../../postcss-loader/src/index.js??postcss!./HelpTooltip.css\", function() {\n\t\tvar newContent = require(\"!!../../../css-loader/dist/cjs.js??ref--6-1!../../../postcss-loader/src/index.js??postcss!./HelpTooltip.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".help-tooltip{display:inline-flex;align-items:center;vertical-align:middle}.help-toolip-link{display:block;width:12px;height:12px;border:none}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { lazyLoad } from 'sonar-ui-common/components/lazyLoad';\nimport { filterContent } from '../../helpers/markdown';\n\nconst DocMarkdownBlock = lazyLoad(() => import('./DocMarkdownBlock'));\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  // Use as `import(/* webpackMode: \"eager\" */ 'Docs/tooltips/foo/bar.md')`\n  doc: Promise<{ default: string }>;\n  overlayProps?: T.Dict<string>;\n}\n\ninterface State {\n  content?: string;\n  open: boolean;\n}\n\nexport default class DocTooltip extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { open: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.doc.then(\n      ({ default: content }) => {\n        if (this.mounted) {\n          this.setState({ content });\n        }\n      },\n      () => {}\n    );\n    document.addEventListener('scroll', this.close, true);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    document.removeEventListener('scroll', this.close, true);\n  }\n\n  close = () => {\n    if (this.mounted) {\n      this.setState({ open: false });\n    }\n  };\n\n  render() {\n    return this.state.content ? (\n      <HelpTooltip\n        className={this.props.className}\n        overlay={\n          <div className=\"abs-width-300\">\n            <DocMarkdownBlock\n              childProps={this.props.overlayProps}\n              className=\"cut-margins\"\n              content={filterContent(this.state.content)}\n              isTooltip={true}\n            />\n          </div>\n        }>\n        {this.props.children}\n      </HelpTooltip>\n    ) : (\n      this.props.children || null\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// keep this file in JavaScript, because it is used by a webpack loader\nmodule.exports = { getFrontMatter, separateFrontMatter, filterContent };\n\nfunction getFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  return position ? parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine)) : {};\n}\n\nfunction separateFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  if (position) {\n    const frontmatter = parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine));\n    const content = lines.slice(position.lastLine + 1).join('\\n');\n    return { frontmatter, content };\n  } else {\n    return { frontmatter: {}, content };\n  }\n}\n\nfunction getFrontMatterPosition(lines) {\n  let firstLine;\n  let lastLine;\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    if (line.trim() === '---') {\n      if (firstLine === undefined) {\n        firstLine = i;\n      } else {\n        lastLine = i;\n        break;\n      }\n    }\n  }\n  return lastLine !== undefined ? { firstLine, lastLine } : undefined;\n}\n\nfunction parseFrontMatter(lines) {\n  const data = {};\n  for (let i = 0; i < lines.length; i++) {\n    const tokens = lines[i].split(':').map(x => x.trim());\n    if (tokens.length === 2) {\n      data[tokens[0]] = tokens[1];\n    }\n  }\n  return data;\n}\n\n/**\n * @param {string} content\n * @returns {string}\n */\nfunction filterContent(content) {\n  const regexBase = '<!-- \\\\/?(sonarqube|sonarcloud|static) -->';\n  const { isSonarCloud, getInstance } = require('./system');\n  const contentWithInstance = content.replace(/{instance}/gi, getInstance());\n  const contentWithoutStatic = cutConditionalContent(contentWithInstance, 'static');\n  const filteredContent = isSonarCloud()\n    ? cutConditionalContent(contentWithoutStatic, 'sonarqube')\n    : cutConditionalContent(contentWithoutStatic, 'sonarcloud');\n  return filteredContent\n    .replace(new RegExp(`^${regexBase}(\\n|\\r|\\r\\n|$)`, 'gm'), '') // First, remove single-line ones, including ending carriage-returns.\n    .replace(new RegExp(`${regexBase}`, 'g'), ''); // Now remove all remaining ones.\n}\n\n/**\n * @param {string} content\n * @param {string} tag\n * @returns {string}\n */\nfunction cutConditionalContent(content, tag) {\n  const beginning = `<!-- ${tag} -->`;\n  const ending = `<!-- /${tag} -->`;\n\n  let newContent = content;\n  let start = newContent.indexOf(beginning);\n  let end = newContent.indexOf(ending);\n  while (start !== -1 && end !== -1) {\n    newContent = newContent.substring(0, start) + newContent.substring(end + ending.length);\n    start = newContent.indexOf(beginning);\n    end = newContent.indexOf(ending);\n  }\n\n  return newContent;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as globalMessages from '../../store/globalMessages';\nimport getStore from './getStore';\n\nexport default function addGlobalSuccessMessage(message: string): void {\n  const store = getStore();\n  store.dispatch(globalMessages.addGlobalSuccessMessage(message));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getHistory from 'sonar-ui-common/helpers/getHistory';\nimport { requireAuthorization } from '../../store/appState';\nimport getStore from './getStore';\n\nexport default function handleRequiredAuthorization() {\n  const store = getStore();\n  const history = getHistory();\n\n  const returnTo = window.location.pathname + window.location.search + window.location.hash;\n\n  store.dispatch(requireAuthorization());\n  history.replace({ pathname: '/sessions/new', query: { return_to: returnTo } });\n}\n","export default \"The Default gate is applied to all projects not explicitly assigned to a gate. Quality Profile and Gate administrators can assign projects to a gate from the Quality Profile page. Project administrators can also choose a non-default gate.\\n\""],"sourceRoot":""}