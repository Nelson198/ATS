{"version":3,"sources":["webpack:///./node_modules/lodash/uniqWith.js","webpack:///./src/main/js/apps/account/notifications/NotificationsList.tsx","webpack:///./src/main/js/apps/account/notifications/SonarCloudNotifications.tsx","webpack:///./src/main/js/apps/account/notifications/GlobalNotifications.tsx","webpack:///./src/main/js/apps/account/notifications/ProjectModal.tsx","webpack:///./src/main/js/apps/account/notifications/ProjectNotifications.tsx","webpack:///./src/main/js/apps/account/notifications/Projects.tsx","webpack:///./src/main/js/apps/account/notifications/Notifications.tsx","webpack:///./src/main/js/api/notifications.ts","webpack:///./node_modules/sonar-ui-common/components/controls/SimpleModal.js","webpack:///./node_modules/sonar-ui-common/components/controls/Checkbox.js","webpack:///./node_modules/sonar-ui-common/components/controls/Checkbox.css?d95d","webpack:///./node_modules/sonar-ui-common/components/controls/Checkbox.css","webpack:///./node_modules/lodash/groupBy.js","webpack:///./node_modules/lodash/partition.js","webpack:///./node_modules/sonar-ui-common/components/icons/OpenCloseIcon.js","webpack:///./node_modules/sonar-ui-common/components/icons/ChevronDownIcon.js","webpack:///./node_modules/sonar-ui-common/components/controls/BoxedGroupAccordion.js"],"names":["baseUniq","__webpack_require__","module","exports","array","comparator","undefined","length","NotificationsList_NotificationsList","index_js_exposed","[object Object]","type","channel","this","props","notifications","find","notification","checked","onAdd","onRemove","dispatcher","globalMessageKey","projectMessageKey","project","Object","l10n","_this$props","channels","checkboxId","types","map","key","getDispatcherLabel","className","Checkbox_default","a","isEnabled","id","onCheck","handleCheck","mapDispatchToProps","setCurrentUserSetting","notifications_SonarCloudNotifications","es","state","notificationsOptOut","rootReducer","handleCheckOptOut","value","GlobalNotifications","GlobalNotifications_getCheckboxId","addNotification","removeNotification","system","concat","ProjectModal_ProjectModal","super","mounted","handleKeyDown","event","keyCode","preventDefault","handleSelectHighlighted","handleHighlightPrevious","handleHighlightNext","getCurrentIndex","_this$state","highlighted","suggestions","findIndex","suggestion","highlightIndex","index","setState","_this$state2","selectedProject","handleSubmit","handleSelect","handleSearch","query","addedProjects","open","Promise","resolve","loading","components","then","r","projects","results","domain","q","items","filter","item","p","projectName","name","onSubmit","debounce_default","closeModal","_this$state3","header","SimpleModal_default","onClose","_ref","onCloseClick","onFormSubmit","SearchBox_default","autoFocus","onChange","onKeyDown","placeholder","Dropdown","noPadding","classnames","active","onClick","buttons","disabled","ProjectNotifications","collapsed","_React$useState2","_slicedToArray","isCollapsed","setCollapsed","BoxedGroupAccordion_default","title","aria-label","assign","_ref2","THRESHOLD_COLLAPSED","isNotificationProject","Projects_Projects","_this","search","showModal","filterSearch","toLowerCase","includes","handleAddProject","arguments","openModal","removed","allProjects","projectToRemove","initialProjectNotificationsCount","uniqBy_default","notificationsByProject","groupBy_default","n","filteredProjects","sortBy_default","shouldBeCollapsed","data-test","Notifications_Notifications","globalTypes","perProjectTypes","fetchNotifications","request","catch","throwGlobalError","response","projectNotifications","getNotificationUpdates","addNotificationToState","added","uniqWith_default","areNotificationsEqual","removeNotificationFromState","data","_partition3","Notifications_slicedToArray","partition_default","globalNotifications","_this$getNotification2","Helmet_default","Alert","variant","DeferredSpinner_default","b","extendStatics","__extends","d","setPrototypeOf","__proto__","Array","hasOwnProperty","__","constructor","prototype","create","__assign","t","s","i","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","defineProperty","React","Modal_1","SimpleModal","_super","submitting","stopSubmitting","handleCloseClick","currentTarget","blur","handleFormSubmit","submit","handleSubmitClick","result","componentDidMount","componentWillUnmount","render","_a","children","modalProps","createElement","default","contentLabel","onRequestClose","onSubmitClick","Component","classNames","DeferredSpinner_1","Checkbox","handleClick","right","thirdState","icon-checkbox-checked","icon-checkbox-single","icon-checkbox-disabled","aria-checked","note","href","role","Boolean","defaultProps","PureComponent","content","options","hmr","transform","insertInto","locals","push","baseAssignValue","createAggregator","groupBy","partition","ChevronDownIcon_1","ChevronRightIcon_1","Icon_1","_b","fill","size","style","OpenCloseIcon_1","BoxedGroupAccordion","hoveringInner","onDetailEnter","onDetailLeave","renderHeader","no-hover","onMouseEnter","onMouseLeave"],"mappings":"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","file":"js/322.m.b96caa9d.chunk.js","sourcesContent":["var baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `comparator` which\n * is invoked to compare elements of `array`. The order of result values is\n * determined by the order they occur in the array.The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.uniqWith(objects, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n */\nfunction uniqWith(array, comparator) {\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n}\n\nmodule.exports = uniqWith;\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  onAdd: (n: T.Notification) => void;\n  onRemove: (n: T.Notification) => void;\n  channels: string[];\n  checkboxId: (type: string, channel: string) => string;\n  project?: boolean;\n  types: string[];\n  notifications: T.Notification[];\n}\n\nexport default class NotificationsList extends React.PureComponent<Props> {\n  isEnabled(type: string, channel: string) {\n    return !!this.props.notifications.find(\n      notification => notification.type === type && notification.channel === channel\n    );\n  }\n\n  handleCheck(type: string, channel: string, checked: boolean) {\n    if (checked) {\n      this.props.onAdd({ type, channel });\n    } else {\n      this.props.onRemove({ type, channel });\n    }\n  }\n\n  getDispatcherLabel(dispatcher: string) {\n    const globalMessageKey = ['notification.dispatcher', dispatcher];\n    const projectMessageKey = [...globalMessageKey, 'project'];\n    const shouldUseProjectMessage = this.props.project && hasMessage(...projectMessageKey);\n    return shouldUseProjectMessage\n      ? translate(...projectMessageKey)\n      : translate(...globalMessageKey);\n  }\n\n  render() {\n    const { channels, checkboxId, types } = this.props;\n\n    return (\n      <tbody>\n        {types.map(type => (\n          <tr key={type}>\n            <td>{this.getDispatcherLabel(type)}</td>\n            {channels.map(channel => (\n              <td className=\"text-center\" key={channel}>\n                <Checkbox\n                  checked={this.isEnabled(type, channel)}\n                  id={checkboxId(type, channel)}\n                  onCheck={checked => this.handleCheck(type, channel, checked)}\n                />\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getCurrentUserSetting, Store } from '../../../store/rootReducer';\nimport { setCurrentUserSetting } from '../../../store/users';\n\ninterface Props {\n  notificationsOptOut?: boolean;\n  setCurrentUserSetting: (setting: T.CurrentUserSetting) => void;\n}\n\nexport class SonarCloudNotifications extends React.PureComponent<Props> {\n  handleCheckOptOut = (checked: boolean) => {\n    this.props.setCurrentUserSetting({\n      key: 'notifications.optOut',\n      value: checked ? 'false' : 'true'\n    });\n  };\n\n  render() {\n    return (\n      <section className=\"boxed-group\">\n        <h2>{translate('my_profile.sonarcloud_feature_notifications.title')}</h2>\n        <div className=\"boxed-group-inner\">\n          <table className=\"data zebra\">\n            <thead>\n              <tr>\n                <th />\n                <th className=\"text-center\">\n                  <h4>{translate('activate')}</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{translate('my_profile.sonarcloud_feature_notifications.description')}</td>\n                <td className=\"text-center\">\n                  <Checkbox\n                    checked={!this.props.notificationsOptOut}\n                    onCheck={this.handleCheckOptOut}\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => {\n  const notificationsOptOut = getCurrentUserSetting(state, 'notifications.optOut') === 'true';\n\n  return {\n    notificationsOptOut\n  };\n};\n\nconst mapDispatchToProps = {\n  setCurrentUserSetting\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SonarCloudNotifications);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isSonarCloud } from '../../../helpers/system';\nimport NotificationsList from './NotificationsList';\nimport SonarCloudNotifications from './SonarCloudNotifications';\n\ninterface Props {\n  addNotification: (n: T.Notification) => void;\n  channels: string[];\n  notifications: T.Notification[];\n  removeNotification: (n: T.Notification) => void;\n  types: string[];\n}\n\nexport default function GlobalNotifications(props: Props) {\n  return (\n    <>\n      <section className=\"boxed-group\">\n        <h2>{translate('my_profile.overall_notifications.title')}</h2>\n\n        <div className=\"boxed-group-inner\">\n          <table className=\"data zebra\">\n            <thead>\n              <tr>\n                <th />\n                {props.channels.map(channel => (\n                  <th className=\"text-center\" key={channel}>\n                    <h4>{translate('notification.channel', channel)}</h4>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n\n            <NotificationsList\n              channels={props.channels}\n              checkboxId={getCheckboxId}\n              notifications={props.notifications}\n              onAdd={props.addNotification}\n              onRemove={props.removeNotification}\n              types={props.types}\n            />\n          </table>\n        </div>\n      </section>\n      {isSonarCloud() && <SonarCloudNotifications />}\n    </>\n  );\n}\n\nfunction getCheckboxId(type: string, channel: string) {\n  return `global-notification-${type}-${channel}`;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DropdownOverlay } from 'sonar-ui-common/components/controls/Dropdown';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getSuggestions } from '../../../api/components';\n\ninterface Props {\n  addedProjects: T.NotificationProject[];\n  closeModal: VoidFunction;\n  onSubmit: (project: T.NotificationProject) => void;\n}\n\ninterface State {\n  highlighted?: T.NotificationProject;\n  loading?: boolean;\n  query?: string;\n  open?: boolean;\n  selectedProject?: T.NotificationProject;\n  suggestions?: T.NotificationProject[];\n}\n\nexport default class ProjectModal extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n    this.handleSearch = debounce(this.handleSearch, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleKeyDown = (event: React.KeyboardEvent) => {\n    switch (event.keyCode) {\n      case 13:\n        event.preventDefault();\n        this.handleSelectHighlighted();\n        break;\n      case 38:\n        event.preventDefault();\n        this.handleHighlightPrevious();\n        break;\n      case 40:\n        event.preventDefault();\n        this.handleHighlightNext();\n        break;\n    }\n  };\n\n  getCurrentIndex = () => {\n    const { highlighted, suggestions } = this.state;\n    return highlighted && suggestions\n      ? suggestions.findIndex(suggestion => suggestion.project === highlighted.project)\n      : -1;\n  };\n\n  highlightIndex = (index: number) => {\n    const { suggestions } = this.state;\n    if (suggestions && suggestions.length > 0) {\n      if (index < 0) {\n        index = suggestions.length - 1;\n      } else if (index >= suggestions.length) {\n        index = 0;\n      }\n      this.setState({\n        highlighted: suggestions[index]\n      });\n    }\n  };\n\n  handleHighlightPrevious = () => {\n    this.highlightIndex(this.getCurrentIndex() - 1);\n  };\n\n  handleHighlightNext = () => {\n    this.highlightIndex(this.getCurrentIndex() + 1);\n  };\n\n  handleSelectHighlighted = () => {\n    const { highlighted, selectedProject } = this.state;\n    if (highlighted !== undefined) {\n      if (selectedProject !== undefined && highlighted.project === selectedProject.project) {\n        this.handleSubmit();\n      } else {\n        this.handleSelect(highlighted);\n      }\n    }\n  };\n\n  handleSearch = (query: string) => {\n    const { addedProjects } = this.props;\n\n    if (query.length < 2) {\n      this.setState({ open: false, query });\n      return Promise.resolve([]);\n    }\n\n    this.setState({ loading: true, query });\n    return getSuggestions(query).then(\n      r => {\n        if (this.mounted) {\n          let suggestions = undefined;\n          const projects = r.results.find(domain => domain.q === 'TRK');\n          if (projects && projects.items.length > 0) {\n            suggestions = projects.items\n              .filter(item => !addedProjects.find(p => p.project === item.key))\n              .map(item => ({\n                project: item.key,\n                projectName: item.name\n              }));\n          }\n          this.setState({ loading: false, open: true, suggestions });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false, open: false });\n        }\n      }\n    );\n  };\n\n  handleSelect = (selectedProject: T.NotificationProject) => {\n    this.setState({\n      open: false,\n      query: selectedProject.projectName,\n      selectedProject\n    });\n  };\n\n  handleSubmit = () => {\n    const { selectedProject } = this.state;\n    if (selectedProject) {\n      this.props.onSubmit(selectedProject);\n    }\n  };\n\n  render() {\n    const { closeModal } = this.props;\n    const { highlighted, loading, query, open, selectedProject, suggestions } = this.state;\n    const header = translate('my_account.set_notifications_for.title');\n    return (\n      <SimpleModal header={header} onClose={closeModal} onSubmit={this.handleSubmit}>\n        {({ onCloseClick, onFormSubmit }) => (\n          <form onSubmit={onFormSubmit}>\n            <header className=\"modal-head\">\n              <h2>{header}</h2>\n            </header>\n            <div className=\"modal-body\">\n              <div className=\"modal-field abs-width-400\">\n                <label>{translate('my_account.set_notifications_for')}</label>\n                <SearchBox\n                  autoFocus={true}\n                  onChange={this.handleSearch}\n                  onKeyDown={this.handleKeyDown}\n                  placeholder={translate('search.placeholder')}\n                  value={query}\n                />\n\n                {loading && <i className=\"spinner spacer-left\" />}\n\n                {!loading && open && (\n                  <div className=\"position-relative\">\n                    <DropdownOverlay className=\"abs-width-400\" noPadding={true}>\n                      {suggestions && suggestions.length > 0 ? (\n                        <ul className=\"notifications-add-project-search-results\">\n                          {suggestions.map(suggestion => (\n                            <li\n                              className={classNames({\n                                active: highlighted && highlighted.project === suggestion.project\n                              })}\n                              key={suggestion.project}\n                              onClick={() => this.handleSelect(suggestion)}>\n                              {suggestion.projectName}\n                            </li>\n                          ))}\n                        </ul>\n                      ) : (\n                        <div className=\"notifications-add-project-no-search-results\">\n                          {translate('no_results')}\n                        </div>\n                      )}\n                    </DropdownOverlay>\n                  </div>\n                )}\n              </div>\n            </div>\n            <footer className=\"modal-foot\">\n              <div>\n                <SubmitButton disabled={selectedProject === undefined}>\n                  {translate('add_verb')}\n                </SubmitButton>\n                <ResetButtonLink onClick={onCloseClick}>{translate('cancel')}</ResetButtonLink>\n              </div>\n            </footer>\n          </form>\n        )}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BoxedGroupAccordion from 'sonar-ui-common/components/controls/BoxedGroupAccordion';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport NotificationsList from './NotificationsList';\n\ninterface Props {\n  addNotification: (n: T.Notification) => void;\n  channels: string[];\n  collapsed: boolean;\n  notifications: T.Notification[];\n  project: T.NotificationProject;\n  removeNotification: (n: T.Notification) => void;\n  types: string[];\n}\n\nexport default function ProjectNotifications(props: Props) {\n  const { collapsed, project, channels } = props;\n  const [isCollapsed, setCollapsed] = React.useState<boolean>(collapsed);\n\n  const getCheckboxId = (type: string, channel: string) => {\n    return `project-notification-${props.project.project}-${type}-${channel}`;\n  };\n\n  const handleAddNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.addNotification({ ...props.project, channel, type });\n  };\n\n  const handleRemoveNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.removeNotification({\n      ...props.project,\n      channel,\n      type\n    });\n  };\n\n  const toggleExpanded = () => setCollapsed(!isCollapsed);\n\n  return (\n    <BoxedGroupAccordion\n      onClick={toggleExpanded}\n      open={!isCollapsed}\n      title={<h4 className=\"display-inline-block\">{project.projectName}</h4>}>\n      <table className=\"data zebra notifications-table\" key={project.project}>\n        <thead>\n          <tr>\n            <th aria-label={translate('project')} />\n            {channels.map(channel => (\n              <th className=\"text-center\" key={channel}>\n                <h4>{translate('notification.channel', channel)}</h4>\n              </th>\n            ))}\n          </tr>\n        </thead>\n\n        <NotificationsList\n          channels={props.channels}\n          checkboxId={getCheckboxId}\n          notifications={props.notifications}\n          onAdd={handleAddNotification}\n          onRemove={handleRemoveNotification}\n          project={true}\n          types={props.types}\n        />\n      </table>\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { groupBy, sortBy, uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport ProjectModal from './ProjectModal';\nimport ProjectNotifications from './ProjectNotifications';\n\nexport interface Props {\n  addNotification: (n: T.Notification) => void;\n  channels: string[];\n  initialProjectNotificationsCount: number;\n  notifications: T.Notification[];\n  removeNotification: (n: T.Notification) => void;\n  types: string[];\n}\n\nconst THRESHOLD_COLLAPSED = 3;\n\ninterface State {\n  addedProjects: T.NotificationProject[];\n  search: string;\n  showModal: boolean;\n}\n\nfunction isNotificationProject(project: {\n  project?: string;\n  projectName?: string;\n}): project is T.NotificationProject {\n  return project.project !== undefined && project.projectName !== undefined;\n}\n\nexport default class Projects extends React.PureComponent<Props, State> {\n  state: State = {\n    addedProjects: [],\n    search: '',\n    showModal: false\n  };\n\n  filterSearch = (project: T.NotificationProject, search: string) => {\n    return project.projectName && project.projectName.toLowerCase().includes(search);\n  };\n\n  handleAddProject = (project: T.NotificationProject) => {\n    this.setState(state => {\n      return {\n        addedProjects: [...state.addedProjects, project]\n      };\n    });\n  };\n\n  handleSearch = (search = '') => {\n    this.setState({ search: search.toLowerCase() });\n  };\n\n  handleSubmit = (selectedProject: T.NotificationProject) => {\n    if (selectedProject) {\n      this.handleAddProject(selectedProject);\n    }\n\n    this.closeModal();\n  };\n\n  closeModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  openModal = () => {\n    this.setState({ showModal: true });\n  };\n\n  removeNotification = (removed: T.Notification, allProjects: T.NotificationProject[]) => {\n    const projectToRemove = allProjects.find(p => p.project === removed.project);\n    if (projectToRemove) {\n      this.handleAddProject(projectToRemove);\n    }\n\n    this.props.removeNotification(removed);\n  };\n\n  render() {\n    const { initialProjectNotificationsCount, notifications } = this.props;\n    const { addedProjects, search } = this.state;\n\n    const projects = uniqBy(notifications, project => project.project).filter(\n      isNotificationProject\n    ) as T.NotificationProject[];\n    const notificationsByProject = groupBy(notifications, n => n.project);\n    const allProjects = uniqBy([...addedProjects, ...projects], project => project.project);\n    const filteredProjects = sortBy(allProjects, 'projectName').filter(p =>\n      this.filterSearch(p, search)\n    );\n    const shouldBeCollapsed = initialProjectNotificationsCount > THRESHOLD_COLLAPSED;\n\n    return (\n      <section className=\"boxed-group\" data-test=\"account__project-notifications\">\n        <div className=\"boxed-group-inner\">\n          <div className=\"page-actions\">\n            <Button onClick={this.openModal}>\n              <span data-test=\"account__add-project-notification\">\n                {translate('my_profile.per_project_notifications.add')}\n              </span>\n            </Button>\n          </div>\n\n          <h2>{translate('my_profile.per_project_notifications.title')}</h2>\n        </div>\n\n        {this.state.showModal && (\n          <ProjectModal\n            addedProjects={allProjects}\n            closeModal={this.closeModal}\n            onSubmit={this.handleSubmit}\n          />\n        )}\n\n        <div className=\"boxed-group-inner\">\n          {allProjects.length === 0 && (\n            <div className=\"note\">{translate('my_account.no_project_notifications')}</div>\n          )}\n\n          {allProjects.length > 0 && (\n            <div className=\"big-spacer-bottom\">\n              <SearchBox\n                onChange={this.handleSearch}\n                placeholder={translate('search.search_for_projects')}\n              />\n            </div>\n          )}\n\n          {filteredProjects.map(project => {\n            const collapsed = addedProjects.find(p => p.project === project.project)\n              ? false\n              : shouldBeCollapsed;\n            return (\n              <ProjectNotifications\n                addNotification={this.props.addNotification}\n                channels={this.props.channels}\n                collapsed={collapsed}\n                key={project.project}\n                notifications={notificationsByProject[project.project] || []}\n                project={project}\n                removeNotification={n => this.removeNotification(n, allProjects)}\n                types={this.props.types}\n              />\n            );\n          })}\n        </div>\n      </section>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { partition, uniqWith } from 'lodash';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport * as api from '../../../api/notifications';\nimport GlobalNotifications from './GlobalNotifications';\nimport Projects from './Projects';\n\ninterface State {\n  channels: string[];\n  globalTypes: string[];\n  initialProjectNotificationsCount: number;\n  loading: boolean;\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}\n\nexport default class Notifications extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    channels: [],\n    globalTypes: [],\n    initialProjectNotificationsCount: 0,\n    loading: true,\n    notifications: [],\n    perProjectTypes: []\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchNotifications();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchNotifications = () => {\n    api.getNotifications().then(\n      response => {\n        if (this.mounted) {\n          const { notifications } = response;\n          const { projectNotifications } = this.getNotificationUpdates(notifications);\n\n          this.setState({\n            channels: response.channels,\n            globalTypes: response.globalTypes,\n            initialProjectNotificationsCount: projectNotifications.length,\n            loading: false,\n            notifications: response.notifications,\n            perProjectTypes: response.perProjectTypes\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  addNotificationToState = (added: T.Notification) => {\n    this.setState(state => {\n      const notifications = uniqWith([...state.notifications, added], areNotificationsEqual);\n      return { notifications };\n    });\n  };\n\n  removeNotificationFromState = (removed: T.Notification) => {\n    this.setState(state => ({\n      notifications: state.notifications.filter(\n        notification => !areNotificationsEqual(notification, removed)\n      )\n    }));\n  };\n\n  addNotification = (added: T.Notification) => {\n    // optimistic update\n    this.addNotificationToState(added);\n\n    // recreate `data` to omit `projectName` and `organization` from `Notification`\n    const data = { channel: added.channel, project: added.project, type: added.type };\n    api.addNotification(data).catch(() => {\n      this.removeNotificationFromState(added);\n    });\n  };\n\n  removeNotification = (removed: T.Notification) => {\n    // optimistic update\n    this.removeNotificationFromState(removed);\n\n    // recreate `data` to omit `projectName` and `organization` from `Notification`\n    const data = { channel: removed.channel, project: removed.project, type: removed.type };\n    api.removeNotification(data).catch(() => {\n      this.addNotificationToState(removed);\n    });\n  };\n\n  getNotificationUpdates = (notifications: T.Notification[]) => {\n    const [globalNotifications, projectNotifications] = partition(notifications, n => !n.project);\n\n    return {\n      globalNotifications,\n      projectNotifications\n    };\n  };\n\n  render() {\n    const { initialProjectNotificationsCount, notifications } = this.state;\n    const { globalNotifications, projectNotifications } = this.getNotificationUpdates(\n      notifications\n    );\n\n    return (\n      <div className=\"account-body account-container\">\n        <Helmet title={translate('my_account.notifications')} />\n        <Alert variant=\"info\">{translate('notification.dispatcher.information')}</Alert>\n        <DeferredSpinner loading={this.state.loading}>\n          {this.state.notifications && (\n            <>\n              <GlobalNotifications\n                addNotification={this.addNotification}\n                channels={this.state.channels}\n                notifications={globalNotifications}\n                removeNotification={this.removeNotification}\n                types={this.state.globalTypes}\n              />\n              <Projects\n                addNotification={this.addNotification}\n                channels={this.state.channels}\n                initialProjectNotificationsCount={initialProjectNotificationsCount}\n                notifications={projectNotifications}\n                removeNotification={this.removeNotification}\n                types={this.state.perProjectTypes}\n              />\n            </>\n          )}\n        </DeferredSpinner>\n      </div>\n    );\n  }\n}\n\nfunction areNotificationsEqual(a: T.Notification, b: T.Notification) {\n  return a.channel === b.channel && a.type === b.type && a.project === b.project;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNotifications(): Promise<{\n  channels: string[];\n  globalTypes: string[];\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}> {\n  return getJSON('/api/notifications/list').catch(throwGlobalError);\n}\n\nexport function addNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/add', data).catch(throwGlobalError);\n}\n\nexport function removeNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/remove', data).catch(throwGlobalError);\n}\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar Modal_1 = require(\"./Modal\");\nvar SimpleModal = (function (_super) {\n    __extends(SimpleModal, _super);\n    function SimpleModal() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.mounted = false;\n        _this.state = { submitting: false };\n        _this.stopSubmitting = function () {\n            if (_this.mounted) {\n                _this.setState({ submitting: false });\n            }\n        };\n        _this.handleCloseClick = function (event) {\n            if (event) {\n                event.preventDefault();\n                event.currentTarget.blur();\n            }\n            _this.props.onClose();\n        };\n        _this.handleFormSubmit = function (event) {\n            event.preventDefault();\n            _this.submit();\n        };\n        _this.handleSubmitClick = function (event) {\n            if (event) {\n                event.preventDefault();\n                event.currentTarget.blur();\n            }\n            _this.submit();\n        };\n        _this.submit = function () {\n            var result = _this.props.onSubmit();\n            if (result) {\n                _this.setState({ submitting: true });\n                result.then(_this.stopSubmitting, _this.stopSubmitting);\n            }\n        };\n        return _this;\n    }\n    SimpleModal.prototype.componentDidMount = function () {\n        this.mounted = true;\n    };\n    SimpleModal.prototype.componentWillUnmount = function () {\n        this.mounted = false;\n    };\n    SimpleModal.prototype.render = function () {\n        var _a = this.props, children = _a.children, header = _a.header, onClose = _a.onClose, onSubmit = _a.onSubmit, modalProps = __rest(_a, [\"children\", \"header\", \"onClose\", \"onSubmit\"]);\n        return (React.createElement(Modal_1.default, __assign({ contentLabel: header, onRequestClose: onClose }, modalProps), children({\n            onCloseClick: this.handleCloseClick,\n            onFormSubmit: this.handleFormSubmit,\n            onSubmitClick: this.handleSubmitClick,\n            submitting: this.state.submitting\n        })));\n    };\n    return SimpleModal;\n}(React.Component));\nexports.default = SimpleModal;\n//# sourceMappingURL=SimpleModal.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar DeferredSpinner_1 = require(\"../ui/DeferredSpinner\");\nrequire(\"./Checkbox.css\");\nvar Checkbox = (function (_super) {\n    __extends(Checkbox, _super);\n    function Checkbox() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleClick = function (event) {\n            event.preventDefault();\n            event.currentTarget.blur();\n            if (!_this.props.disabled) {\n                _this.props.onCheck(!_this.props.checked, _this.props.id);\n            }\n        };\n        return _this;\n    }\n    Checkbox.prototype.render = function () {\n        var _a = this.props, checked = _a.checked, children = _a.children, disabled = _a.disabled, id = _a.id, loading = _a.loading, right = _a.right, thirdState = _a.thirdState, title = _a.title;\n        var className = classNames('icon-checkbox', {\n            'icon-checkbox-checked': checked,\n            'icon-checkbox-single': thirdState,\n            'icon-checkbox-disabled': disabled\n        });\n        if (children) {\n            return (React.createElement(\"a\", { \"aria-checked\": checked, className: classNames('link-checkbox', this.props.className, {\n                    note: disabled,\n                    disabled: disabled\n                }), href: \"#\", id: id, onClick: this.handleClick, role: \"checkbox\", title: title },\n                right && children,\n                React.createElement(DeferredSpinner_1.default, { loading: Boolean(loading) },\n                    React.createElement(\"i\", { className: className })),\n                !right && children));\n        }\n        if (loading) {\n            return React.createElement(DeferredSpinner_1.default, null);\n        }\n        return (React.createElement(\"a\", { \"aria-checked\": checked, className: classNames(className, this.props.className), href: \"#\", id: id, onClick: this.handleClick, role: \"checkbox\", title: title }));\n    };\n    Checkbox.defaultProps = {\n        thirdState: false\n    };\n    return Checkbox;\n}(React.PureComponent));\nexports.default = Checkbox;\n//# sourceMappingURL=Checkbox.js.map","\nvar content = require(\"!!../../../css-loader/dist/cjs.js??ref--6-1!../../../postcss-loader/src/index.js??postcss!./Checkbox.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../css-loader/dist/cjs.js??ref--6-1!../../../postcss-loader/src/index.js??postcss!./Checkbox.css\", function() {\n\t\tvar newContent = require(\"!!../../../css-loader/dist/cjs.js??ref--6-1!../../../postcss-loader/src/index.js??postcss!./Checkbox.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".icon-checkbox{display:inline-block;line-height:1;vertical-align:top;padding:1px 2px;box-sizing:border-box}a.icon-checkbox{border-bottom:none}.icon-checkbox:focus{outline:none}.icon-checkbox:before{content:\\\" \\\";display:inline-block;width:10px;height:10px;border:1px solid #236a97;border-radius:2px;transition:border-color .2s ease,background-color .2s ease,background-image .2s ease,box-shadow .4s ease}.icon-checkbox:not(.icon-checkbox-disabled):focus:before,.link-checkbox:not(.disabled):focus:focus .icon-checkbox:before{box-shadow:0 0 0 3px rgba(35,106,151,.25)}.icon-checkbox-checked:before{background-color:#4b9fd5;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 14 14' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd' clip-rule='evenodd' stroke-linejoin='round' stroke-miterlimit='1.414'%3E%3Cpath d='M12 4.665c0 .172-.06.318-.18.438l-5.55 5.55c-.12.12-.266.18-.438.18s-.318-.06-.438-.18L2.18 7.438C2.06 7.317 2 7.17 2 7s.06-.318.18-.44l.878-.876c.12-.12.267-.18.44-.18.17 0 .317.06.437.18l1.897 1.903 4.233-4.24c.12-.12.266-.18.438-.18s.32.06.44.18l.876.88c.12.12.18.265.18.438z' fill='%23fff' fill-rule='nonzero'/%3E%3C/svg%3E\\\");border-color:#4b9fd5}.icon-checkbox-checked.icon-checkbox-single:before{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 14 14' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd' clip-rule='evenodd' stroke-linejoin='round' stroke-miterlimit='1.414'%3E%3Cpath d='M10 4.698A.697.697 0 0 0 9.302 4H4.698A.697.697 0 0 0 4 4.698v4.604c0 .386.312.698.698.698h4.604A.697.697 0 0 0 10 9.302V4.698z' fill='%23fff'/%3E%3C/svg%3E\\\")}.icon-checkbox-disabled:before{border:1px solid #bbb;cursor:not-allowed}.icon-checkbox-disabled.icon-checkbox-checked:before{background-color:#bbb}.icon-checkbox-invisible{visibility:hidden}.link-checkbox{color:inherit;border-bottom:none}.link-checkbox.disabled,.link-checkbox.disabled:hover,.link-checkbox.disabled label{color:#777;cursor:not-allowed}.link-checkbox:active,.link-checkbox:focus,.link-checkbox:hover{color:inherit}\", \"\"]);\n\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","var createAggregator = require('./_createAggregator');\n\n/**\n * Creates an array of elements split into two groups, the first of which\n * contains elements `predicate` returns truthy for, the second of which\n * contains elements `predicate` returns falsey for. The predicate is\n * invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of grouped elements.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': false },\n *   { 'user': 'fred',    'age': 40, 'active': true },\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\n * ];\n *\n * _.partition(users, function(o) { return o.active; });\n * // => objects for [['fred'], ['barney', 'pebbles']]\n *\n * // The `_.matches` iteratee shorthand.\n * _.partition(users, { 'age': 1, 'active': false });\n * // => objects for [['pebbles'], ['barney', 'fred']]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.partition(users, ['active', false]);\n * // => objects for [['barney', 'pebbles'], ['fred']]\n *\n * // The `_.property` iteratee shorthand.\n * _.partition(users, 'active');\n * // => objects for [['fred'], ['barney', 'pebbles']]\n */\nvar partition = createAggregator(function(result, value, key) {\n  result[key ? 0 : 1].push(value);\n}, function() { return [[], []]; });\n\nmodule.exports = partition;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar ChevronDownIcon_1 = require(\"./ChevronDownIcon\");\nvar ChevronRightIcon_1 = require(\"./ChevronRightIcon\");\nfunction OpenCloseIcon(_a) {\n    var open = _a.open, props = __rest(_a, [\"open\"]);\n    return open ? React.createElement(ChevronDownIcon_1.default, __assign({}, props)) : React.createElement(ChevronRightIcon_1.default, __assign({}, props));\n}\nexports.default = OpenCloseIcon;\n//# sourceMappingURL=OpenCloseIcon.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar Icon_1 = require(\"./Icon\");\nfunction ChevronDownIcon(_a) {\n    var className = _a.className, _b = _a.fill, fill = _b === void 0 ? 'currentColor' : _b, size = _a.size;\n    return (React.createElement(Icon_1.default, { className: className, size: size },\n        React.createElement(\"path\", { d: \"M7.72 11.596L3.119 6.992A.382.382 0 0 1 3 6.713c0-.108.04-.2.118-.279l1.03-1.03a.382.382 0 0 1 .278-.117c.108 0 .201.04.28.117L8 8.7l3.294-3.295a.382.382 0 0 1 .28-.117c.108 0 .2.04.279.117l1.03 1.03a.382.382 0 0 1 .117.28c0 .107-.04.2-.118.278L8.28 11.596a.382.382 0 0 1-.279.117.382.382 0 0 1-.28-.117z\", style: { fill: fill } })));\n}\nexports.default = ChevronDownIcon;\n//# sourceMappingURL=ChevronDownIcon.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar OpenCloseIcon_1 = require(\"../icons/OpenCloseIcon\");\nvar BoxedGroupAccordion = (function (_super) {\n    __extends(BoxedGroupAccordion, _super);\n    function BoxedGroupAccordion() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = { hoveringInner: false };\n        _this.handleClick = function () {\n            _this.props.onClick(_this.props.data);\n        };\n        _this.onDetailEnter = function () {\n            _this.setState({ hoveringInner: true });\n        };\n        _this.onDetailLeave = function () {\n            _this.setState({ hoveringInner: false });\n        };\n        return _this;\n    }\n    BoxedGroupAccordion.prototype.render = function () {\n        var _a = this.props, className = _a.className, open = _a.open, renderHeader = _a.renderHeader, title = _a.title;\n        return (React.createElement(\"div\", { className: classNames('boxed-group boxed-group-accordion', className, {\n                'no-hover': this.state.hoveringInner\n            }) },\n            React.createElement(\"div\", { className: \"boxed-group-header\", onClick: this.handleClick, role: \"listitem\" },\n                React.createElement(\"span\", { className: \"boxed-group-accordion-title\" },\n                    React.createElement(OpenCloseIcon_1.default, { className: \"little-spacer-right\", open: open }),\n                    title),\n                renderHeader && renderHeader()),\n            open && (React.createElement(\"div\", { className: \"boxed-group-inner\", onMouseEnter: this.onDetailEnter, onMouseLeave: this.onDetailLeave }, this.props.children))));\n    };\n    return BoxedGroupAccordion;\n}(React.PureComponent));\nexports.default = BoxedGroupAccordion;\n//# sourceMappingURL=BoxedGroupAccordion.js.map"],"sourceRoot":""}