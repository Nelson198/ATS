{"version":3,"sources":["webpack:///./node_modules/sonar-ui-common/components/controls/BoxedGroupAccordion.js","webpack:///./node_modules/lodash/uniqWith.js","webpack:///./src/main/js/apps/account/notifications/NotificationsList.tsx","webpack:///./src/main/js/apps/account/notifications/SonarCloudNotifications.tsx","webpack:///./src/main/js/apps/account/notifications/GlobalNotifications.tsx","webpack:///./src/main/js/apps/account/notifications/ProjectModal.tsx","webpack:///./src/main/js/apps/account/notifications/ProjectNotifications.tsx","webpack:///./src/main/js/apps/account/notifications/Projects.tsx","webpack:///./src/main/js/apps/account/notifications/Notifications.tsx","webpack:///./src/main/js/api/notifications.ts","webpack:///./node_modules/sonar-ui-common/components/controls/SimpleModal.js","webpack:///./node_modules/sonar-ui-common/components/controls/Checkbox.js","webpack:///./node_modules/sonar-ui-common/components/controls/Checkbox.css?d95d","webpack:///./node_modules/sonar-ui-common/components/controls/Checkbox.css","webpack:///./node_modules/lodash/groupBy.js","webpack:///./node_modules/sonar-ui-common/components/icons/ChevronDownIcon.js","webpack:///./node_modules/lodash/partition.js","webpack:///./node_modules/sonar-ui-common/components/icons/OpenCloseIcon.js"],"names":["extendStatics","__extends","this","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","classNames","__webpack_require__","React","OpenCloseIcon_1","BoxedGroupAccordion","_super","_this","apply","arguments","state","hoveringInner","handleClick","props","onClick","data","onDetailEnter","setState","onDetailLeave","render","_a","className","open","renderHeader","title","createElement","no-hover","role","default","onMouseEnter","onMouseLeave","children","PureComponent","baseUniq","module","array","comparator","undefined","length","NotificationsList","isEnabled","type","channel","notifications","find","notification","handleCheck","checked","onAdd","onRemove","getDispatcherLabel","dispatcher","globalMessageKey","projectMessageKey","concat","project","l10n","channels","checkboxId","types","index_js_exposed","map","key","Checkbox_default","a","id","onCheck","SonarCloudNotifications_SonarCloudNotifications","SonarCloudNotifications","handleCheckOptOut","setCurrentUserSetting","SonarCloudNotifications_extends","notificationsOptOut","mapDispatchToProps","users","notifications_SonarCloudNotifications","es","rootReducer","GlobalNotifications","notifications_NotificationsList","GlobalNotifications_getCheckboxId","addNotification","removeNotification","system","ProjectModal","call","mounted","handleKeyDown","event","keyCode","preventDefault","handleSelectHighlighted","handleHighlightPrevious","handleHighlightNext","getCurrentIndex","highlighted","suggestions","findIndex","suggestion","highlightIndex","index","selectedProject","handleSubmit","handleSelect","handleSearch","query","addedProjects","Promise","resolve","loading","components","then","r","projects","results","domain","q","items","filter","item","projectName","name","onSubmit","debounce_default","ProjectModal_extends","componentDidMount","componentWillUnmount","closeModal","header","SimpleModal_default","onClose","onCloseClick","onFormSubmit","SearchBox_default","autoFocus","onChange","onKeyDown","placeholder","Dropdown","noPadding","classnames","active","buttons","disabled","ProjectNotifications","collapsed","isCollapsed","setCollapsed","BoxedGroupAccordion_default","aria-label","__assign","isNotificationProject","Projects","search","showModal","filterSearch","toLowerCase","includes","handleAddProject","openModal","removed","allProjects","projectToRemove","Projects_extends","initialProjectNotificationsCount","_b","uniqBy_default","notificationsByProject","groupBy_default","n","filteredProjects","sortBy_default","shouldBeCollapsed","data-test","notifications_ProjectModal","Notifications_Notifications","Notifications","globalTypes","perProjectTypes","fetchNotifications","request","catch","throwGlobalError","response","projectNotifications","getNotificationUpdates","addNotificationToState","added","uniqWith_default","areNotificationsEqual","removeNotificationFromState","partition_default","globalNotifications","Notifications_extends","Helmet_default","Alert","variant","DeferredSpinner_default","notifications_Projects","assign","t","s","i","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Modal_1","SimpleModal","submitting","stopSubmitting","handleCloseClick","currentTarget","blur","handleFormSubmit","submit","handleSubmitClick","result","modalProps","contentLabel","onRequestClose","onSubmitClick","Component","DeferredSpinner_1","Checkbox","right","thirdState","icon-checkbox-checked","icon-checkbox-single","icon-checkbox-disabled","aria-checked","note","href","Boolean","defaultProps","content","options","hmr","transform","insertInto","locals","push","baseAssignValue","createAggregator","groupBy","Icon_1","fill","size","style","partition","ChevronDownIcon_1","ChevronRightIcon_1"],"mappings":"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","file":"js/323.1570825310815.chunk.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar OpenCloseIcon_1 = require(\"../icons/OpenCloseIcon\");\nvar BoxedGroupAccordion = (function (_super) {\n    __extends(BoxedGroupAccordion, _super);\n    function BoxedGroupAccordion() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = { hoveringInner: false };\n        _this.handleClick = function () {\n            _this.props.onClick(_this.props.data);\n        };\n        _this.onDetailEnter = function () {\n            _this.setState({ hoveringInner: true });\n        };\n        _this.onDetailLeave = function () {\n            _this.setState({ hoveringInner: false });\n        };\n        return _this;\n    }\n    BoxedGroupAccordion.prototype.render = function () {\n        var _a = this.props, className = _a.className, open = _a.open, renderHeader = _a.renderHeader, title = _a.title;\n        return (React.createElement(\"div\", { className: classNames('boxed-group boxed-group-accordion', className, {\n                'no-hover': this.state.hoveringInner\n            }) },\n            React.createElement(\"div\", { className: \"boxed-group-header\", onClick: this.handleClick, role: \"listitem\" },\n                React.createElement(\"span\", { className: \"boxed-group-accordion-title\" },\n                    React.createElement(OpenCloseIcon_1.default, { className: \"little-spacer-right\", open: open }),\n                    title),\n                renderHeader && renderHeader()),\n            open && (React.createElement(\"div\", { className: \"boxed-group-inner\", onMouseEnter: this.onDetailEnter, onMouseLeave: this.onDetailLeave }, this.props.children))));\n    };\n    return BoxedGroupAccordion;\n}(React.PureComponent));\nexports.default = BoxedGroupAccordion;\n//# sourceMappingURL=BoxedGroupAccordion.js.map","var baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `comparator` which\n * is invoked to compare elements of `array`. The order of result values is\n * determined by the order they occur in the array.The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.uniqWith(objects, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n */\nfunction uniqWith(array, comparator) {\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n}\n\nmodule.exports = uniqWith;\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  onAdd: (n: T.Notification) => void;\n  onRemove: (n: T.Notification) => void;\n  channels: string[];\n  checkboxId: (type: string, channel: string) => string;\n  project?: boolean;\n  types: string[];\n  notifications: T.Notification[];\n}\n\nexport default class NotificationsList extends React.PureComponent<Props> {\n  isEnabled(type: string, channel: string) {\n    return !!this.props.notifications.find(\n      notification => notification.type === type && notification.channel === channel\n    );\n  }\n\n  handleCheck(type: string, channel: string, checked: boolean) {\n    if (checked) {\n      this.props.onAdd({ type, channel });\n    } else {\n      this.props.onRemove({ type, channel });\n    }\n  }\n\n  getDispatcherLabel(dispatcher: string) {\n    const globalMessageKey = ['notification.dispatcher', dispatcher];\n    const projectMessageKey = [...globalMessageKey, 'project'];\n    const shouldUseProjectMessage = this.props.project && hasMessage(...projectMessageKey);\n    return shouldUseProjectMessage\n      ? translate(...projectMessageKey)\n      : translate(...globalMessageKey);\n  }\n\n  render() {\n    const { channels, checkboxId, types } = this.props;\n\n    return (\n      <tbody>\n        {types.map(type => (\n          <tr key={type}>\n            <td>{this.getDispatcherLabel(type)}</td>\n            {channels.map(channel => (\n              <td className=\"text-center\" key={channel}>\n                <Checkbox\n                  checked={this.isEnabled(type, channel)}\n                  id={checkboxId(type, channel)}\n                  onCheck={checked => this.handleCheck(type, channel, checked)}\n                />\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getCurrentUserSetting, Store } from '../../../store/rootReducer';\nimport { setCurrentUserSetting } from '../../../store/users';\n\ninterface Props {\n  notificationsOptOut?: boolean;\n  setCurrentUserSetting: (setting: T.CurrentUserSetting) => void;\n}\n\nexport class SonarCloudNotifications extends React.PureComponent<Props> {\n  handleCheckOptOut = (checked: boolean) => {\n    this.props.setCurrentUserSetting({\n      key: 'notifications.optOut',\n      value: checked ? 'false' : 'true'\n    });\n  };\n\n  render() {\n    return (\n      <section className=\"boxed-group\">\n        <h2>{translate('my_profile.sonarcloud_feature_notifications.title')}</h2>\n        <div className=\"boxed-group-inner\">\n          <table className=\"data zebra\">\n            <thead>\n              <tr>\n                <th />\n                <th className=\"text-center\">\n                  <h4>{translate('activate')}</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{translate('my_profile.sonarcloud_feature_notifications.description')}</td>\n                <td className=\"text-center\">\n                  <Checkbox\n                    checked={!this.props.notificationsOptOut}\n                    onCheck={this.handleCheckOptOut}\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => {\n  const notificationsOptOut = getCurrentUserSetting(state, 'notifications.optOut') === 'true';\n\n  return {\n    notificationsOptOut\n  };\n};\n\nconst mapDispatchToProps = {\n  setCurrentUserSetting\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SonarCloudNotifications);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isSonarCloud } from '../../../helpers/system';\nimport NotificationsList from './NotificationsList';\nimport SonarCloudNotifications from './SonarCloudNotifications';\n\ninterface Props {\n  addNotification: (n: T.Notification) => void;\n  channels: string[];\n  notifications: T.Notification[];\n  removeNotification: (n: T.Notification) => void;\n  types: string[];\n}\n\nexport default function GlobalNotifications(props: Props) {\n  return (\n    <>\n      <section className=\"boxed-group\">\n        <h2>{translate('my_profile.overall_notifications.title')}</h2>\n\n        <div className=\"boxed-group-inner\">\n          <table className=\"data zebra\">\n            <thead>\n              <tr>\n                <th />\n                {props.channels.map(channel => (\n                  <th className=\"text-center\" key={channel}>\n                    <h4>{translate('notification.channel', channel)}</h4>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n\n            <NotificationsList\n              channels={props.channels}\n              checkboxId={getCheckboxId}\n              notifications={props.notifications}\n              onAdd={props.addNotification}\n              onRemove={props.removeNotification}\n              types={props.types}\n            />\n          </table>\n        </div>\n      </section>\n      {isSonarCloud() && <SonarCloudNotifications />}\n    </>\n  );\n}\n\nfunction getCheckboxId(type: string, channel: string) {\n  return `global-notification-${type}-${channel}`;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DropdownOverlay } from 'sonar-ui-common/components/controls/Dropdown';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getSuggestions } from '../../../api/components';\n\ninterface Props {\n  addedProjects: T.NotificationProject[];\n  closeModal: VoidFunction;\n  onSubmit: (project: T.NotificationProject) => void;\n}\n\ninterface State {\n  highlighted?: T.NotificationProject;\n  loading?: boolean;\n  query?: string;\n  open?: boolean;\n  selectedProject?: T.NotificationProject;\n  suggestions?: T.NotificationProject[];\n}\n\nexport default class ProjectModal extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n    this.handleSearch = debounce(this.handleSearch, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleKeyDown = (event: React.KeyboardEvent) => {\n    switch (event.keyCode) {\n      case 13:\n        event.preventDefault();\n        this.handleSelectHighlighted();\n        break;\n      case 38:\n        event.preventDefault();\n        this.handleHighlightPrevious();\n        break;\n      case 40:\n        event.preventDefault();\n        this.handleHighlightNext();\n        break;\n    }\n  };\n\n  getCurrentIndex = () => {\n    const { highlighted, suggestions } = this.state;\n    return highlighted && suggestions\n      ? suggestions.findIndex(suggestion => suggestion.project === highlighted.project)\n      : -1;\n  };\n\n  highlightIndex = (index: number) => {\n    const { suggestions } = this.state;\n    if (suggestions && suggestions.length > 0) {\n      if (index < 0) {\n        index = suggestions.length - 1;\n      } else if (index >= suggestions.length) {\n        index = 0;\n      }\n      this.setState({\n        highlighted: suggestions[index]\n      });\n    }\n  };\n\n  handleHighlightPrevious = () => {\n    this.highlightIndex(this.getCurrentIndex() - 1);\n  };\n\n  handleHighlightNext = () => {\n    this.highlightIndex(this.getCurrentIndex() + 1);\n  };\n\n  handleSelectHighlighted = () => {\n    const { highlighted, selectedProject } = this.state;\n    if (highlighted !== undefined) {\n      if (selectedProject !== undefined && highlighted.project === selectedProject.project) {\n        this.handleSubmit();\n      } else {\n        this.handleSelect(highlighted);\n      }\n    }\n  };\n\n  handleSearch = (query: string) => {\n    const { addedProjects } = this.props;\n\n    if (query.length < 2) {\n      this.setState({ open: false, query });\n      return Promise.resolve([]);\n    }\n\n    this.setState({ loading: true, query });\n    return getSuggestions(query).then(\n      r => {\n        if (this.mounted) {\n          let suggestions = undefined;\n          const projects = r.results.find(domain => domain.q === 'TRK');\n          if (projects && projects.items.length > 0) {\n            suggestions = projects.items\n              .filter(item => !addedProjects.find(p => p.project === item.key))\n              .map(item => ({\n                project: item.key,\n                projectName: item.name\n              }));\n          }\n          this.setState({ loading: false, open: true, suggestions });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false, open: false });\n        }\n      }\n    );\n  };\n\n  handleSelect = (selectedProject: T.NotificationProject) => {\n    this.setState({\n      open: false,\n      query: selectedProject.projectName,\n      selectedProject\n    });\n  };\n\n  handleSubmit = () => {\n    const { selectedProject } = this.state;\n    if (selectedProject) {\n      this.props.onSubmit(selectedProject);\n    }\n  };\n\n  render() {\n    const { closeModal } = this.props;\n    const { highlighted, loading, query, open, selectedProject, suggestions } = this.state;\n    const header = translate('my_account.set_notifications_for.title');\n    return (\n      <SimpleModal header={header} onClose={closeModal} onSubmit={this.handleSubmit}>\n        {({ onCloseClick, onFormSubmit }) => (\n          <form onSubmit={onFormSubmit}>\n            <header className=\"modal-head\">\n              <h2>{header}</h2>\n            </header>\n            <div className=\"modal-body\">\n              <div className=\"modal-field abs-width-400\">\n                <label>{translate('my_account.set_notifications_for')}</label>\n                <SearchBox\n                  autoFocus={true}\n                  onChange={this.handleSearch}\n                  onKeyDown={this.handleKeyDown}\n                  placeholder={translate('search.placeholder')}\n                  value={query}\n                />\n\n                {loading && <i className=\"spinner spacer-left\" />}\n\n                {!loading && open && (\n                  <div className=\"position-relative\">\n                    <DropdownOverlay className=\"abs-width-400\" noPadding={true}>\n                      {suggestions && suggestions.length > 0 ? (\n                        <ul className=\"notifications-add-project-search-results\">\n                          {suggestions.map(suggestion => (\n                            <li\n                              className={classNames({\n                                active: highlighted && highlighted.project === suggestion.project\n                              })}\n                              key={suggestion.project}\n                              onClick={() => this.handleSelect(suggestion)}>\n                              {suggestion.projectName}\n                            </li>\n                          ))}\n                        </ul>\n                      ) : (\n                        <div className=\"notifications-add-project-no-search-results\">\n                          {translate('no_results')}\n                        </div>\n                      )}\n                    </DropdownOverlay>\n                  </div>\n                )}\n              </div>\n            </div>\n            <footer className=\"modal-foot\">\n              <div>\n                <SubmitButton disabled={selectedProject === undefined}>\n                  {translate('add_verb')}\n                </SubmitButton>\n                <ResetButtonLink onClick={onCloseClick}>{translate('cancel')}</ResetButtonLink>\n              </div>\n            </footer>\n          </form>\n        )}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BoxedGroupAccordion from 'sonar-ui-common/components/controls/BoxedGroupAccordion';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport NotificationsList from './NotificationsList';\n\ninterface Props {\n  addNotification: (n: T.Notification) => void;\n  channels: string[];\n  collapsed: boolean;\n  notifications: T.Notification[];\n  project: T.NotificationProject;\n  removeNotification: (n: T.Notification) => void;\n  types: string[];\n}\n\nexport default function ProjectNotifications(props: Props) {\n  const { collapsed, project, channels } = props;\n  const [isCollapsed, setCollapsed] = React.useState<boolean>(collapsed);\n\n  const getCheckboxId = (type: string, channel: string) => {\n    return `project-notification-${props.project.project}-${type}-${channel}`;\n  };\n\n  const handleAddNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.addNotification({ ...props.project, channel, type });\n  };\n\n  const handleRemoveNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.removeNotification({\n      ...props.project,\n      channel,\n      type\n    });\n  };\n\n  const toggleExpanded = () => setCollapsed(!isCollapsed);\n\n  return (\n    <BoxedGroupAccordion\n      onClick={toggleExpanded}\n      open={!isCollapsed}\n      title={<h4 className=\"display-inline-block\">{project.projectName}</h4>}>\n      <table className=\"data zebra notifications-table\" key={project.project}>\n        <thead>\n          <tr>\n            <th aria-label={translate('project')} />\n            {channels.map(channel => (\n              <th className=\"text-center\" key={channel}>\n                <h4>{translate('notification.channel', channel)}</h4>\n              </th>\n            ))}\n          </tr>\n        </thead>\n\n        <NotificationsList\n          channels={props.channels}\n          checkboxId={getCheckboxId}\n          notifications={props.notifications}\n          onAdd={handleAddNotification}\n          onRemove={handleRemoveNotification}\n          project={true}\n          types={props.types}\n        />\n      </table>\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { groupBy, sortBy, uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport ProjectModal from './ProjectModal';\nimport ProjectNotifications from './ProjectNotifications';\n\nexport interface Props {\n  addNotification: (n: T.Notification) => void;\n  channels: string[];\n  initialProjectNotificationsCount: number;\n  notifications: T.Notification[];\n  removeNotification: (n: T.Notification) => void;\n  types: string[];\n}\n\nconst THRESHOLD_COLLAPSED = 3;\n\ninterface State {\n  addedProjects: T.NotificationProject[];\n  search: string;\n  showModal: boolean;\n}\n\nfunction isNotificationProject(project: {\n  project?: string;\n  projectName?: string;\n}): project is T.NotificationProject {\n  return project.project !== undefined && project.projectName !== undefined;\n}\n\nexport default class Projects extends React.PureComponent<Props, State> {\n  state: State = {\n    addedProjects: [],\n    search: '',\n    showModal: false\n  };\n\n  filterSearch = (project: T.NotificationProject, search: string) => {\n    return project.projectName && project.projectName.toLowerCase().includes(search);\n  };\n\n  handleAddProject = (project: T.NotificationProject) => {\n    this.setState(state => {\n      return {\n        addedProjects: [...state.addedProjects, project]\n      };\n    });\n  };\n\n  handleSearch = (search = '') => {\n    this.setState({ search: search.toLowerCase() });\n  };\n\n  handleSubmit = (selectedProject: T.NotificationProject) => {\n    if (selectedProject) {\n      this.handleAddProject(selectedProject);\n    }\n\n    this.closeModal();\n  };\n\n  closeModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  openModal = () => {\n    this.setState({ showModal: true });\n  };\n\n  removeNotification = (removed: T.Notification, allProjects: T.NotificationProject[]) => {\n    const projectToRemove = allProjects.find(p => p.project === removed.project);\n    if (projectToRemove) {\n      this.handleAddProject(projectToRemove);\n    }\n\n    this.props.removeNotification(removed);\n  };\n\n  render() {\n    const { initialProjectNotificationsCount, notifications } = this.props;\n    const { addedProjects, search } = this.state;\n\n    const projects = uniqBy(notifications, project => project.project).filter(\n      isNotificationProject\n    ) as T.NotificationProject[];\n    const notificationsByProject = groupBy(notifications, n => n.project);\n    const allProjects = uniqBy([...addedProjects, ...projects], project => project.project);\n    const filteredProjects = sortBy(allProjects, 'projectName').filter(p =>\n      this.filterSearch(p, search)\n    );\n    const shouldBeCollapsed = initialProjectNotificationsCount > THRESHOLD_COLLAPSED;\n\n    return (\n      <section className=\"boxed-group\" data-test=\"account__project-notifications\">\n        <div className=\"boxed-group-inner\">\n          <div className=\"page-actions\">\n            <Button onClick={this.openModal}>\n              <span data-test=\"account__add-project-notification\">\n                {translate('my_profile.per_project_notifications.add')}\n              </span>\n            </Button>\n          </div>\n\n          <h2>{translate('my_profile.per_project_notifications.title')}</h2>\n        </div>\n\n        {this.state.showModal && (\n          <ProjectModal\n            addedProjects={allProjects}\n            closeModal={this.closeModal}\n            onSubmit={this.handleSubmit}\n          />\n        )}\n\n        <div className=\"boxed-group-inner\">\n          {allProjects.length === 0 && (\n            <div className=\"note\">{translate('my_account.no_project_notifications')}</div>\n          )}\n\n          {allProjects.length > 0 && (\n            <div className=\"big-spacer-bottom\">\n              <SearchBox\n                onChange={this.handleSearch}\n                placeholder={translate('search.search_for_projects')}\n              />\n            </div>\n          )}\n\n          {filteredProjects.map(project => {\n            const collapsed = addedProjects.find(p => p.project === project.project)\n              ? false\n              : shouldBeCollapsed;\n            return (\n              <ProjectNotifications\n                addNotification={this.props.addNotification}\n                channels={this.props.channels}\n                collapsed={collapsed}\n                key={project.project}\n                notifications={notificationsByProject[project.project] || []}\n                project={project}\n                removeNotification={n => this.removeNotification(n, allProjects)}\n                types={this.props.types}\n              />\n            );\n          })}\n        </div>\n      </section>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { partition, uniqWith } from 'lodash';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport * as api from '../../../api/notifications';\nimport GlobalNotifications from './GlobalNotifications';\nimport Projects from './Projects';\n\ninterface State {\n  channels: string[];\n  globalTypes: string[];\n  initialProjectNotificationsCount: number;\n  loading: boolean;\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}\n\nexport default class Notifications extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    channels: [],\n    globalTypes: [],\n    initialProjectNotificationsCount: 0,\n    loading: true,\n    notifications: [],\n    perProjectTypes: []\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchNotifications();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchNotifications = () => {\n    api.getNotifications().then(\n      response => {\n        if (this.mounted) {\n          const { notifications } = response;\n          const { projectNotifications } = this.getNotificationUpdates(notifications);\n\n          this.setState({\n            channels: response.channels,\n            globalTypes: response.globalTypes,\n            initialProjectNotificationsCount: projectNotifications.length,\n            loading: false,\n            notifications: response.notifications,\n            perProjectTypes: response.perProjectTypes\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  addNotificationToState = (added: T.Notification) => {\n    this.setState(state => {\n      const notifications = uniqWith([...state.notifications, added], areNotificationsEqual);\n      return { notifications };\n    });\n  };\n\n  removeNotificationFromState = (removed: T.Notification) => {\n    this.setState(state => ({\n      notifications: state.notifications.filter(\n        notification => !areNotificationsEqual(notification, removed)\n      )\n    }));\n  };\n\n  addNotification = (added: T.Notification) => {\n    // optimistic update\n    this.addNotificationToState(added);\n\n    // recreate `data` to omit `projectName` and `organization` from `Notification`\n    const data = { channel: added.channel, project: added.project, type: added.type };\n    api.addNotification(data).catch(() => {\n      this.removeNotificationFromState(added);\n    });\n  };\n\n  removeNotification = (removed: T.Notification) => {\n    // optimistic update\n    this.removeNotificationFromState(removed);\n\n    // recreate `data` to omit `projectName` and `organization` from `Notification`\n    const data = { channel: removed.channel, project: removed.project, type: removed.type };\n    api.removeNotification(data).catch(() => {\n      this.addNotificationToState(removed);\n    });\n  };\n\n  getNotificationUpdates = (notifications: T.Notification[]) => {\n    const [globalNotifications, projectNotifications] = partition(notifications, n => !n.project);\n\n    return {\n      globalNotifications,\n      projectNotifications\n    };\n  };\n\n  render() {\n    const { initialProjectNotificationsCount, notifications } = this.state;\n    const { globalNotifications, projectNotifications } = this.getNotificationUpdates(\n      notifications\n    );\n\n    return (\n      <div className=\"account-body account-container\">\n        <Helmet title={translate('my_account.notifications')} />\n        <Alert variant=\"info\">{translate('notification.dispatcher.information')}</Alert>\n        <DeferredSpinner loading={this.state.loading}>\n          {this.state.notifications && (\n            <>\n              <GlobalNotifications\n                addNotification={this.addNotification}\n                channels={this.state.channels}\n                notifications={globalNotifications}\n                removeNotification={this.removeNotification}\n                types={this.state.globalTypes}\n              />\n              <Projects\n                addNotification={this.addNotification}\n                channels={this.state.channels}\n                initialProjectNotificationsCount={initialProjectNotificationsCount}\n                notifications={projectNotifications}\n                removeNotification={this.removeNotification}\n                types={this.state.perProjectTypes}\n              />\n            </>\n          )}\n        </DeferredSpinner>\n      </div>\n    );\n  }\n}\n\nfunction areNotificationsEqual(a: T.Notification, b: T.Notification) {\n  return a.channel === b.channel && a.type === b.type && a.project === b.project;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNotifications(): Promise<{\n  channels: string[];\n  globalTypes: string[];\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}> {\n  return getJSON('/api/notifications/list').catch(throwGlobalError);\n}\n\nexport function addNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/add', data).catch(throwGlobalError);\n}\n\nexport function removeNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/remove', data).catch(throwGlobalError);\n}\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar Modal_1 = require(\"./Modal\");\nvar SimpleModal = (function (_super) {\n    __extends(SimpleModal, _super);\n    function SimpleModal() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.mounted = false;\n        _this.state = { submitting: false };\n        _this.stopSubmitting = function () {\n            if (_this.mounted) {\n                _this.setState({ submitting: false });\n            }\n        };\n        _this.handleCloseClick = function (event) {\n            if (event) {\n                event.preventDefault();\n                event.currentTarget.blur();\n            }\n            _this.props.onClose();\n        };\n        _this.handleFormSubmit = function (event) {\n            event.preventDefault();\n            _this.submit();\n        };\n        _this.handleSubmitClick = function (event) {\n            if (event) {\n                event.preventDefault();\n                event.currentTarget.blur();\n            }\n            _this.submit();\n        };\n        _this.submit = function () {\n            var result = _this.props.onSubmit();\n            if (result) {\n                _this.setState({ submitting: true });\n                result.then(_this.stopSubmitting, _this.stopSubmitting);\n            }\n        };\n        return _this;\n    }\n    SimpleModal.prototype.componentDidMount = function () {\n        this.mounted = true;\n    };\n    SimpleModal.prototype.componentWillUnmount = function () {\n        this.mounted = false;\n    };\n    SimpleModal.prototype.render = function () {\n        var _a = this.props, children = _a.children, header = _a.header, onClose = _a.onClose, onSubmit = _a.onSubmit, modalProps = __rest(_a, [\"children\", \"header\", \"onClose\", \"onSubmit\"]);\n        return (React.createElement(Modal_1.default, __assign({ contentLabel: header, onRequestClose: onClose }, modalProps), children({\n            onCloseClick: this.handleCloseClick,\n            onFormSubmit: this.handleFormSubmit,\n            onSubmitClick: this.handleSubmitClick,\n            submitting: this.state.submitting\n        })));\n    };\n    return SimpleModal;\n}(React.Component));\nexports.default = SimpleModal;\n//# sourceMappingURL=SimpleModal.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar DeferredSpinner_1 = require(\"../ui/DeferredSpinner\");\nrequire(\"./Checkbox.css\");\nvar Checkbox = (function (_super) {\n    __extends(Checkbox, _super);\n    function Checkbox() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleClick = function (event) {\n            event.preventDefault();\n            event.currentTarget.blur();\n            if (!_this.props.disabled) {\n                _this.props.onCheck(!_this.props.checked, _this.props.id);\n            }\n        };\n        return _this;\n    }\n    Checkbox.prototype.render = function () {\n        var _a = this.props, checked = _a.checked, children = _a.children, disabled = _a.disabled, id = _a.id, loading = _a.loading, right = _a.right, thirdState = _a.thirdState, title = _a.title;\n        var className = classNames('icon-checkbox', {\n            'icon-checkbox-checked': checked,\n            'icon-checkbox-single': thirdState,\n            'icon-checkbox-disabled': disabled\n        });\n        if (children) {\n            return (React.createElement(\"a\", { \"aria-checked\": checked, className: classNames('link-checkbox', this.props.className, {\n                    note: disabled,\n                    disabled: disabled\n                }), href: \"#\", id: id, onClick: this.handleClick, role: \"checkbox\", title: title },\n                right && children,\n                React.createElement(DeferredSpinner_1.default, { loading: Boolean(loading) },\n                    React.createElement(\"i\", { className: className })),\n                !right && children));\n        }\n        if (loading) {\n            return React.createElement(DeferredSpinner_1.default, null);\n        }\n        return (React.createElement(\"a\", { \"aria-checked\": checked, className: classNames(className, this.props.className), href: \"#\", id: id, onClick: this.handleClick, role: \"checkbox\", title: title }));\n    };\n    Checkbox.defaultProps = {\n        thirdState: false\n    };\n    return Checkbox;\n}(React.PureComponent));\nexports.default = Checkbox;\n//# sourceMappingURL=Checkbox.js.map","\nvar content = require(\"!!../../../css-loader/dist/cjs.js??ref--6-1!../../../postcss-loader/src/index.js??postcss!./Checkbox.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../css-loader/dist/cjs.js??ref--6-1!../../../postcss-loader/src/index.js??postcss!./Checkbox.css\", function() {\n\t\tvar newContent = require(\"!!../../../css-loader/dist/cjs.js??ref--6-1!../../../postcss-loader/src/index.js??postcss!./Checkbox.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".icon-checkbox{display:inline-block;line-height:1;vertical-align:top;padding:1px 2px;box-sizing:border-box}a.icon-checkbox{border-bottom:none}.icon-checkbox:focus{outline:none}.icon-checkbox:before{content:\\\" \\\";display:inline-block;width:10px;height:10px;border:1px solid #236a97;border-radius:2px;transition:border-color .2s ease,background-color .2s ease,background-image .2s ease,box-shadow .4s ease}.icon-checkbox:not(.icon-checkbox-disabled):focus:before,.link-checkbox:not(.disabled):focus:focus .icon-checkbox:before{box-shadow:0 0 0 3px rgba(35,106,151,.25)}.icon-checkbox-checked:before{background-color:#4b9fd5;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 14 14' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd' clip-rule='evenodd' stroke-linejoin='round' stroke-miterlimit='1.414'%3E%3Cpath d='M12 4.665c0 .172-.06.318-.18.438l-5.55 5.55c-.12.12-.266.18-.438.18s-.318-.06-.438-.18L2.18 7.438C2.06 7.317 2 7.17 2 7s.06-.318.18-.44l.878-.876c.12-.12.267-.18.44-.18.17 0 .317.06.437.18l1.897 1.903 4.233-4.24c.12-.12.266-.18.438-.18s.32.06.44.18l.876.88c.12.12.18.265.18.438z' fill='%23fff' fill-rule='nonzero'/%3E%3C/svg%3E\\\");border-color:#4b9fd5}.icon-checkbox-checked.icon-checkbox-single:before{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 14 14' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd' clip-rule='evenodd' stroke-linejoin='round' stroke-miterlimit='1.414'%3E%3Cpath d='M10 4.698A.697.697 0 0 0 9.302 4H4.698A.697.697 0 0 0 4 4.698v4.604c0 .386.312.698.698.698h4.604A.697.697 0 0 0 10 9.302V4.698z' fill='%23fff'/%3E%3C/svg%3E\\\")}.icon-checkbox-disabled:before{border:1px solid #bbb;cursor:not-allowed}.icon-checkbox-disabled.icon-checkbox-checked:before{background-color:#bbb}.icon-checkbox-invisible{visibility:hidden}.link-checkbox{color:inherit;border-bottom:none}.link-checkbox.disabled,.link-checkbox.disabled:hover,.link-checkbox.disabled label{color:#777;cursor:not-allowed}.link-checkbox:active,.link-checkbox:focus,.link-checkbox:hover{color:inherit}\", \"\"]);\n\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar Icon_1 = require(\"./Icon\");\nfunction ChevronDownIcon(_a) {\n    var className = _a.className, _b = _a.fill, fill = _b === void 0 ? 'currentColor' : _b, size = _a.size;\n    return (React.createElement(Icon_1.default, { className: className, size: size },\n        React.createElement(\"path\", { d: \"M7.72 11.596L3.119 6.992A.382.382 0 0 1 3 6.713c0-.108.04-.2.118-.279l1.03-1.03a.382.382 0 0 1 .278-.117c.108 0 .201.04.28.117L8 8.7l3.294-3.295a.382.382 0 0 1 .28-.117c.108 0 .2.04.279.117l1.03 1.03a.382.382 0 0 1 .117.28c0 .107-.04.2-.118.278L8.28 11.596a.382.382 0 0 1-.279.117.382.382 0 0 1-.28-.117z\", style: { fill: fill } })));\n}\nexports.default = ChevronDownIcon;\n//# sourceMappingURL=ChevronDownIcon.js.map","var createAggregator = require('./_createAggregator');\n\n/**\n * Creates an array of elements split into two groups, the first of which\n * contains elements `predicate` returns truthy for, the second of which\n * contains elements `predicate` returns falsey for. The predicate is\n * invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of grouped elements.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': false },\n *   { 'user': 'fred',    'age': 40, 'active': true },\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\n * ];\n *\n * _.partition(users, function(o) { return o.active; });\n * // => objects for [['fred'], ['barney', 'pebbles']]\n *\n * // The `_.matches` iteratee shorthand.\n * _.partition(users, { 'age': 1, 'active': false });\n * // => objects for [['pebbles'], ['barney', 'fred']]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.partition(users, ['active', false]);\n * // => objects for [['barney', 'pebbles'], ['fred']]\n *\n * // The `_.property` iteratee shorthand.\n * _.partition(users, 'active');\n * // => objects for [['fred'], ['barney', 'pebbles']]\n */\nvar partition = createAggregator(function(result, value, key) {\n  result[key ? 0 : 1].push(value);\n}, function() { return [[], []]; });\n\nmodule.exports = partition;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar ChevronDownIcon_1 = require(\"./ChevronDownIcon\");\nvar ChevronRightIcon_1 = require(\"./ChevronRightIcon\");\nfunction OpenCloseIcon(_a) {\n    var open = _a.open, props = __rest(_a, [\"open\"]);\n    return open ? React.createElement(ChevronDownIcon_1.default, __assign({}, props)) : React.createElement(ChevronRightIcon_1.default, __assign({}, props));\n}\nexports.default = OpenCloseIcon;\n//# sourceMappingURL=OpenCloseIcon.js.map"],"sourceRoot":""}