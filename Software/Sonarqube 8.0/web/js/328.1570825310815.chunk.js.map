{"version":3,"sources":["webpack:///./src/main/js/apps/quality-profiles/components/ProfileLink.tsx","webpack:///../sonar-docs/src/tooltips/quality-profiles/built-in-quality-profile.md","webpack:///../sonar-docs/src/tooltips/quality-profiles/activate-rules-in-built-in-profile.md","webpack:///./src/main/js/apps/quality-profiles/details/ProfileExporters.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ChangeParentForm.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileInheritanceBox.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileInheritance.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissionsFormSelect.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissionsForm.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissionsGroup.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissionsUser.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissions.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ChangeProjectsForm.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileProjects.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRulesDeprecatedWarning.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRulesRowOfType.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRulesRowTotal.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRulesSonarWayComparison.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRules.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileDetails.tsx","webpack:///./src/main/js/components/docs/DocTooltip.tsx","webpack:///./src/main/js/api/quality-profiles.ts","webpack:///./src/main/js/helpers/markdown.js","webpack:///./src/main/js/api/rules.ts","webpack:///./src/main/js/apps/quality-profiles/components/BuiltInQualityProfileBadge.tsx"],"names":["ProfileLink","_a","name","language","organization","children","other","__rest","react__WEBPACK_IMPORTED_MODULE_0__","react_router__WEBPACK_IMPORTED_MODULE_1__","__assign","activeClassName","to","Object","_utils__WEBPACK_IMPORTED_MODULE_2__","__webpack_require__","r","__webpack_exports__","_super","ProfileExporters","__extends","prototype","getExportUrl","exporter","this","props","profile","parameters","exporterKey","key","qualityProfile","assign","window","baseUrl","querystring_es3","render","_this","exporters","exportersForLanguage","filter","e","languages","includes","length","index_js_exposed","className","l10n","map","index","undefined","data-key","href","target","ChangeParentForm","apply","arguments","mounted","state","loading","selected","handleSelectChange","option","setState","value","handleFormSubmit","event","preventDefault","parent","quality_profiles","then","onChange","catch","ChangeParentForm_extends","componentDidMount","componentWillUnmount","profiles","options","label","sortBy_default","isBuiltIn","submitDisabled","parentKey","Modal_default","a","contentLabel","onRequestClose","onClose","size","id","onSubmit","htmlFor","Select_default","clearable","buttons","disabled","onClick","ProfileInheritanceBox","depth","extendsBuiltIn","displayLink","_b","type","offset","data-test","style","paddingLeft","BuiltInQualityProfileBadge","HelpTooltip_default","overlay","activeRuleCount","overridingRuleCount","ProfileInheritance","formOpen","handleChangeParentClick","closeForm","handleParentChange","updateProfiles","loadData","ProfileInheritance_extends","componentDidUpdate","prevProps","ancestors","reverse","highlightCurrent","some","actions","edit","ancestor","classnames","child","details_ChangeParentForm","p","ProfilePermissionsFormSelect","call","handleSearch","query","onSearch","searchResults","handleInputChange","debounce_default","ProfilePermissionsFormSelect_extends","noResultsText","getStringValue","autoFocus","filterOptions","identity_default","isLoading","onInputChange","optionRenderer","placeholder","searchable","valueRenderer","isUser","login","Avatar","hash","avatar","GroupIcon_default","ProfilePermissionsForm","submitting","stopSubmitting","handleUserAdd","user","onUserAdd","handleGroupAdd","group","onGroupAdd","q","Promise","all","usersResponse","groupsResponse","users","concat","groups","handleValueChange","ProfilePermissionsForm_extends","header","details_ProfilePermissionsFormSelect","ProfilePermissionsGroup","deleteModal","handleDeleteClick","handleDeleteModalClose","handleDelete","onDelete","renderDeleteModal","index_es","defaultMessage","values","onSubmitClick","onCloseClick","ProfilePermissionsGroup_extends","lineHeight","SimpleModal_default","ProfilePermissionsUser","ProfilePermissionsUser_extends","ProfilePermissions","addUserForm","handleAddUserButtonClick","handleAddUserFormClose","addedUser","uniqBy_default","handleUserDelete","removedUser","addedGroup","handleGroupDelete","removedGroup","ProfilePermissions_extends","fetchUsersAndGroups","details_ProfilePermissionsUser","details_ProfilePermissionsGroup","details_ProfilePermissionsForm","ChangeProjectsForm","fetchProjects","searchParams","page","ps","pageSize","data","prevState","more","projects","results","newSeletedProjects","project","selectedProjects","lastSearchParams","needToReload","projectsTotalCount","paging","total","handleSelect","handleUnselect","without_default","handleCloseClick","renderElement","find_default","ChangeProjectsForm_extends","SelectList_default","allowBulkSelection","elements","elementsTotalCount","labelAll","labelSelected","labelUnselected","SelectList","All","onSelect","onUnselect","selectedElements","withPaging","ProfileProjects","loadingMore","stopLoading","loadMore","handleChangeClick","loadProjects","ProfileProjects_extends","isDefault","renderDefault","renderProjects","es","pathname","QualifierIcon_default","qualifier","ListFooter_default","count","ready","associateProjects","details_ChangeProjectsForm","ProfileRulesDeprecatedWarning","urls","qprofile","activeDeprecatedRules","ProfileRulesRowOfType","activeRulesUrl","activation","types","inactiveRulesUrl","inactiveCount","IssueTypeIcon_default","measures","ProfileRulesRowTotal","ProfileRulesSonarWayComparison","url","compareToProfile","sonarway","sonarWayMissingRules","TYPES","ProfileRules","activatedTotal","activatedByType","keyBy_default","t","val","allByType","compareToSonarWay","ProfileRules_extends","loadRules","loadProfile","resolve","loadAllRules","rules","facets","loadActivatedRules","responses","allRules","activatedRules","showProfile","getRulesCountForType","getRulesTotalForType","activateMoreUrl","copy","DocTooltip","doc","bind","activeDeprecatedRuleCount","missingRuleCount","ProfileDetails","details_ProfileRules","details_ProfileExporters","details_ProfilePermissions","details_ProfileInheritance","details_ProfileProjects","d","DocMarkdownBlock","sonar_ui_common_components_lazyLoad__WEBPACK_IMPORTED_MODULE_2__","open","close","content","default","document","addEventListener","removeEventListener","sonar_ui_common_components_controls_HelpTooltip__WEBPACK_IMPORTED_MODULE_1___default","childProps","overlayProps","_helpers_markdown__WEBPACK_IMPORTED_MODULE_3__","isTooltip","searchQualityProfiles","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_2__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_3__","getQualityProfile","createQualityProfile","restoreQualityProfile","getProfileProjects","getProfileInheritance","profileKey","setDefaultProfile","renameProfile","copyProfile","fromKey","toName","deleteProfile","changeProfileParent","getImporters","importers","getExporters","getProfileChangelog","compareProfiles","leftKey","rightKey","associateProject","dissociateProject","searchUsers","searchGroups","addUser","removeUser","addGroup","removeGroup","bulkActivateRules","bulkDeactivateRules","activateRule","params","lodash_map__WEBPACK_IMPORTED_MODULE_0___default","sonar_ui_common_helpers_csv__WEBPACK_IMPORTED_MODULE_1__","join","deactivateRule","getFrontMatterPosition","lines","firstLine","lastLine","i","trim","parseFrontMatter","tokens","split","x","cutConditionalContent","tag","beginning","ending","newContent","start","indexOf","end","substring","module","exports","getFrontMatter","position","slice","separateFrontMatter","frontmatter","content_1","filterContent","regexBase","isSonarCloud","getInstance","contentWithoutStatic","replace","RegExp","getRulesApp","searchRules","takeFacet","getRuleDetails","getRuleTags","createRule","deleteRule","updateRule","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","response","property","facet","find","tags","rule","status","reject","classnames__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__","_components_docs_DocTooltip__WEBPACK_IMPORTED_MODULE_3__","tooltip","badge"],"mappings":"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","file":"js/328.1570825310815.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { getProfilePath } from '../utils';\n\ninterface Props {\n  className?: string;\n  children?: React.ReactElement<any> | string;\n  language: string;\n  name: string;\n  organization: string | null;\n}\n\nexport default function ProfileLink({ name, language, organization, children, ...other }: Props) {\n  return (\n    <Link\n      activeClassName=\"link-no-underline\"\n      to={getProfilePath(name, language, organization)}\n      {...other}>\n      {children}\n    </Link>\n  );\n}\n","export default \"Built-in profiles are provided directly by the language analyzers and may be updated with each new analyzer version. They represent best-practice, minimum rule sets.\\n\"","export default \"This Quality Profile is built in, and cannot be updated manually. If you want to activate more rules, create a new profile that inherits from this one and add rules there.\\n\"","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { stringify } from 'querystring';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Exporter, Profile } from '../types';\n\ninterface Props {\n  exporters: Exporter[];\n  organization: string | null;\n  profile: Profile;\n}\n\nexport default class ProfileExporters extends React.PureComponent<Props> {\n  getExportUrl(exporter: Exporter) {\n    const { organization, profile } = this.props;\n\n    const path = '/api/qualityprofiles/export';\n    const parameters = {\n      exporterKey: exporter.key,\n      language: profile.language,\n      qualityProfile: profile.name\n    };\n    if (organization) {\n      Object.assign(parameters, { organization });\n    }\n    return (window as any).baseUrl + path + '?' + stringify(parameters);\n  }\n\n  render() {\n    const { exporters, profile } = this.props;\n    const exportersForLanguage = exporters.filter(e => e.languages.includes(profile.language));\n\n    if (exportersForLanguage.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"boxed-group quality-profile-exporters\">\n        <h2>{translate('quality_profiles.exporters')}</h2>\n        <div className=\"boxed-group-inner\">\n          <ul>\n            {exportersForLanguage.map((exporter, index) => (\n              <li\n                className={index > 0 ? 'spacer-top' : undefined}\n                data-key={exporter.key}\n                key={exporter.key}>\n                <a href={this.getExportUrl(exporter)} target=\"_blank\">\n                  {exporter.name}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { changeProfileParent } from '../../../api/quality-profiles';\nimport { Profile } from '../types';\n\ninterface Props {\n  onChange: () => void;\n  onClose: () => void;\n  profile: Profile;\n  profiles: Profile[];\n}\n\ninterface State {\n  loading: boolean;\n  selected: string | null;\n}\n\nexport default class ChangeParentForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    loading: false,\n    selected: null\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSelectChange = (option: { value: string }) => {\n    this.setState({ selected: option.value });\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const parent = this.state.selected;\n\n    if (parent != null) {\n      this.setState({ loading: true });\n      changeProfileParent(this.props.profile.key, parent)\n        .then(this.props.onChange)\n        .catch(() => {\n          if (this.mounted) {\n            this.setState({ loading: false });\n          }\n        });\n    }\n  };\n\n  render() {\n    const { profiles } = this.props;\n\n    const options = [\n      { label: translate('none'), value: '' },\n      ...sortBy(profiles, 'name').map(profile => ({\n        label: profile.isBuiltIn\n          ? `${profile.name} (${translate('quality_profiles.built_in')})`\n          : profile.name,\n        value: profile.key\n      }))\n    ];\n\n    const submitDisabled =\n      this.state.loading ||\n      this.state.selected == null ||\n      this.state.selected === this.props.profile.parentKey;\n\n    return (\n      <Modal\n        contentLabel={translate('quality_profiles.change_parent')}\n        onRequestClose={this.props.onClose}\n        size=\"small\">\n        <form id=\"change-profile-parent-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{translate('quality_profiles.change_parent')}</h2>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"modal-field\">\n              <label htmlFor=\"change-profile-parent\">\n                {translate('quality_profiles.parent')} <em className=\"mandatory\">*</em>\n              </label>\n              <Select\n                clearable={false}\n                id=\"change-profile-parent\"\n                name=\"parentKey\"\n                onChange={this.handleSelectChange}\n                options={options}\n                value={\n                  this.state.selected != null\n                    ? this.state.selected\n                    : this.props.profile.parentKey || ''\n                }\n              />\n            </div>\n          </div>\n          <div className=\"modal-foot\">\n            {this.state.loading && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={submitDisabled} id=\"change-profile-parent-submit\">\n              {translate('change_verb')}\n            </SubmitButton>\n            <ResetButtonLink id=\"change-profile-parent-cancel\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport BuiltInQualityProfileBadge from '../components/BuiltInQualityProfileBadge';\nimport ProfileLink from '../components/ProfileLink';\n\ninterface Props {\n  className?: string;\n  depth: number;\n  displayLink?: boolean;\n  extendsBuiltIn?: boolean;\n  language: string;\n  organization: string | null;\n  profile: T.ProfileInheritanceDetails;\n  type?: string;\n}\n\nexport default function ProfileInheritanceBox(props: Props) {\n  const {\n    className,\n    depth,\n    extendsBuiltIn,\n    language,\n    organization,\n    profile,\n    displayLink = true,\n    type = 'current'\n  } = props;\n  const offset = 25 * depth;\n\n  return (\n    <tr className={className} data-test={`quality-profiles__inheritance-${type}`}>\n      <td>\n        <div style={{ paddingLeft: offset }}>\n          {displayLink ? (\n            <ProfileLink\n              className=\"text-middle\"\n              language={language}\n              name={profile.name}\n              organization={organization}>\n              {profile.name}\n            </ProfileLink>\n          ) : (\n            <span className=\"text-middle\">{profile.name}</span>\n          )}\n          {profile.isBuiltIn && <BuiltInQualityProfileBadge className=\"spacer-left\" />}\n          {extendsBuiltIn && (\n            <HelpTooltip\n              className=\"spacer-left\"\n              overlay={translate('quality_profiles.extends_built_in')}\n            />\n          )}\n        </div>\n      </td>\n\n      <td>{translateWithParameters('quality_profile.x_active_rules', profile.activeRuleCount)}</td>\n\n      <td>\n        {profile.overridingRuleCount != null && (\n          <p>\n            {translateWithParameters(\n              'quality_profiles.x_overridden_rules',\n              profile.overridingRuleCount\n            )}\n          </p>\n        )}\n      </td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getProfileInheritance } from '../../../api/quality-profiles';\nimport { Profile } from '../types';\nimport ChangeParentForm from './ChangeParentForm';\nimport ProfileInheritanceBox from './ProfileInheritanceBox';\n\ninterface Props {\n  organization: string | null;\n  profile: Profile;\n  profiles: Profile[];\n  updateProfiles: () => Promise<void>;\n}\n\ninterface State {\n  ancestors?: T.ProfileInheritanceDetails[];\n  children?: T.ProfileInheritanceDetails[];\n  formOpen: boolean;\n  loading: boolean;\n  profile?: T.ProfileInheritanceDetails;\n}\n\nexport default class ProfileInheritance extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  state: State = {\n    formOpen: false,\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.profile.key !== this.props.profile.key) {\n      this.loadData();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadData() {\n    getProfileInheritance(this.props.profile.key).then(\n      r => {\n        if (this.mounted) {\n          const { ancestors, children } = r;\n          ancestors.reverse();\n\n          this.setState({\n            children,\n            ancestors,\n            profile: r.profile,\n            loading: false\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleChangeParentClick = () => {\n    this.setState({ formOpen: true });\n  };\n\n  closeForm = () => {\n    this.setState({ formOpen: false });\n  };\n\n  handleParentChange = () => {\n    this.props.updateProfiles().then(\n      () => {\n        this.loadData();\n      },\n      () => {}\n    );\n    this.closeForm();\n  };\n\n  render() {\n    const { profile, profiles } = this.props;\n    const { ancestors } = this.state;\n\n    const highlightCurrent =\n      !this.state.loading &&\n      ancestors != null &&\n      this.state.children != null &&\n      (ancestors.length > 0 || this.state.children.length > 0);\n\n    const extendsBuiltIn = ancestors != null && ancestors.some(profile => profile.isBuiltIn);\n\n    return (\n      <div className=\"boxed-group quality-profile-inheritance\">\n        {profile.actions && profile.actions.edit && !profile.isBuiltIn && (\n          <div className=\"boxed-group-actions\">\n            <Button className=\"pull-right js-change-parent\" onClick={this.handleChangeParentClick}>\n              {translate('quality_profiles.change_parent')}\n            </Button>\n          </div>\n        )}\n\n        <header className=\"boxed-group-header\">\n          <h2>{translate('quality_profiles.profile_inheritance')}</h2>\n        </header>\n\n        <div className=\"boxed-group-inner\">\n          {this.state.loading ? (\n            <i className=\"spinner\" />\n          ) : (\n            <table className=\"data zebra\">\n              <tbody>\n                {ancestors != null &&\n                  ancestors.map((ancestor, index) => (\n                    <ProfileInheritanceBox\n                      depth={index}\n                      key={ancestor.key}\n                      language={profile.language}\n                      organization={this.props.organization}\n                      profile={ancestor}\n                      type=\"ancestor\"\n                    />\n                  ))}\n\n                {this.state.profile != null && (\n                  <ProfileInheritanceBox\n                    className={classNames({\n                      selected: highlightCurrent\n                    })}\n                    depth={ancestors ? ancestors.length : 0}\n                    displayLink={false}\n                    extendsBuiltIn={extendsBuiltIn}\n                    language={profile.language}\n                    organization={this.props.organization}\n                    profile={this.state.profile}\n                  />\n                )}\n\n                {this.state.children != null &&\n                  this.state.children.map(child => (\n                    <ProfileInheritanceBox\n                      depth={ancestors ? ancestors.length + 1 : 0}\n                      key={child.key}\n                      language={profile.language}\n                      organization={this.props.organization}\n                      profile={child}\n                      type=\"child\"\n                    />\n                  ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n\n        {this.state.formOpen && (\n          <ChangeParentForm\n            onChange={this.handleParentChange}\n            onClose={this.closeForm}\n            profile={profile}\n            profiles={profiles.filter(p => p !== profile && p.language === profile.language)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce, identity } from 'lodash';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport GroupIcon from 'sonar-ui-common/components/icons/GroupIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport Avatar from '../../../components/ui/Avatar';\nimport { Group } from './ProfilePermissions';\n\ntype Option = T.UserSelected | Group;\ntype OptionWithValue = Option & { value: string };\n\ninterface Props {\n  onChange: (option: OptionWithValue) => void;\n  onSearch: (query: string) => Promise<Option[]>;\n  selected?: Option;\n}\n\ninterface State {\n  loading: boolean;\n  query: string;\n  searchResults: Option[];\n}\n\nexport default class ProfilePermissionsFormSelect extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.handleSearch = debounce(this.handleSearch, 250);\n    this.state = { loading: false, query: '', searchResults: [] };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.handleSearch(this.state.query);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSearch = (query: string) => {\n    this.setState({ loading: true });\n    this.props.onSearch(query).then(\n      searchResults => {\n        if (this.mounted) {\n          this.setState({ loading: false, searchResults });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  handleInputChange = (query: string) => {\n    this.setState({ query });\n    if (query.length > 1) {\n      this.handleSearch(query);\n    }\n  };\n\n  render() {\n    const noResultsText =\n      this.state.query.length === 1\n        ? translateWithParameters('select2.tooShort', 2)\n        : translate('no_results');\n\n    // create a uniq string both for users and groups\n    const options = this.state.searchResults.map(r => ({ ...r, value: getStringValue(r) }));\n\n    return (\n      <Select\n        autoFocus={true}\n        className=\"Select-big\"\n        clearable={false}\n        // disable default react-select filtering\n        filterOptions={identity}\n        isLoading={this.state.loading}\n        noResultsText={noResultsText}\n        onChange={this.props.onChange}\n        onInputChange={this.handleInputChange}\n        optionRenderer={optionRenderer}\n        options={options}\n        placeholder=\"\"\n        searchable={true}\n        value={this.props.selected && getStringValue(this.props.selected)}\n        valueRenderer={optionRenderer}\n      />\n    );\n  }\n}\n\nfunction isUser(option: Option): option is T.UserSelected {\n  return (option as T.UserSelected).login !== undefined;\n}\n\nfunction getStringValue(option: Option) {\n  return isUser(option) ? `user:${option.login}` : `group:${option.name}`;\n}\n\nfunction optionRenderer(option: OptionWithValue) {\n  return isUser(option) ? (\n    <>\n      <Avatar hash={option.avatar} name={option.name} size={16} />\n      <strong className=\"spacer-left\">{option.name}</strong>\n      <span className=\"note little-spacer-left\">{option.login}</span>\n    </>\n  ) : (\n    <>\n      <GroupIcon size={16} />\n      <strong className=\"spacer-left\">{option.name}</strong>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  addGroup,\n  addUser,\n  searchGroups,\n  searchUsers,\n  SearchUsersGroupsParameters\n} from '../../../api/quality-profiles';\nimport { Group } from './ProfilePermissions';\nimport ProfilePermissionsFormSelect from './ProfilePermissionsFormSelect';\n\ninterface Props {\n  onClose: () => void;\n  onGroupAdd: (group: Group) => void;\n  onUserAdd: (user: T.UserSelected) => void;\n  organization?: string;\n  profile: { language: string; name: string };\n}\n\ninterface State {\n  selected?: T.UserSelected | Group;\n  submitting: boolean;\n}\n\nexport default class ProfilePermissionsForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleUserAdd = (user: T.UserSelected) =>\n    addUser({\n      language: this.props.profile.language,\n      login: user.login,\n      organization: this.props.organization,\n      qualityProfile: this.props.profile.name\n    }).then(() => this.props.onUserAdd(user), this.stopSubmitting);\n\n  handleGroupAdd = (group: Group) =>\n    addGroup({\n      group: group.name,\n      language: this.props.profile.language,\n      organization: this.props.organization,\n      qualityProfile: this.props.profile.name\n    }).then(() => this.props.onGroupAdd(group), this.stopSubmitting);\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { selected } = this.state;\n    if (selected) {\n      this.setState({ submitting: true });\n      if ((selected as T.UserSelected).login !== undefined) {\n        this.handleUserAdd(selected as T.UserSelected);\n      } else {\n        this.handleGroupAdd(selected as Group);\n      }\n    }\n  };\n\n  handleSearch = (q: string) => {\n    const { organization, profile } = this.props;\n    const parameters: SearchUsersGroupsParameters = {\n      language: profile.language,\n      organization,\n      q,\n      qualityProfile: profile.name,\n      selected: 'deselected'\n    };\n    return Promise.all([searchUsers(parameters), searchGroups(parameters)]).then(\n      ([usersResponse, groupsResponse]) => [...usersResponse.users, ...groupsResponse.groups]\n    );\n  };\n\n  handleValueChange = (selected: T.UserSelected | Group) => {\n    this.setState({ selected });\n  };\n\n  render() {\n    const header = translate('quality_profiles.grant_permissions_to_user_or_group');\n    const submitDisabled = !this.state.selected || this.state.submitting;\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-body\">\n            <div className=\"modal-field\">\n              <label>{translate('quality_profiles.search_description')}</label>\n              <ProfilePermissionsFormSelect\n                onChange={this.handleValueChange}\n                onSearch={this.handleSearch}\n                selected={this.state.selected}\n              />\n            </div>\n          </div>\n          <footer className=\"modal-foot\">\n            {this.state.submitting && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={submitDisabled}>{translate('add_verb')}</SubmitButton>\n            <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button, DeleteButton, ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal, { ChildrenProps } from 'sonar-ui-common/components/controls/SimpleModal';\nimport GroupIcon from 'sonar-ui-common/components/icons/GroupIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { removeGroup } from '../../../api/quality-profiles';\nimport { Group } from './ProfilePermissions';\n\ninterface Props {\n  group: Group;\n  onDelete: (group: Group) => void;\n  organization?: string;\n  profile: { language: string; name: string };\n}\n\ninterface State {\n  deleteModal: boolean;\n}\n\nexport default class ProfilePermissionsGroup extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { deleteModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleDeleteClick = () => {\n    this.setState({ deleteModal: true });\n  };\n\n  handleDeleteModalClose = () => {\n    if (this.mounted) {\n      this.setState({ deleteModal: false });\n    }\n  };\n\n  handleDelete = () => {\n    const { group, organization, profile } = this.props;\n\n    return removeGroup({\n      group: group.name,\n      language: profile.language,\n      organization,\n      qualityProfile: profile.name\n    }).then(() => {\n      this.handleDeleteModalClose();\n      this.props.onDelete(group);\n    });\n  };\n\n  renderDeleteModal = (props: ChildrenProps) => (\n    <div>\n      <header className=\"modal-head\">\n        <h2>{translate('groups.remove')}</h2>\n      </header>\n\n      <div className=\"modal-body\">\n        <FormattedMessage\n          defaultMessage={translate('groups.remove.confirmation')}\n          id=\"groups.remove.confirmation\"\n          values={{\n            user: <strong>{this.props.group.name}</strong>\n          }}\n        />\n      </div>\n\n      <footer className=\"modal-foot\">\n        {props.submitting && <i className=\"spinner spacer-right\" />}\n        <Button className=\"button-red\" disabled={props.submitting} onClick={props.onSubmitClick}>\n          {translate('remove')}\n        </Button>\n        <ResetButtonLink onClick={props.onCloseClick}>{translate('cancel')}</ResetButtonLink>\n      </footer>\n    </div>\n  );\n\n  render() {\n    const { group } = this.props;\n\n    return (\n      <div className=\"clearfix big-spacer-bottom\">\n        <DeleteButton\n          className=\"pull-right spacer-top spacer-left spacer-right button-small\"\n          onClick={this.handleDeleteClick}\n        />\n        <GroupIcon className=\"pull-left spacer-right\" size={32} />\n        <div className=\"overflow-hidden\" style={{ lineHeight: '32px' }}>\n          <strong>{group.name}</strong>\n        </div>\n\n        {this.state.deleteModal && (\n          <SimpleModal\n            header={translate('group.remove')}\n            onClose={this.handleDeleteModalClose}\n            onSubmit={this.handleDelete}>\n            {this.renderDeleteModal}\n          </SimpleModal>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  DeleteButton,\n  ResetButtonLink,\n  SubmitButton\n} from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal, { ChildrenProps } from 'sonar-ui-common/components/controls/SimpleModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { removeUser } from '../../../api/quality-profiles';\nimport Avatar from '../../../components/ui/Avatar';\n\ninterface Props {\n  onDelete: (user: T.UserSelected) => void;\n  organization?: string;\n  profile: { language: string; name: string };\n  user: T.UserSelected;\n}\n\ninterface State {\n  deleteModal: boolean;\n}\n\nexport default class ProfilePermissionsUser extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { deleteModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleDeleteClick = () => {\n    this.setState({ deleteModal: true });\n  };\n\n  handleDeleteModalClose = () => {\n    if (this.mounted) {\n      this.setState({ deleteModal: false });\n    }\n  };\n\n  handleDelete = () => {\n    const { organization, profile, user } = this.props;\n\n    return removeUser({\n      language: profile.language,\n      login: user.login,\n      organization,\n      qualityProfile: profile.name\n    }).then(() => {\n      this.handleDeleteModalClose();\n      this.props.onDelete(user);\n    });\n  };\n\n  renderDeleteModal = (props: ChildrenProps) => (\n    <div>\n      <header className=\"modal-head\">\n        <h2>{translate('users.remove')}</h2>\n      </header>\n\n      <div className=\"modal-body\">\n        <FormattedMessage\n          defaultMessage={translate('users.remove.confirmation')}\n          id=\"users.remove.confirmation\"\n          values={{\n            user: <strong>{this.props.user.name}</strong>\n          }}\n        />\n      </div>\n\n      <footer className=\"modal-foot\">\n        {props.submitting && <i className=\"spinner spacer-right\" />}\n        <SubmitButton\n          className=\"button-red\"\n          disabled={props.submitting}\n          onClick={props.onSubmitClick}>\n          {translate('remove')}\n        </SubmitButton>\n        <ResetButtonLink onClick={props.onCloseClick}>{translate('cancel')}</ResetButtonLink>\n      </footer>\n    </div>\n  );\n\n  render() {\n    const { user } = this.props;\n\n    return (\n      <div className=\"clearfix big-spacer-bottom\">\n        <DeleteButton\n          className=\"pull-right spacer-top spacer-left spacer-right button-small\"\n          onClick={this.handleDeleteClick}\n        />\n        <Avatar className=\"pull-left spacer-right\" hash={user.avatar} name={user.name} size={32} />\n        <div className=\"overflow-hidden\">\n          <strong>{user.name}</strong>\n          <div className=\"note\">{user.login}</div>\n        </div>\n\n        {this.state.deleteModal && (\n          <SimpleModal\n            header={translate('users.remove')}\n            onClose={this.handleDeleteModalClose}\n            onSubmit={this.handleDelete}>\n            {this.renderDeleteModal}\n          </SimpleModal>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy, uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  searchGroups,\n  searchUsers,\n  SearchUsersGroupsParameters\n} from '../../../api/quality-profiles';\nimport { Profile } from '../types';\nimport ProfilePermissionsForm from './ProfilePermissionsForm';\nimport ProfilePermissionsGroup from './ProfilePermissionsGroup';\nimport ProfilePermissionsUser from './ProfilePermissionsUser';\n\nexport interface Group {\n  name: string;\n}\n\ninterface Props {\n  organization?: string;\n  profile: Pick<Profile, 'key' | 'language' | 'name'>;\n}\n\ninterface State {\n  addUserForm: boolean;\n  groups?: Group[];\n  loading: boolean;\n  users?: T.UserSelected[];\n}\n\nexport default class ProfilePermissions extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { addUserForm: false, loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchUsersAndGroups();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.organization !== this.props.organization ||\n      prevProps.profile.key !== this.props.profile.key\n    ) {\n      this.fetchUsersAndGroups();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchUsersAndGroups() {\n    this.setState({ loading: true });\n    const { organization, profile } = this.props;\n    const parameters: SearchUsersGroupsParameters = {\n      language: profile.language,\n      organization,\n      qualityProfile: profile.name,\n      selected: 'selected'\n    };\n    Promise.all([searchUsers(parameters), searchGroups(parameters)]).then(\n      ([usersResponse, groupsResponse]) => {\n        if (this.mounted) {\n          this.setState({\n            groups: groupsResponse.groups,\n            loading: false,\n            users: usersResponse.users\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleAddUserButtonClick = () => {\n    this.setState({ addUserForm: true });\n  };\n\n  handleAddUserFormClose = () => {\n    if (this.mounted) {\n      this.setState({ addUserForm: false });\n    }\n  };\n\n  handleUserAdd = (addedUser: T.UserSelected) => {\n    if (this.mounted) {\n      this.setState((state: State) => ({\n        addUserForm: false,\n        users: state.users && uniqBy([...state.users, addedUser], user => user.login)\n      }));\n    }\n  };\n\n  handleUserDelete = (removedUser: T.UserSelected) => {\n    if (this.mounted) {\n      this.setState((state: State) => ({\n        users: state.users && state.users.filter(user => user !== removedUser)\n      }));\n    }\n  };\n\n  handleGroupAdd = (addedGroup: T.Group) => {\n    if (this.mounted) {\n      this.setState((state: State) => ({\n        addUserForm: false,\n        groups: state.groups && uniqBy([...state.groups, addedGroup], group => group.name)\n      }));\n    }\n  };\n\n  handleGroupDelete = (removedGroup: T.Group) => {\n    if (this.mounted) {\n      this.setState((state: State) => ({\n        groups: state.groups && state.groups.filter(group => group !== removedGroup)\n      }));\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"boxed-group\">\n        <h2>{translate('permissions.page')}</h2>\n        <div className=\"boxed-group-inner\">\n          <p className=\"note\">{translate('quality_profiles.default_permissions')}</p>\n\n          {this.state.loading ? (\n            <div className=\"big-spacer-top\">\n              <i className=\"spinner\" />\n            </div>\n          ) : (\n            <div className=\"big-spacer-top\">\n              {this.state.users &&\n                sortBy(this.state.users, 'name').map(user => (\n                  <ProfilePermissionsUser\n                    key={user.login}\n                    onDelete={this.handleUserDelete}\n                    organization={this.props.organization}\n                    profile={this.props.profile}\n                    user={user}\n                  />\n                ))}\n              {this.state.groups &&\n                sortBy(this.state.groups, 'name').map(group => (\n                  <ProfilePermissionsGroup\n                    group={group}\n                    key={group.name}\n                    onDelete={this.handleGroupDelete}\n                    organization={this.props.organization}\n                    profile={this.props.profile}\n                  />\n                ))}\n              <div className=\"text-right\">\n                <Button onClick={this.handleAddUserButtonClick}>\n                  {translate('quality_profiles.grant_permissions_to_more_users')}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {this.state.addUserForm && (\n          <ProfilePermissionsForm\n            onClose={this.handleAddUserFormClose}\n            onGroupAdd={this.handleGroupAdd}\n            onUserAdd={this.handleUserAdd}\n            organization={this.props.organization}\n            profile={this.props.profile}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find, without } from 'lodash';\nimport * as React from 'react';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport SelectList, {\n  SelectListFilter,\n  SelectListSearchParams\n} from 'sonar-ui-common/components/controls/SelectList';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  associateProject,\n  dissociateProject,\n  getProfileProjects,\n  ProfileProject\n} from '../../../api/quality-profiles';\nimport { Profile } from '../types';\n\ninterface Props {\n  onClose: () => void;\n  organization: string | null;\n  profile: Profile;\n}\n\ninterface State {\n  needToReload: boolean;\n  lastSearchParams?: SelectListSearchParams;\n  projects: ProfileProject[];\n  projectsTotalCount?: number;\n  selectedProjects: string[];\n}\n\nexport default class ChangeProjectsForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      needToReload: false,\n      projects: [],\n      selectedProjects: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchProjects = (searchParams: SelectListSearchParams) =>\n    getProfileProjects({\n      key: this.props.profile.key,\n      organization: this.props.organization,\n      p: searchParams.page,\n      ps: searchParams.pageSize,\n      q: searchParams.query !== '' ? searchParams.query : undefined,\n      selected: searchParams.filter\n    }).then(data => {\n      if (this.mounted) {\n        this.setState(prevState => {\n          const more = searchParams.page != null && searchParams.page > 1;\n\n          const projects = more ? [...prevState.projects, ...data.results] : data.results;\n          const newSeletedProjects = data.results\n            .filter(project => project.selected)\n            .map(project => project.key);\n          const selectedProjects = more\n            ? [...prevState.selectedProjects, ...newSeletedProjects]\n            : newSeletedProjects;\n\n          return {\n            lastSearchParams: searchParams,\n            needToReload: false,\n            projects,\n            projectsTotalCount: data.paging.total,\n            selectedProjects\n          };\n        });\n      }\n    });\n\n  handleSelect = (key: string) =>\n    associateProject(this.props.profile.key, key).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedProjects: [...state.selectedProjects, key]\n        }));\n      }\n    });\n\n  handleUnselect = (key: string) =>\n    dissociateProject(this.props.profile.key, key).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedProjects: without(state.selectedProjects, key)\n        }));\n      }\n    });\n\n  handleCloseClick = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n    this.props.onClose();\n  };\n\n  renderElement = (key: string): React.ReactNode => {\n    const project = find(this.state.projects, { key });\n    return (\n      <div className=\"select-list-list-item\">\n        {project === undefined ? (\n          key\n        ) : (\n          <>\n            {project.name}\n            <br />\n            <span className=\"note\">{project.key}</span>\n          </>\n        )}\n      </div>\n    );\n  };\n\n  render() {\n    const header = translate('projects');\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n\n        <div className=\"modal-body modal-container\" id=\"profile-projects\">\n          <SelectList\n            allowBulkSelection={true}\n            elements={this.state.projects.map(project => project.key)}\n            elementsTotalCount={this.state.projectsTotalCount}\n            labelAll={translate('quality_gates.projects.all')}\n            labelSelected={translate('quality_gates.projects.with')}\n            labelUnselected={translate('quality_gates.projects.without')}\n            needToReload={\n              this.state.needToReload &&\n              this.state.lastSearchParams &&\n              this.state.lastSearchParams.filter !== SelectListFilter.All\n            }\n            onSearch={this.fetchProjects}\n            onSelect={this.handleSelect}\n            onUnselect={this.handleUnselect}\n            renderElement={this.renderElement}\n            selectedElements={this.state.selectedProjects}\n            withPaging={true}\n          />\n        </div>\n\n        <div className=\"modal-foot\">\n          <a href=\"#\" onClick={this.handleCloseClick}>\n            {translate('close')}\n          </a>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getProfileProjects } from '../../../api/quality-profiles';\nimport { Profile } from '../types';\nimport ChangeProjectsForm from './ChangeProjectsForm';\n\ninterface Props {\n  organization: string | null;\n  profile: Profile;\n}\n\ninterface State {\n  formOpen: boolean;\n  loading: boolean;\n  loadingMore: boolean;\n  page: number;\n  projects: Array<{ key: string; name: string }>;\n  total: number;\n}\n\nexport default class ProfileProjects extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  state: State = {\n    formOpen: false,\n    loading: true,\n    loadingMore: false,\n    page: 1,\n    projects: [],\n    total: 0\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadProjects();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.profile.key !== this.props.profile.key) {\n      this.loadProjects();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  loadProjects() {\n    if (this.props.profile.isDefault) {\n      this.setState({ loading: false, projects: [] });\n      return;\n    }\n\n    this.setState({ loading: true });\n    const data = { key: this.props.profile.key, page: this.state.page };\n    getProfileProjects(data).then(({ paging, results }) => {\n      if (this.mounted) {\n        this.setState({\n          projects: results,\n          total: paging.total,\n          loading: false\n        });\n      }\n    }, this.stopLoading);\n  }\n\n  loadMore = () => {\n    this.setState({ loadingMore: true });\n    const data = { key: this.props.profile.key, page: this.state.page + 1 };\n    getProfileProjects(data).then(({ paging, results }) => {\n      if (this.mounted) {\n        this.setState(state => ({\n          projects: [...state.projects, ...results],\n          total: paging.total,\n          loadingMore: false\n        }));\n      }\n    }, this.stopLoading);\n  };\n\n  handleChangeClick = () => {\n    this.setState({ formOpen: true });\n  };\n\n  closeForm = () => {\n    this.setState({ formOpen: false });\n    this.loadProjects();\n  };\n\n  renderDefault() {\n    return (\n      <div>\n        <span className=\"badge spacer-right\">{translate('default')}</span>\n        {translate('quality_profiles.projects_for_default')}\n      </div>\n    );\n  }\n\n  renderProjects() {\n    if (this.state.loading) {\n      return <i className=\"spinner\" />;\n    }\n\n    const { projects } = this.state;\n\n    if (projects.length === 0) {\n      return <div>{translate('quality_profiles.no_projects_associated_to_profile')}</div>;\n    }\n\n    return (\n      <>\n        <ul>\n          {projects.map(project => (\n            <li className=\"spacer-top js-profile-project\" data-key={project.key} key={project.key}>\n              <Link\n                className=\"link-with-icon\"\n                to={{ pathname: '/dashboard', query: { id: project.key } }}>\n                <QualifierIcon qualifier=\"TRK\" /> <span>{project.name}</span>\n              </Link>\n            </li>\n          ))}\n        </ul>\n        <ListFooter\n          count={projects.length}\n          loadMore={this.loadMore}\n          ready={!this.state.loadingMore}\n          total={this.state.total}\n        />\n      </>\n    );\n  }\n\n  render() {\n    const { profile } = this.props;\n    return (\n      <div className=\"boxed-group quality-profile-projects\">\n        {profile.actions && profile.actions.associateProjects && (\n          <div className=\"boxed-group-actions\">\n            <Button className=\"js-change-projects\" onClick={this.handleChangeClick}>\n              {translate('quality_profiles.change_projects')}\n            </Button>\n          </div>\n        )}\n\n        <header className=\"boxed-group-header\">\n          <h2>{translate('projects')}</h2>\n        </header>\n\n        <div className=\"boxed-group-inner\">\n          {profile.isDefault ? this.renderDefault() : this.renderProjects()}\n        </div>\n\n        {this.state.formOpen && (\n          <ChangeProjectsForm\n            onClose={this.closeForm}\n            organization={this.props.organization}\n            profile={profile}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getDeprecatedActiveRulesUrl } from '../../../helpers/urls';\n\ninterface Props {\n  activeDeprecatedRules: number;\n  organization: string | null;\n  profile: string;\n}\n\nexport default function ProfileRulesDeprecatedWarning(props: Props) {\n  return (\n    <div className=\"quality-profile-rules-deprecated clearfix\">\n      <span className=\"pull-left\">\n        <span className=\"text-middle\">{translate('quality_profiles.deprecated_rules')}</span>\n        <HelpTooltip\n          className=\"spacer-left\"\n          overlay={translate('quality_profiles.deprecated_rules_description')}\n        />\n      </span>\n      <Link\n        className=\"pull-right\"\n        to={getDeprecatedActiveRulesUrl({ qprofile: props.profile }, props.organization)}>\n        {props.activeDeprecatedRules}\n      </Link>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport IssueTypeIcon from 'sonar-ui-common/components/icons/IssueTypeIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { getRulesUrl } from '../../../helpers/urls';\n\ninterface Props {\n  count: number | null;\n  organization: string | null;\n  qprofile: string;\n  total: number | null;\n  type: string;\n}\n\nexport default function ProfileRulesRowOfType(props: Props) {\n  const activeRulesUrl = getRulesUrl(\n    { qprofile: props.qprofile, activation: 'true', types: props.type },\n    props.organization\n  );\n  const inactiveRulesUrl = getRulesUrl(\n    { qprofile: props.qprofile, activation: 'false', types: props.type },\n    props.organization\n  );\n  let inactiveCount = null;\n  if (props.count != null && props.total != null) {\n    inactiveCount = props.total - props.count;\n  }\n\n  return (\n    <tr>\n      <td>\n        <span>\n          <IssueTypeIcon className=\"little-spacer-right\" query={props.type} />\n          {translate('issue.type', props.type, 'plural')}\n        </span>\n      </td>\n      <td className=\"thin nowrap text-right\">\n        {props.count != null && (\n          <Link to={activeRulesUrl}>{formatMeasure(props.count, 'SHORT_INT', null)}</Link>\n        )}\n      </td>\n      <td className=\"thin nowrap text-right\">\n        {inactiveCount != null &&\n          (inactiveCount > 0 ? (\n            <Link className=\"small text-muted\" to={inactiveRulesUrl}>\n              {formatMeasure(inactiveCount, 'SHORT_INT', null)}\n            </Link>\n          ) : (\n            <span className=\"note text-muted\">0</span>\n          ))}\n      </td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { getRulesUrl } from '../../../helpers/urls';\n\ninterface Props {\n  count: number | null;\n  organization: string | null;\n  qprofile: string;\n  total: number | null;\n}\n\nexport default function ProfileRulesRowTotal(props: Props) {\n  const activeRulesUrl = getRulesUrl(\n    { qprofile: props.qprofile, activation: 'true' },\n    props.organization\n  );\n  const inactiveRulesUrl = getRulesUrl(\n    { qprofile: props.qprofile, activation: 'false' },\n    props.organization\n  );\n  let inactiveCount = null;\n  if (props.count != null && props.total != null) {\n    inactiveCount = props.total - props.count;\n  }\n\n  return (\n    <tr>\n      <td>\n        <strong>{translate('total')}</strong>\n      </td>\n      <td className=\"thin nowrap text-right\">\n        {props.count != null && (\n          <Link to={activeRulesUrl}>\n            <strong>{formatMeasure(props.count, 'SHORT_INT', null)}</strong>\n          </Link>\n        )}\n      </td>\n      <td className=\"thin nowrap text-right\">\n        {inactiveCount != null &&\n          (inactiveCount > 0 ? (\n            <Link className=\"small text-muted\" to={inactiveRulesUrl}>\n              <strong>{formatMeasure(inactiveCount, 'SHORT_INT', null)}</strong>\n            </Link>\n          ) : (\n            <span className=\"note text-muted\">0</span>\n          ))}\n      </td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getRulesUrl } from '../../../helpers/urls';\n\ninterface Props {\n  language: string;\n  organization: string | null;\n  profile: string;\n  sonarway: string;\n  sonarWayMissingRules: number;\n}\n\nexport default function ProfileRulesSonarWayComparison(props: Props) {\n  const url = getRulesUrl(\n    {\n      qprofile: props.profile,\n      activation: 'false',\n      compareToProfile: props.sonarway,\n      languages: props.language\n    },\n    props.organization\n  );\n\n  return (\n    <div className=\"quality-profile-rules-sonarway-missing clearfix\">\n      <span className=\"pull-left\">\n        <span className=\"text-middle\">{translate('quality_profiles.sonarway_missing_rules')}</span>\n        <HelpTooltip\n          className=\"spacer-left\"\n          overlay={translate('quality_profiles.sonarway_missing_rules_description')}\n        />\n      </span>\n      <Link className=\"pull-right\" data-test=\"rules\" to={url}>\n        {props.sonarWayMissingRules}\n      </Link>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { keyBy } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getQualityProfile } from '../../../api/quality-profiles';\nimport { searchRules, takeFacet } from '../../../api/rules';\nimport DocTooltip from '../../../components/docs/DocTooltip';\nimport { getRulesUrl } from '../../../helpers/urls';\nimport { Profile } from '../types';\nimport ProfileRulesDeprecatedWarning from './ProfileRulesDeprecatedWarning';\nimport ProfileRulesRowOfType from './ProfileRulesRowOfType';\nimport ProfileRulesRowTotal from './ProfileRulesRowTotal';\nimport ProfileRulesSonarWayComparison from './ProfileRulesSonarWayComparison';\n\nconst TYPES = ['BUG', 'VULNERABILITY', 'CODE_SMELL', 'SECURITY_HOTSPOT'];\n\ninterface Props {\n  organization: string | null;\n  profile: Profile;\n}\n\ninterface ByType {\n  val: string;\n  count: number | null;\n}\n\ninterface State {\n  activatedTotal: number | null;\n  activatedByType: T.Dict<ByType>;\n  allByType: T.Dict<ByType>;\n  compareToSonarWay: { profile: string; profileName: string; missingRuleCount: number } | null;\n  total: number | null;\n}\n\nexport default class ProfileRules extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  state: State = {\n    activatedTotal: null,\n    activatedByType: keyBy(TYPES.map(t => ({ val: t, count: null })), 'val'),\n    allByType: keyBy(TYPES.map(t => ({ val: t, count: null })), 'val'),\n    compareToSonarWay: null,\n    total: null\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadRules();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.profile.key !== this.props.profile.key) {\n      this.loadRules();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadProfile() {\n    if (this.props.profile.isBuiltIn) {\n      return Promise.resolve(null);\n    }\n    return getQualityProfile({\n      compareToSonarWay: true,\n      profile: this.props.profile.key\n    });\n  }\n\n  loadAllRules() {\n    return searchRules({\n      languages: this.props.profile.language,\n      facets: 'types',\n      organization: this.props.organization || undefined,\n      ps: 1\n    });\n  }\n\n  loadActivatedRules() {\n    return searchRules({\n      activation: 'true',\n      facets: 'types',\n      organization: this.props.organization || undefined,\n      ps: 1,\n      qprofile: this.props.profile.key\n    });\n  }\n\n  loadRules() {\n    Promise.all([this.loadAllRules(), this.loadActivatedRules(), this.loadProfile()]).then(\n      responses => {\n        if (this.mounted) {\n          const [allRules, activatedRules, showProfile] = responses;\n          this.setState({\n            activatedTotal: activatedRules.total,\n            allByType: keyBy<ByType>(takeFacet(allRules, 'types'), 'val'),\n            activatedByType: keyBy<ByType>(takeFacet(activatedRules, 'types'), 'val'),\n            compareToSonarWay: showProfile && showProfile.compareToSonarWay,\n            total: allRules.total\n          });\n        }\n      }\n    );\n  }\n\n  getRulesCountForType(type: string) {\n    return this.state.activatedByType && this.state.activatedByType[type]\n      ? this.state.activatedByType[type].count\n      : null;\n  }\n\n  getRulesTotalForType(type: string) {\n    return this.state.allByType && this.state.allByType[type]\n      ? this.state.allByType[type].count\n      : null;\n  }\n\n  render() {\n    const { organization, profile } = this.props;\n    const { compareToSonarWay } = this.state;\n    const activateMoreUrl = getRulesUrl(\n      { qprofile: profile.key, activation: 'false' },\n      organization\n    );\n    const { actions = {} } = profile;\n\n    return (\n      <div className=\"boxed-group quality-profile-rules\">\n        <div className=\"quality-profile-rules-distribution\">\n          <table className=\"data condensed\">\n            <thead>\n              <tr>\n                <th>\n                  <h2>{translate('rules')}</h2>\n                </th>\n                <th>{translate('active')}</th>\n                <th>{translate('inactive')}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <ProfileRulesRowTotal\n                count={this.state.activatedTotal}\n                organization={organization}\n                qprofile={profile.key}\n                total={this.state.total}\n              />\n              {TYPES.map(type => (\n                <ProfileRulesRowOfType\n                  count={this.getRulesCountForType(type)}\n                  key={type}\n                  organization={organization}\n                  qprofile={profile.key}\n                  total={this.getRulesTotalForType(type)}\n                  type={type}\n                />\n              ))}\n            </tbody>\n          </table>\n\n          {actions.edit && !profile.isBuiltIn && (\n            <div className=\"text-right big-spacer-top\">\n              <Link className=\"button js-activate-rules\" to={activateMoreUrl}>\n                {translate('quality_profiles.activate_more')}\n              </Link>\n            </div>\n          )}\n\n          {/* if a user is allowed to `copy` a profile if they are a global or organization admin */}\n          {/* this user could potentially active more rules if the profile was not built-in */}\n          {/* in such cases it's better to show the button but disable it with a tooltip */}\n          {actions.copy && profile.isBuiltIn && (\n            <div className=\"text-right big-spacer-top\">\n              <DocTooltip\n                doc={import(/* webpackMode: \"eager\" */ 'Docs/tooltips/quality-profiles/activate-rules-in-built-in-profile.md')}>\n                <Button className=\"disabled js-activate-rules\">\n                  {translate('quality_profiles.activate_more')}\n                </Button>\n              </DocTooltip>\n            </div>\n          )}\n        </div>\n        {profile.activeDeprecatedRuleCount > 0 && (\n          <ProfileRulesDeprecatedWarning\n            activeDeprecatedRules={profile.activeDeprecatedRuleCount}\n            organization={organization}\n            profile={profile.key}\n          />\n        )}\n        {compareToSonarWay != null && compareToSonarWay.missingRuleCount > 0 && (\n          <ProfileRulesSonarWayComparison\n            language={profile.language}\n            organization={organization}\n            profile={profile.key}\n            sonarWayMissingRules={compareToSonarWay.missingRuleCount}\n            sonarway={compareToSonarWay.profile}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Exporter, Profile } from '../types';\nimport ProfileExporters from './ProfileExporters';\nimport ProfileInheritance from './ProfileInheritance';\nimport ProfilePermissions from './ProfilePermissions';\nimport ProfileProjects from './ProfileProjects';\nimport ProfileRules from './ProfileRules';\n\ninterface Props {\n  exporters: Exporter[];\n  organization: string | null;\n  profile: Profile;\n  profiles: Profile[];\n  updateProfiles: () => Promise<void>;\n}\n\nexport default function ProfileDetails(props: Props) {\n  const { organization, profile } = props;\n  return (\n    <div>\n      <div className=\"quality-profile-grid\">\n        <div className=\"quality-profile-grid-left\">\n          <ProfileRules organization={organization} profile={profile} />\n          <ProfileExporters\n            exporters={props.exporters}\n            organization={organization}\n            profile={profile}\n          />\n          {profile.actions && profile.actions.edit && !profile.isBuiltIn && (\n            <ProfilePermissions organization={organization || undefined} profile={profile} />\n          )}\n        </div>\n        <div className=\"quality-profile-grid-right\">\n          <ProfileInheritance\n            organization={organization}\n            profile={profile}\n            profiles={props.profiles}\n            updateProfiles={props.updateProfiles}\n          />\n          <ProfileProjects organization={organization} profile={profile} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { lazyLoad } from 'sonar-ui-common/components/lazyLoad';\nimport { filterContent } from '../../helpers/markdown';\n\nconst DocMarkdownBlock = lazyLoad(() => import('./DocMarkdownBlock'));\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  // Use as `import(/* webpackMode: \"eager\" */ 'Docs/tooltips/foo/bar.md')`\n  doc: Promise<{ default: string }>;\n  overlayProps?: T.Dict<string>;\n}\n\ninterface State {\n  content?: string;\n  open: boolean;\n}\n\nexport default class DocTooltip extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { open: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.doc.then(\n      ({ default: content }) => {\n        if (this.mounted) {\n          this.setState({ content });\n        }\n      },\n      () => {}\n    );\n    document.addEventListener('scroll', this.close, true);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    document.removeEventListener('scroll', this.close, true);\n  }\n\n  close = () => {\n    if (this.mounted) {\n      this.setState({ open: false });\n    }\n  };\n\n  render() {\n    return this.state.content ? (\n      <HelpTooltip\n        className={this.props.className}\n        overlay={\n          <div className=\"abs-width-300\">\n            <DocMarkdownBlock\n              childProps={this.props.overlayProps}\n              className=\"cut-margins\"\n              content={filterContent(this.state.content)}\n              isTooltip={true}\n            />\n          </div>\n        }>\n        {this.props.children}\n      </HelpTooltip>\n    ) : (\n      this.props.children || null\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { map } from 'lodash';\nimport { csvEscape } from 'sonar-ui-common/helpers/csv';\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport interface ProfileActions {\n  associateProjects?: boolean;\n  copy?: boolean;\n  delete?: boolean;\n  edit?: boolean;\n  setAsDefault?: boolean;\n}\n\nexport interface Actions {\n  create?: boolean;\n}\n\nexport interface Profile {\n  actions?: ProfileActions;\n  key: string;\n  name: string;\n  language: string;\n  languageName: string;\n  isInherited?: boolean;\n  parentKey?: string;\n  parentName?: string;\n  isDefault?: boolean;\n  activeRuleCount: number;\n  activeDeprecatedRuleCount: number;\n  rulesUpdatedAt?: string;\n  lastUsed?: string;\n  userUpdatedAt?: string;\n  organization: string;\n  isBuiltIn?: boolean;\n  projectCount?: number;\n}\n\nexport interface SearchQualityProfilesParameters {\n  defaults?: boolean;\n  language?: string;\n  organization?: string;\n  project?: string;\n  qualityProfile?: string;\n}\n\nexport interface SearchQualityProfilesResponse {\n  actions?: Actions;\n  profiles: Profile[];\n}\n\nexport function searchQualityProfiles(\n  parameters: SearchQualityProfilesParameters\n): Promise<SearchQualityProfilesResponse> {\n  return getJSON('/api/qualityprofiles/search', parameters).catch(throwGlobalError);\n}\n\nexport function getQualityProfile(data: {\n  compareToSonarWay?: boolean;\n  profile: string;\n}): Promise<any> {\n  return getJSON('/api/qualityprofiles/show', data);\n}\n\nexport function createQualityProfile(data: RequestData): Promise<any> {\n  return postJSON('/api/qualityprofiles/create', data).catch(throwGlobalError);\n}\n\nexport function restoreQualityProfile(data: RequestData): Promise<any> {\n  return postJSON('/api/qualityprofiles/restore', data).catch(throwGlobalError);\n}\n\nexport interface ProfileProject {\n  id: number;\n  key: string;\n  name: string;\n  selected: boolean;\n}\n\nexport function getProfileProjects(\n  data: RequestData\n): Promise<{ more: boolean; paging: T.Paging; results: ProfileProject[] }> {\n  return getJSON('/api/qualityprofiles/projects', data).catch(throwGlobalError);\n}\n\nexport function getProfileInheritance(\n  profileKey: string\n): Promise<{\n  ancestors: T.ProfileInheritanceDetails[];\n  children: T.ProfileInheritanceDetails[];\n  profile: T.ProfileInheritanceDetails;\n}> {\n  return getJSON('/api/qualityprofiles/inheritance', { profileKey }).catch(throwGlobalError);\n}\n\nexport function setDefaultProfile(profileKey: string) {\n  return post('/api/qualityprofiles/set_default', { profileKey });\n}\n\nexport function renameProfile(key: string, name: string) {\n  return post('/api/qualityprofiles/rename', { key, name }).catch(throwGlobalError);\n}\n\nexport function copyProfile(fromKey: string, toName: string): Promise<any> {\n  return postJSON('/api/qualityprofiles/copy', { fromKey, toName }).catch(throwGlobalError);\n}\n\nexport function deleteProfile(profileKey: string) {\n  return post('/api/qualityprofiles/delete', { profileKey }).catch(throwGlobalError);\n}\n\nexport function changeProfileParent(profileKey: string, parentKey: string) {\n  return post('/api/qualityprofiles/change_parent', {\n    profileKey,\n    parentKey\n  }).catch(throwGlobalError);\n}\n\nexport function getImporters(): Promise<\n  Array<{ key: string; languages: Array<string>; name: string }>\n> {\n  return getJSON('/api/qualityprofiles/importers').then(r => r.importers, throwGlobalError);\n}\n\nexport function getExporters(): Promise<any> {\n  return getJSON('/api/qualityprofiles/exporters').then(r => r.exporters);\n}\n\nexport function getProfileChangelog(data: RequestData): Promise<any> {\n  return getJSON('/api/qualityprofiles/changelog', data);\n}\n\nexport interface CompareResponse {\n  left: { name: string };\n  right: { name: string };\n  inLeft: Array<{ key: string; name: string; severity: string }>;\n  inRight: Array<{ key: string; name: string; severity: string }>;\n  modified: Array<{\n    key: string;\n    name: string;\n    left: { params: T.Dict<string>; severity: string };\n    right: { params: T.Dict<string>; severity: string };\n  }>;\n}\n\nexport function compareProfiles(leftKey: string, rightKey: string): Promise<CompareResponse> {\n  return getJSON('/api/qualityprofiles/compare', { leftKey, rightKey });\n}\n\nexport function associateProject(key: string, project: string) {\n  return post('/api/qualityprofiles/add_project', { key, project }).catch(throwGlobalError);\n}\n\nexport function dissociateProject(key: string, project: string) {\n  return post('/api/qualityprofiles/remove_project', { key, project }).catch(throwGlobalError);\n}\n\nexport interface SearchUsersGroupsParameters {\n  language: string;\n  organization?: string;\n  qualityProfile: string;\n  q?: string;\n  selected?: 'all' | 'selected' | 'deselected';\n}\n\ninterface SearchUsersResponse {\n  users: T.UserSelected[];\n  paging: T.Paging;\n}\n\nexport function searchUsers(parameters: SearchUsersGroupsParameters): Promise<SearchUsersResponse> {\n  return getJSON('/api/qualityprofiles/search_users', parameters).catch(throwGlobalError);\n}\n\nexport interface SearchGroupsResponse {\n  groups: Array<{ name: string }>;\n  paging: T.Paging;\n}\n\nexport function searchGroups(\n  parameters: SearchUsersGroupsParameters\n): Promise<SearchGroupsResponse> {\n  return getJSON('/api/qualityprofiles/search_groups', parameters).catch(throwGlobalError);\n}\n\nexport interface AddRemoveUserParameters {\n  language: string;\n  login: string;\n  organization?: string;\n  qualityProfile: string;\n}\n\nexport function addUser(parameters: AddRemoveUserParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/add_user', parameters).catch(throwGlobalError);\n}\n\nexport function removeUser(parameters: AddRemoveUserParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/remove_user', parameters).catch(throwGlobalError);\n}\n\nexport interface AddRemoveGroupParameters {\n  group: string;\n  language: string;\n  organization?: string;\n  qualityProfile: string;\n}\n\nexport function addGroup(parameters: AddRemoveGroupParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/add_group', parameters).catch(throwGlobalError);\n}\n\nexport function removeGroup(parameters: AddRemoveGroupParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/remove_group', parameters).catch(throwGlobalError);\n}\n\nexport interface BulkActivateParameters {\n  activation?: boolean;\n  active_severities?: string;\n  asc?: boolean;\n  available_since?: string;\n  compareToProfile?: string;\n  inheritance?: string;\n  is_template?: string;\n  languages?: string;\n  organization: string | undefined;\n  q?: string;\n  qprofile?: string;\n  repositories?: string;\n  rule_key?: string;\n  s?: string;\n  severities?: string;\n  statuses?: string;\n  tags?: string;\n  targetKey: string;\n  targetSeverity?: string;\n  template_key?: string;\n  types?: string;\n}\n\nexport function bulkActivateRules(data: BulkActivateParameters) {\n  return postJSON('/api/qualityprofiles/activate_rules', data);\n}\n\nexport function bulkDeactivateRules(data: BulkActivateParameters) {\n  return postJSON('/api/qualityprofiles/deactivate_rules', data);\n}\n\nexport function activateRule(data: {\n  key: string;\n  organization: string | undefined;\n  params?: T.Dict<string>;\n  reset?: boolean;\n  rule: string;\n  severity?: string;\n}) {\n  const params =\n    data.params && map(data.params, (value, key) => `${key}=${csvEscape(value)}`).join(';');\n  return post('/api/qualityprofiles/activate_rule', { ...data, params }).catch(throwGlobalError);\n}\n\nexport function deactivateRule(data: {\n  key: string;\n  organization: string | undefined;\n  rule: string;\n}) {\n  return post('/api/qualityprofiles/deactivate_rule', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// keep this file in JavaScript, because it is used by a webpack loader\nmodule.exports = { getFrontMatter, separateFrontMatter, filterContent };\n\nfunction getFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  return position ? parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine)) : {};\n}\n\nfunction separateFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  if (position) {\n    const frontmatter = parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine));\n    const content = lines.slice(position.lastLine + 1).join('\\n');\n    return { frontmatter, content };\n  } else {\n    return { frontmatter: {}, content };\n  }\n}\n\nfunction getFrontMatterPosition(lines) {\n  let firstLine;\n  let lastLine;\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    if (line.trim() === '---') {\n      if (firstLine === undefined) {\n        firstLine = i;\n      } else {\n        lastLine = i;\n        break;\n      }\n    }\n  }\n  return lastLine !== undefined ? { firstLine, lastLine } : undefined;\n}\n\nfunction parseFrontMatter(lines) {\n  const data = {};\n  for (let i = 0; i < lines.length; i++) {\n    const tokens = lines[i].split(':').map(x => x.trim());\n    if (tokens.length === 2) {\n      data[tokens[0]] = tokens[1];\n    }\n  }\n  return data;\n}\n\n/**\n * @param {string} content\n * @returns {string}\n */\nfunction filterContent(content) {\n  const regexBase = '<!-- \\\\/?(sonarqube|sonarcloud|static) -->';\n  const { isSonarCloud, getInstance } = require('./system');\n  const contentWithInstance = content.replace(/{instance}/gi, getInstance());\n  const contentWithoutStatic = cutConditionalContent(contentWithInstance, 'static');\n  const filteredContent = isSonarCloud()\n    ? cutConditionalContent(contentWithoutStatic, 'sonarqube')\n    : cutConditionalContent(contentWithoutStatic, 'sonarcloud');\n  return filteredContent\n    .replace(new RegExp(`^${regexBase}(\\n|\\r|\\r\\n|$)`, 'gm'), '') // First, remove single-line ones, including ending carriage-returns.\n    .replace(new RegExp(`${regexBase}`, 'g'), ''); // Now remove all remaining ones.\n}\n\n/**\n * @param {string} content\n * @param {string} tag\n * @returns {string}\n */\nfunction cutConditionalContent(content, tag) {\n  const beginning = `<!-- ${tag} -->`;\n  const ending = `<!-- /${tag} -->`;\n\n  let newContent = content;\n  let start = newContent.indexOf(beginning);\n  let end = newContent.indexOf(ending);\n  while (start !== -1 && end !== -1) {\n    newContent = newContent.substring(0, start) + newContent.substring(end + ending.length);\n    start = newContent.indexOf(beginning);\n    end = newContent.indexOf(ending);\n  }\n\n  return newContent;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport interface GetRulesAppResponse {\n  canWrite?: boolean;\n  repositories: { key: string; language: string; name: string }[];\n}\n\nexport function getRulesApp(data: {\n  organization: string | undefined;\n}): Promise<GetRulesAppResponse> {\n  return getJSON('/api/rules/app', data).catch(throwGlobalError);\n}\n\nexport interface SearchRulesResponse {\n  actives?: T.Dict<T.RuleActivation[]>;\n  facets?: { property: string; values: { count: number; val: string }[] }[];\n  p: number;\n  ps: number;\n  rules: T.Rule[];\n  total: number;\n}\n\nexport function searchRules(data: {\n  organization: string | undefined;\n  [x: string]: any;\n}): Promise<SearchRulesResponse> {\n  return getJSON('/api/rules/search', data).catch(throwGlobalError);\n}\n\nexport function takeFacet(response: any, property: string) {\n  const facet = response.facets.find((facet: any) => facet.property === property);\n  return facet ? facet.values : [];\n}\n\nexport function getRuleDetails(parameters: {\n  actives?: boolean;\n  key: string;\n  organization: string | undefined;\n}): Promise<{ actives?: T.RuleActivation[]; rule: T.RuleDetails }> {\n  return getJSON('/api/rules/show', parameters).catch(throwGlobalError);\n}\n\nexport function getRuleTags(parameters: {\n  organization: string | undefined;\n  ps?: number;\n  q: string;\n}): Promise<string[]> {\n  return getJSON('/api/rules/tags', parameters).then(r => r.tags, throwGlobalError);\n}\n\nexport function createRule(data: {\n  custom_key: string;\n  markdown_description: string;\n  name: string;\n  organization: string | undefined;\n  params?: string;\n  prevent_reactivation?: boolean;\n  severity?: string;\n  status?: string;\n  template_key: string;\n  type?: string;\n}): Promise<T.RuleDetails> {\n  return postJSON('/api/rules/create', data).then(\n    r => r.rule,\n    response => {\n      // do not show global error if the status code is 409\n      // this case should be handled inside a component\n      if (response && response.status === 409) {\n        return Promise.reject(response);\n      } else {\n        return throwGlobalError(response);\n      }\n    }\n  );\n}\n\nexport function deleteRule(parameters: { key: string; organization: string | undefined }) {\n  return post('/api/rules/delete', parameters).catch(throwGlobalError);\n}\n\nexport function updateRule(data: {\n  key: string;\n  markdown_description?: string;\n  markdown_note?: string;\n  name?: string;\n  organization: string | undefined;\n  params?: string;\n  remediation_fn_base_effort?: string;\n  remediation_fn_type?: string;\n  remediation_fy_gap_multiplier?: string;\n  severity?: string;\n  status?: string;\n  tags?: string;\n}): Promise<T.RuleDetails> {\n  return postJSON('/api/rules/update', data).then(r => r.rule, throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DocTooltip from '../../../components/docs/DocTooltip';\n\ninterface Props {\n  className?: string;\n  tooltip?: boolean;\n}\n\nexport default function BuiltInQualityProfileBadge({ className, tooltip = true }: Props) {\n  const badge = (\n    <div className={classNames('badge badge-info', className)}>\n      {translate('quality_profiles.built_in')}\n    </div>\n  );\n\n  if (tooltip) {\n    return (\n      <DocTooltip\n        doc={import(/* webpackMode: \"eager\" */ 'Docs/tooltips/quality-profiles/built-in-quality-profile.md')}>\n        {badge}\n      </DocTooltip>\n    );\n  }\n  return badge;\n}\n"],"sourceRoot":""}