{"version":3,"sources":["webpack:///./node_modules/sonar-ui-common/components/icons/ExpandSnippetIcon.js","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/utils.ts","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/SnippetViewer.tsx","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/ComponentSourceSnippetViewer.tsx","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/CrossComponentSourceViewerWrapper.tsx","webpack:///./node_modules/lodash/groupBy.js","webpack:///./node_modules/sonar-ui-common/components/icons/FavoriteIcon.js","webpack:///./node_modules/sonar-ui-common/components/controls/FavoriteButton.js","webpack:///./node_modules/lodash/intersection.js","webpack:///./node_modules/lodash/_baseIntersection.js","webpack:///./node_modules/lodash/_castArrayLikeObject.js","webpack:///./node_modules/lodash/times.js"],"names":["Object","defineProperty","exports","value","React","__webpack_require__","Icon_1","default","_a","className","_b","fill","size","createElement","fillRule","d","stroke","strokeWidth","transform","LINES_ABOVE","LINES_BELOW","MERGE_DISTANCE","LINES_BELOW_LAST","EXPAND_BY_LINES","collision","_ref","_ref2","_ref3","_slicedToArray","startA","endA","_ref4","startB","getPrimaryLocation","issue","component","textRange","endLine","endOffset","startLine","startOffset","SCROLL_LEFT_OFFSET","SnippetViewer_SnippetViewer","index_js_exposed","[object Object]","props","super","this","doScroll","element","scroll","parent","node","current","scrolling","leftOffset","rightOffset","getBoundingClientRect","width","expandBlock","direction","index","displayDuplications","issuesForLine","issueLocations","line","snippet","symbols","verticalBuffer","secondaryIssueLocations","helpers_issueLocations","locations","_this$props","duplications","duplicationsByLine","duplicationsCount","length","lineDuplications","isSinkLine","some","i","key","Line","branchLike","displayAllIssues","displayCoverage","displayIssues","displayLocationMarkers","highlighted","highlightedLocationMessage","helpers_lines","highlightedSymbols","issuePopup","issues","last","linePopup","loadDuplications","onIssueChange","onIssuePopupToggle","onIssueSelect","onIssueUnselect","onIssuesClose","handleCloseIssues","onIssuesOpen","handleOpenIssues","onLinePopupToggle","handleLinePopupToggle","onLocationSelect","onSymbolClick","handleSymbolClick","openIssues","openIssuesByLine","previousLine","undefined","renderDuplicationPopup","selectedIssue","_this$props2","_this$props2$issuesBy","issuesByLine","locationsByLine","lastLine","measures","lines","parseInt","indexing","bottomLine","issueLine","lowestVisibleIssue","Math","max","keys","map","k","filter","l","inSnippet","s","duplicated","ref","aria-label","l10n","onClick","type","ExpandSnippetIcon_default","a","classnames_default","expand-up","expand-down","renderLine","ComponentSourceSnippetViewer_ComponentSourceSnippetViewer","mounted","rootNodeRef","state","additionalLines","loading","snippets","snippetIndex","snippetGroup","find","extension","range","from","start","to","end","api_components","assign","branches","then","reduce","lineMap","coverageStatus","getCoverageStatus","newLinesMapped","animateBlockExpansion","expandComponent","setState","createSnippetsFromProps","secondaryLocations","loc","startIndex","endIndex","firstCollision","keep","min","push","root","querySelector","concat","wrapper","table","firstChild","up","arguments","nodes","getNodes","maxHeight","height","startHeight","style","transition","marginTop","setTimeout","newSnippets","_ref5","snippetToExpand","Error","toDelete","expandSnippet","deletedSnippets","forEach","setMaxHeight","_this$props3","_this$state","fullyShown","snippetLines","componentLines","linesForSnippets","sources","classnames","source-duplications-expanded","SourceViewerHeaderSlim","expandable","onExpand","sourceViewerFile","id","renderSnippet","__webpack_exports__","CrossComponentSourceViewerWrapper_CrossComponentSourceViewerWrapper","components","fetchDuplications","r","duplicatedFiles","files","name","handleIssuePopupToggle","popupName","open","samePopup","handleCloseLinePopup","blocks","helpers_duplications","context","Consumer","openComponent","DuplicationPopup","inRemovedComponent","onClose","fetchIssueFlowSnippets","newProps","issueKey","onLoaded","DeferredSpinner_default","_this$state2","issuesByComponent","locationsByComponent","currentGroup","currentComponent","groups","path","project","projectName","q","uuid","unknownComponent","groupLocationsByComponent","componentProps","SourceViewerContext","Provider","selectedFlowIndex","file","baseAssignValue","createAggregator","hasOwnProperty","prototype","groupBy","result","call","module","classNames","theme_1","favorite","ThemeConsumer","theme","is-filled","color","colors","orange","extendStatics","__extends","b","setPrototypeOf","__proto__","Array","p","__","constructor","create","l10n_1","FavoriteIcon_1","buttons_1","Tooltip_1","FavoriteButton","_super","apply","render","qualifier","toggleFavorite","tooltip","translate","ariaLabel","overlay","ButtonLink","PureComponent","arrayMap","baseIntersection","baseRest","castArrayLikeObject","intersection","arrays","mapped","SetCache","arrayIncludes","arrayIncludesWith","baseUnary","cacheHas","nativeMin","iteratee","comparator","includes","othLength","othIndex","caches","maxLength","Infinity","array","seen","outer","computed","cache","isArrayLikeObject","n"],"mappings":"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","file":"js/329.m.a01e7cc6.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar Icon_1 = require(\"./Icon\");\nfunction ExpandSnippetIcon(_a) {\n    var className = _a.className, _b = _a.fill, fill = _b === void 0 ? 'currentColor' : _b, size = _a.size;\n    return (React.createElement(Icon_1.default, { className: className, size: size },\n        React.createElement(\"g\", { fill: \"none\", fillRule: \"evenodd\" },\n            React.createElement(\"path\", { d: \"M8 1v4H4\", stroke: fill, strokeWidth: \"2\", transform: \"scale(-.83333 -.84583) rotate(45 7.66 -19.75)\" }),\n            React.createElement(\"path\", { d: \"M3 5.78h10v1.7H3z\", fill: fill }),\n            React.createElement(\"path\", { d: \"M7.17 2.4h1.66v5.07H7.17z\", fill: fill }),\n            React.createElement(\"g\", null,\n                React.createElement(\"path\", { d: \"M8.16 1.81V6.1H3.9\", stroke: fill, strokeWidth: \"2\", transform: \"scale(.83333 .84583) rotate(45 -4.2 13.2)\" }),\n                React.createElement(\"path\", { d: \"M13 10.01H3v-1.7h10z\", fill: fill }),\n                React.createElement(\"path\", { d: \"M8.83 13.4H7.17V9.15h1.66z\", fill: fill })))));\n}\nexports.default = ExpandSnippetIcon;\n//# sourceMappingURL=ExpandSnippetIcon.js.map","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nconst LINES_ABOVE = 2;\nconst LINES_BELOW = 2;\nexport const MERGE_DISTANCE = 4; // Merge if snippets are four lines away (separated by 3 lines) or fewer\nexport const LINES_BELOW_LAST = 9;\nexport const EXPAND_BY_LINES = 10;\n\nfunction unknownComponent(key: string): T.SnippetsByComponent {\n  return {\n    component: {\n      key,\n      measures: {},\n      path: '',\n      project: '',\n      projectName: '',\n      q: 'FIL',\n      uuid: ''\n    },\n    sources: []\n  };\n}\n\nfunction collision([startA, endA]: number[], [startB, endB]: number[]) {\n  return !(startA > endB + MERGE_DISTANCE || endA < startB - MERGE_DISTANCE);\n}\n\nfunction getPrimaryLocation(issue: T.Issue): T.FlowLocation {\n  return {\n    component: issue.component,\n    textRange: issue.textRange || {\n      endLine: 0,\n      endOffset: 0,\n      startLine: 0,\n      startOffset: 0\n    }\n  };\n}\n\nexport function createSnippets(\n  locations: T.FlowLocation[],\n  last: boolean,\n  issue?: T.Issue\n): T.Snippet[] {\n  // For each location's range (2 above and 2 below), and then compare with other ranges\n  // to merge snippets that collide.\n  return (issue ? [getPrimaryLocation(issue), ...locations] : locations).reduce(\n    (snippets: T.Snippet[], loc, index) => {\n      const startIndex = Math.max(1, loc.textRange.startLine - LINES_ABOVE);\n      const endIndex =\n        loc.textRange.endLine +\n        ((issue && index === 0) || (last && index === locations.length - 1)\n          ? LINES_BELOW_LAST\n          : LINES_BELOW);\n\n      let firstCollision: { start: number; end: number } | undefined;\n\n      // Remove ranges that collide into the first collision\n      snippets = snippets.filter(snippet => {\n        if (collision([snippet.start, snippet.end], [startIndex, endIndex])) {\n          let keep = false;\n          // Check if we've already collided\n          if (!firstCollision) {\n            firstCollision = snippet;\n            keep = true;\n          }\n          // Merge with first collision:\n          firstCollision.start = Math.min(startIndex, snippet.start, firstCollision.start);\n          firstCollision.end = Math.max(endIndex, snippet.end, firstCollision.end);\n\n          // remove the range if it was not the first collision\n          return keep;\n        }\n        return true;\n      });\n\n      if (firstCollision === undefined) {\n        snippets.push({\n          start: startIndex,\n          end: endIndex,\n          index\n        });\n      }\n\n      return snippets;\n    },\n    []\n  );\n}\n\nexport function linesForSnippets(snippets: T.Snippet[], componentLines: T.LineMap) {\n  return snippets\n    .map(snippet => {\n      const lines = [];\n      for (let i = snippet.start; i <= snippet.end; i++) {\n        if (componentLines[i]) {\n          lines.push(componentLines[i]);\n        }\n      }\n      return lines;\n    })\n    .filter(snippet => snippet.length > 0);\n}\n\nexport function groupLocationsByComponent(\n  locations: T.FlowLocation[],\n  components: { [key: string]: T.SnippetsByComponent }\n) {\n  let currentComponent = '';\n  let currentGroup: T.SnippetGroup;\n  const groups: T.SnippetGroup[] = [];\n\n  locations.forEach((loc, index) => {\n    if (loc.component !== currentComponent) {\n      currentGroup = {\n        ...(components[loc.component] || unknownComponent(loc.component)),\n        locations: []\n      };\n      groups.push(currentGroup);\n      currentComponent = loc.component;\n    }\n    loc.index = index;\n    currentGroup.locations.push(loc);\n  });\n\n  return groups;\n}\n\nexport function expandSnippet({\n  direction,\n  snippetIndex,\n  snippets\n}: {\n  direction: T.ExpandDirection;\n  snippetIndex: number;\n  snippets: T.Snippet[];\n}) {\n  const snippetToExpand = snippets.find(s => s.index === snippetIndex);\n  if (!snippetToExpand) {\n    throw new Error(`Snippet ${snippetIndex} not found`);\n  }\n\n  snippetToExpand.start = Math.max(\n    0,\n    snippetToExpand.start - (direction === 'up' ? EXPAND_BY_LINES : 0)\n  );\n  snippetToExpand.end += direction === 'down' ? EXPAND_BY_LINES : 0;\n\n  return snippets.map(snippet => {\n    if (snippet.index === snippetIndex) {\n      return snippetToExpand;\n    }\n    if (collision([snippet.start, snippet.end], [snippetToExpand.start, snippetToExpand.end])) {\n      // Merge with expanded snippet\n      snippetToExpand.start = Math.min(snippet.start, snippetToExpand.start);\n      snippetToExpand.end = Math.max(snippet.end, snippetToExpand.end);\n      snippet.toDelete = true;\n    }\n    return snippet;\n  });\n}\n\nexport function inSnippet(line: number, snippet: T.SourceLine[]) {\n  return line >= snippet[0].line && line <= snippet[snippet.length - 1].line;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport ExpandSnippetIcon from 'sonar-ui-common/components/icons/ExpandSnippetIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { scrollHorizontally } from 'sonar-ui-common/helpers/scrolling';\nimport Line from '../../../components/SourceViewer/components/Line';\nimport { symbolsByLine } from '../../../components/SourceViewer/helpers/indexing';\nimport { getSecondaryIssueLocationsForLine } from '../../../components/SourceViewer/helpers/issueLocations';\nimport {\n  optimizeHighlightedSymbols,\n  optimizeLocationMessage,\n  optimizeSelectedIssue\n} from '../../../components/SourceViewer/helpers/lines';\nimport { inSnippet, LINES_BELOW_LAST } from './utils';\n\ninterface Props {\n  branchLike: T.BranchLike | undefined;\n  component: T.SourceViewerFile;\n  duplications?: T.Duplication[];\n  duplicationsByLine?: { [line: number]: number[] };\n  expandBlock: (snippetIndex: number, direction: T.ExpandDirection) => void;\n  handleCloseIssues: (line: T.SourceLine) => void;\n  handleLinePopupToggle: (line: T.SourceLine) => void;\n  handleOpenIssues: (line: T.SourceLine) => void;\n  handleSymbolClick: (symbols: string[]) => void;\n  highlightedLocationMessage: { index: number; text: string | undefined } | undefined;\n  highlightedSymbols: string[];\n  index: number;\n  issue: T.Issue;\n  issuePopup?: { issue: string; name: string };\n  issuesByLine: T.IssuesByLine;\n  last: boolean;\n  linePopup?: T.LinePopup;\n  loadDuplications: (line: T.SourceLine) => void;\n  locations: T.FlowLocation[];\n  locationsByLine: { [line: number]: T.LinearIssueLocation[] };\n  onIssueChange: (issue: T.Issue) => void;\n  onIssuePopupToggle: (issue: string, popupName: string, open?: boolean) => void;\n  onLocationSelect: (index: number) => void;\n  openIssuesByLine: T.Dict<boolean>;\n  renderDuplicationPopup: (index: number, line: number) => React.ReactNode;\n  scroll?: (element: HTMLElement) => void;\n  snippet: T.SourceLine[];\n}\n\nconst SCROLL_LEFT_OFFSET = 32;\n\nexport default class SnippetViewer extends React.PureComponent<Props> {\n  node: React.RefObject<HTMLDivElement>;\n\n  constructor(props: Props) {\n    super(props);\n    this.node = React.createRef();\n  }\n\n  doScroll = (element: HTMLElement) => {\n    if (this.props.scroll) {\n      this.props.scroll(element);\n    }\n    const parent = this.node.current as Element;\n\n    if (parent) {\n      scrollHorizontally(element, {\n        leftOffset: SCROLL_LEFT_OFFSET,\n        rightOffset: parent.getBoundingClientRect().width - SCROLL_LEFT_OFFSET,\n        parent\n      });\n    }\n  };\n\n  expandBlock = (direction: T.ExpandDirection) => () =>\n    this.props.expandBlock(this.props.index, direction);\n\n  renderLine({\n    displayDuplications,\n    index,\n    issuesForLine,\n    issueLocations,\n    line,\n    snippet,\n    symbols,\n    verticalBuffer\n  }: {\n    displayDuplications: boolean;\n    index: number;\n    issuesForLine: T.Issue[];\n    issueLocations: T.LinearIssueLocation[];\n    line: T.SourceLine;\n    snippet: T.SourceLine[];\n    symbols: string[];\n    verticalBuffer: number;\n  }) {\n    const secondaryIssueLocations = getSecondaryIssueLocationsForLine(line, this.props.locations);\n\n    const { duplications, duplicationsByLine } = this.props;\n    const duplicationsCount = duplications ? duplications.length : 0;\n    const lineDuplications =\n      (duplicationsCount && duplicationsByLine && duplicationsByLine[line.line]) || [];\n\n    const isSinkLine = issuesForLine.some(i => i.key === this.props.issue.key);\n\n    return (\n      <Line\n        branchLike={this.props.branchLike}\n        displayAllIssues={false}\n        displayCoverage={true}\n        displayDuplications={displayDuplications}\n        displayIssues={!isSinkLine || issuesForLine.length > 1}\n        displayLocationMarkers={true}\n        duplications={lineDuplications}\n        duplicationsCount={duplicationsCount}\n        highlighted={false}\n        highlightedLocationMessage={optimizeLocationMessage(\n          this.props.highlightedLocationMessage,\n          secondaryIssueLocations\n        )}\n        highlightedSymbols={optimizeHighlightedSymbols(symbols, this.props.highlightedSymbols)}\n        issueLocations={issueLocations}\n        issuePopup={this.props.issuePopup}\n        issues={issuesForLine}\n        key={line.line}\n        last={false}\n        line={line}\n        linePopup={this.props.linePopup}\n        loadDuplications={this.props.loadDuplications}\n        onIssueChange={this.props.onIssueChange}\n        onIssuePopupToggle={this.props.onIssuePopupToggle}\n        onIssueSelect={() => {}}\n        onIssueUnselect={() => {}}\n        onIssuesClose={this.props.handleCloseIssues}\n        onIssuesOpen={this.props.handleOpenIssues}\n        onLinePopupToggle={this.props.handleLinePopupToggle}\n        onLocationSelect={this.props.onLocationSelect}\n        onSymbolClick={this.props.handleSymbolClick}\n        openIssues={this.props.openIssuesByLine[line.line]}\n        previousLine={index > 0 ? snippet[index - 1] : undefined}\n        renderDuplicationPopup={this.props.renderDuplicationPopup}\n        scroll={this.doScroll}\n        secondaryIssueLocations={secondaryIssueLocations}\n        selectedIssue={optimizeSelectedIssue(this.props.issue.key, issuesForLine)}\n        verticalBuffer={verticalBuffer}\n      />\n    );\n  }\n\n  render() {\n    const {\n      component,\n      issue,\n      issuesByLine = {},\n      last,\n      locationsByLine,\n      openIssuesByLine,\n      snippet\n    } = this.props;\n    const lastLine =\n      component.measures && component.measures.lines && parseInt(component.measures.lines, 10);\n\n    const symbols = symbolsByLine(snippet);\n\n    const bottomLine = snippet[snippet.length - 1].line;\n    const issueLine = issue.textRange ? issue.textRange.endLine : issue.line;\n    const lowestVisibleIssue = Math.max(\n      ...Object.keys(issuesByLine)\n        .map(k => parseInt(k, 10))\n        .filter(l => inSnippet(l, snippet) && (l === issueLine || openIssuesByLine[l]))\n    );\n    const verticalBuffer = last\n      ? Math.max(0, LINES_BELOW_LAST - (bottomLine - lowestVisibleIssue))\n      : 0;\n\n    const displayDuplications = snippet.some(s => !!s.duplicated);\n\n    return (\n      <div className=\"source-viewer-code snippet\" ref={this.node}>\n        <div>\n          {snippet[0].line > 1 && (\n            <div className=\"expand-block expand-block-above\">\n              <button\n                aria-label={translate('source_viewer.expand_above')}\n                onClick={this.expandBlock('up')}\n                type=\"button\">\n                <ExpandSnippetIcon />\n              </button>\n            </div>\n          )}\n          <table\n            className={classNames('source-table', {\n              'expand-up': snippet[0].line > 1,\n              'expand-down': !lastLine || snippet[snippet.length - 1].line < lastLine\n            })}>\n            <tbody>\n              {snippet.map((line, index) =>\n                this.renderLine({\n                  displayDuplications,\n                  index,\n                  issuesForLine: issuesByLine[line.line] || [],\n                  issueLocations: locationsByLine[line.line] || [],\n                  line,\n                  snippet,\n                  symbols: symbols[line.line],\n                  verticalBuffer: index === snippet.length - 1 ? verticalBuffer : 0\n                })\n              )}\n            </tbody>\n          </table>\n          {(!lastLine || snippet[snippet.length - 1].line < lastLine) && (\n            <div className=\"expand-block expand-block-below\">\n              <button\n                aria-label={translate('source_viewer.expand_below')}\n                onClick={this.expandBlock('down')}\n                type=\"button\">\n                <ExpandSnippetIcon />\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { getSources } from '../../../api/components';\nimport getCoverageStatus from '../../../components/SourceViewer/helpers/getCoverageStatus';\nimport { locationsByLine } from '../../../components/SourceViewer/helpers/indexing';\nimport SourceViewerHeaderSlim from '../../../components/SourceViewer/SourceViewerHeaderSlim';\nimport { getBranchLikeQuery } from '../../../helpers/branches';\nimport SnippetViewer from './SnippetViewer';\nimport {\n  createSnippets,\n  expandSnippet,\n  EXPAND_BY_LINES,\n  linesForSnippets,\n  MERGE_DISTANCE\n} from './utils';\n\ninterface Props {\n  branchLike: T.BranchLike | undefined;\n  duplications?: T.Duplication[];\n  duplicationsByLine?: { [line: number]: number[] };\n  highlightedLocationMessage: { index: number; text: string | undefined } | undefined;\n  issue: T.Issue;\n  issuePopup?: { issue: string; name: string };\n  issuesByLine: T.IssuesByLine;\n  last: boolean;\n  linePopup?: T.LinePopup;\n  loadDuplications: (component: string, line: T.SourceLine) => void;\n  locations: T.FlowLocation[];\n  onIssueChange: (issue: T.Issue) => void;\n  onIssuePopupToggle: (issue: string, popupName: string, open?: boolean) => void;\n  onLinePopupToggle: (linePopup: T.LinePopup & { component: string }) => void;\n  onLocationSelect: (index: number) => void;\n  renderDuplicationPopup: (\n    component: T.SourceViewerFile,\n    index: number,\n    line: number\n  ) => React.ReactNode;\n  scroll?: (element: HTMLElement) => void;\n  snippetGroup: T.SnippetGroup;\n}\n\ninterface State {\n  additionalLines: { [line: number]: T.SourceLine };\n  highlightedSymbols: string[];\n  loading: boolean;\n  openIssuesByLine: T.Dict<boolean>;\n  snippets: T.Snippet[];\n}\n\nexport default class ComponentSourceSnippetViewer extends React.PureComponent<Props, State> {\n  mounted = false;\n  rootNodeRef = React.createRef<HTMLDivElement>();\n  state: State = {\n    additionalLines: {},\n    highlightedSymbols: [],\n    loading: false,\n    openIssuesByLine: {},\n    snippets: []\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.createSnippetsFromProps();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  createSnippetsFromProps() {\n    const snippets = createSnippets(\n      this.props.snippetGroup.locations,\n      this.props.last,\n      this.props.issue.secondaryLocations.length > 0 ? this.props.issue : undefined\n    );\n\n    this.setState({ snippets });\n  }\n\n  getNodes(index: number): { wrapper: HTMLElement; table: HTMLElement } | undefined {\n    const root = this.rootNodeRef.current;\n    if (!root) {\n      return undefined;\n    }\n    const element = root.querySelector(`#snippet-wrapper-${index}`);\n    if (!element) {\n      return undefined;\n    }\n    const wrapper = element.querySelector<HTMLElement>('.snippet');\n    if (!wrapper) {\n      return undefined;\n    }\n    const table = wrapper.firstChild as HTMLElement;\n    if (!table) {\n      return undefined;\n    }\n\n    return { wrapper, table };\n  }\n\n  setMaxHeight(index: number, value?: number, up = false) {\n    const nodes = this.getNodes(index);\n\n    if (!nodes) {\n      return;\n    }\n\n    const { wrapper, table } = nodes;\n\n    const maxHeight = value !== undefined ? value : table.getBoundingClientRect().height;\n\n    if (up) {\n      const startHeight = wrapper.getBoundingClientRect().height;\n      table.style.transition = 'none';\n      table.style.marginTop = `${startHeight - maxHeight}px`;\n\n      // animate!\n      setTimeout(() => {\n        table.style.transition = '';\n        table.style.marginTop = '0px';\n        wrapper.style.maxHeight = `${maxHeight + 20}px`;\n      }, 0);\n    } else {\n      wrapper.style.maxHeight = `${maxHeight + 20}px`;\n    }\n  }\n\n  expandBlock = (snippetIndex: number, direction: T.ExpandDirection) => {\n    const { branchLike, snippetGroup } = this.props;\n    const { key } = snippetGroup.component;\n    const { snippets } = this.state;\n    const snippet = snippets.find(s => s.index === snippetIndex);\n    if (!snippet) {\n      return;\n    }\n    // Extend by EXPAND_BY_LINES and add buffer for merging snippets\n    const extension = EXPAND_BY_LINES + MERGE_DISTANCE - 1;\n    const range =\n      direction === 'up'\n        ? {\n            from: Math.max(1, snippet.start - extension),\n            to: snippet.start - 1\n          }\n        : {\n            from: snippet.end + 1,\n            to: snippet.end + extension\n          };\n    getSources({\n      key,\n      ...range,\n      ...getBranchLikeQuery(branchLike)\n    })\n      .then(lines =>\n        lines.reduce((lineMap: T.Dict<T.SourceLine>, line) => {\n          line.coverageStatus = getCoverageStatus(line);\n          lineMap[line.line] = line;\n          return lineMap;\n        }, {})\n      )\n      .then(\n        newLinesMapped => this.animateBlockExpansion(snippetIndex, direction, newLinesMapped),\n        () => {}\n      );\n  };\n\n  animateBlockExpansion(\n    snippetIndex: number,\n    direction: T.ExpandDirection,\n    newLinesMapped: T.Dict<T.SourceLine>\n  ) {\n    if (this.mounted) {\n      const { snippets } = this.state;\n\n      const newSnippets = expandSnippet({\n        direction,\n        snippetIndex,\n        snippets\n      });\n\n      const deletedSnippets = newSnippets.filter(s => s.toDelete);\n\n      // set max-height to current height for CSS transitions\n      deletedSnippets.forEach(s => this.setMaxHeight(s.index));\n      this.setMaxHeight(snippetIndex);\n\n      this.setState(\n        ({ additionalLines, snippets }) => {\n          const combinedLines = { ...additionalLines, ...newLinesMapped };\n          return {\n            additionalLines: combinedLines,\n            snippets\n          };\n        },\n        () => {\n          // Set max-height 0 to trigger CSS transitions\n          deletedSnippets.forEach(s => {\n            this.setMaxHeight(s.index, 0);\n          });\n          this.setMaxHeight(snippetIndex, undefined, direction === 'up');\n\n          // Wait for transition to finish before updating dom\n          setTimeout(() => {\n            this.setState({ snippets: newSnippets.filter(s => !s.toDelete) });\n          }, 200);\n        }\n      );\n    }\n  }\n\n  expandComponent = () => {\n    const { branchLike, snippetGroup } = this.props;\n    const { key } = snippetGroup.component;\n\n    this.setState({ loading: true });\n\n    getSources({ key, ...getBranchLikeQuery(branchLike) }).then(\n      lines => {\n        if (this.mounted) {\n          this.setState(({ additionalLines }) => {\n            const combinedLines = { ...additionalLines, ...lines };\n            return {\n              additionalLines: combinedLines,\n              loading: false,\n              snippets: [{ start: 0, end: lines[lines.length - 1].line, index: -1 }]\n            };\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  handleLinePopupToggle = (linePopup: T.LinePopup) => {\n    this.props.onLinePopupToggle({\n      ...linePopup,\n      component: this.props.snippetGroup.component.key\n    });\n  };\n\n  handleOpenIssues = (line: T.SourceLine) => {\n    this.setState(state => ({\n      openIssuesByLine: { ...state.openIssuesByLine, [line.line]: true }\n    }));\n  };\n\n  handleCloseIssues = (line: T.SourceLine) => {\n    this.setState(state => ({\n      openIssuesByLine: { ...state.openIssuesByLine, [line.line]: false }\n    }));\n  };\n\n  handleSymbolClick = (highlightedSymbols: string[]) => {\n    this.setState({ highlightedSymbols });\n  };\n\n  loadDuplications = (line: T.SourceLine) => {\n    this.props.loadDuplications(this.props.snippetGroup.component.key, line);\n  };\n\n  renderDuplicationPopup = (index: number, line: number) => {\n    return this.props.renderDuplicationPopup(this.props.snippetGroup.component, index, line);\n  };\n\n  renderSnippet({\n    index,\n    issuesByLine,\n    last,\n    locationsByLine,\n    snippet\n  }: {\n    index: number;\n    issuesByLine: T.IssuesByLine;\n    last: boolean;\n    locationsByLine: { [line: number]: T.LinearIssueLocation[] };\n    snippet: T.SourceLine[];\n  }) {\n    return (\n      <SnippetViewer\n        branchLike={this.props.branchLike}\n        component={this.props.snippetGroup.component}\n        expandBlock={this.expandBlock}\n        handleCloseIssues={this.handleCloseIssues}\n        handleLinePopupToggle={this.handleLinePopupToggle}\n        handleOpenIssues={this.handleOpenIssues}\n        handleSymbolClick={this.handleSymbolClick}\n        highlightedLocationMessage={this.props.highlightedLocationMessage}\n        highlightedSymbols={this.state.highlightedSymbols}\n        index={index}\n        issue={this.props.issue}\n        issuePopup={this.props.issuePopup}\n        issuesByLine={issuesByLine}\n        last={last}\n        linePopup={this.props.linePopup}\n        loadDuplications={this.loadDuplications}\n        locations={this.props.locations}\n        locationsByLine={locationsByLine}\n        onIssueChange={this.props.onIssueChange}\n        onIssuePopupToggle={this.props.onIssuePopupToggle}\n        onLocationSelect={this.props.onLocationSelect}\n        openIssuesByLine={this.state.openIssuesByLine}\n        renderDuplicationPopup={this.renderDuplicationPopup}\n        scroll={this.props.scroll}\n        snippet={snippet}\n      />\n    );\n  }\n\n  render() {\n    const { branchLike, duplications, issue, issuesByLine, last, snippetGroup } = this.props;\n    const { additionalLines, loading, snippets } = this.state;\n    const locations = locationsByLine([issue]);\n\n    const fullyShown =\n      snippets.length === 1 &&\n      snippetGroup.component.measures &&\n      snippets[0].end - snippets[0].start ===\n        parseInt(snippetGroup.component.measures.lines || '', 10);\n\n    const snippetLines = linesForSnippets(snippets, {\n      ...snippetGroup.sources,\n      ...additionalLines\n    });\n\n    return (\n      <div\n        className={classNames('component-source-container', {\n          'source-duplications-expanded': duplications && duplications.length > 0\n        })}\n        ref={this.rootNodeRef}>\n        <SourceViewerHeaderSlim\n          branchLike={branchLike}\n          expandable={!fullyShown}\n          loading={loading}\n          onExpand={this.expandComponent}\n          sourceViewerFile={snippetGroup.component}\n        />\n        {snippetLines.map((snippet, index) => (\n          <div id={`snippet-wrapper-${snippets[index].index}`} key={snippets[index].index}>\n            {this.renderSnippet({\n              snippet,\n              index: snippets[index].index,\n              issuesByLine: last ? issuesByLine : {},\n              locationsByLine: last && index === snippets.length - 1 ? locations : {},\n              last: last && index === snippets.length - 1\n            })}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { getDuplications } from '../../../api/components';\nimport { getIssueFlowSnippets } from '../../../api/issues';\nimport DuplicationPopup from '../../../components/SourceViewer/components/DuplicationPopup';\nimport {\n  filterDuplicationBlocksByLine,\n  getDuplicationBlocksForIndex,\n  isDuplicationBlockInRemovedComponent\n} from '../../../components/SourceViewer/helpers/duplications';\nimport {\n  duplicationsByLine,\n  issuesByComponentAndLine\n} from '../../../components/SourceViewer/helpers/indexing';\nimport { SourceViewerContext } from '../../../components/SourceViewer/SourceViewerContext';\nimport { WorkspaceContext } from '../../../components/workspace/context';\nimport { getBranchLikeQuery } from '../../../helpers/branches';\nimport ComponentSourceSnippetViewer from './ComponentSourceSnippetViewer';\nimport { groupLocationsByComponent } from './utils';\n\ninterface Props {\n  branchLike: T.Branch | T.PullRequest | undefined;\n  highlightedLocationMessage?: { index: number; text: string | undefined };\n  issue: T.Issue;\n  issues: T.Issue[];\n  locations: T.FlowLocation[];\n  onIssueChange: (issue: T.Issue) => void;\n  onLoaded?: () => void;\n  onLocationSelect: (index: number) => void;\n  scroll?: (element: HTMLElement) => void;\n  selectedFlowIndex: number | undefined;\n}\n\ninterface State {\n  components: T.Dict<T.SnippetsByComponent>;\n  duplicatedFiles?: T.Dict<T.DuplicatedFile>;\n  duplications?: T.Duplication[];\n  duplicationsByLine: { [line: number]: number[] };\n  issuePopup?: { issue: string; name: string };\n  linePopup?: T.LinePopup & { component: string };\n  loading: boolean;\n}\n\nexport default class CrossComponentSourceViewerWrapper extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    components: {},\n    duplicationsByLine: {},\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIssueFlowSnippets(this.props.issue.key);\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (newProps.issue.key !== this.props.issue.key) {\n      this.fetchIssueFlowSnippets(newProps.issue.key);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchDuplications = (component: string, line: T.SourceLine) => {\n    getDuplications({\n      key: component,\n      ...getBranchLikeQuery(this.props.branchLike)\n    }).then(\n      r => {\n        if (this.mounted) {\n          this.setState(state => ({\n            duplicatedFiles: r.files,\n            duplications: r.duplications,\n            duplicationsByLine: duplicationsByLine(r.duplications),\n            linePopup:\n              r.duplications.length === 1\n                ? { component, index: 0, line: line.line, name: 'duplications' }\n                : state.linePopup\n          }));\n        }\n      },\n      () => {}\n    );\n  };\n\n  fetchIssueFlowSnippets(issueKey: string) {\n    this.setState({ loading: true });\n    getIssueFlowSnippets(issueKey).then(\n      components => {\n        if (this.mounted) {\n          this.setState({\n            components,\n            issuePopup: undefined,\n            linePopup: undefined,\n            loading: false\n          });\n          if (this.props.onLoaded) {\n            this.props.onLoaded();\n          }\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleIssuePopupToggle = (issue: string, popupName: string, open?: boolean) => {\n    this.setState((state: State) => {\n      const samePopup =\n        state.issuePopup && state.issuePopup.name === popupName && state.issuePopup.issue === issue;\n      if (open !== false && !samePopup) {\n        return { issuePopup: { issue, name: popupName } };\n      } else if (open !== true && samePopup) {\n        return { issuePopup: undefined };\n      }\n      return null;\n    });\n  };\n\n  handleLinePopupToggle = ({\n    component,\n    index,\n    line,\n    name,\n    open\n  }: T.LinePopup & { component: string }) => {\n    this.setState((state: State) => {\n      const samePopup =\n        state.linePopup !== undefined &&\n        state.linePopup.line === line &&\n        state.linePopup.name === name &&\n        state.linePopup.component === component &&\n        state.linePopup.index === index;\n      if (open !== false && !samePopup) {\n        return { linePopup: { component, index, line, name } };\n      } else if (open !== true && samePopup) {\n        return { linePopup: undefined };\n      }\n      return null;\n    });\n  };\n\n  handleCloseLinePopup = () => {\n    this.setState({ linePopup: undefined });\n  };\n\n  renderDuplicationPopup = (component: T.SourceViewerFile, index: number, line: number) => {\n    const { duplicatedFiles, duplications } = this.state;\n\n    if (!component || !duplicatedFiles) {\n      return null;\n    }\n\n    const blocks = getDuplicationBlocksForIndex(duplications, index);\n\n    return (\n      <WorkspaceContext.Consumer>\n        {({ openComponent }) => (\n          <DuplicationPopup\n            blocks={filterDuplicationBlocksByLine(blocks, line)}\n            branchLike={this.props.branchLike}\n            duplicatedFiles={duplicatedFiles}\n            inRemovedComponent={isDuplicationBlockInRemovedComponent(blocks)}\n            onClose={this.handleCloseLinePopup}\n            openComponent={openComponent}\n            sourceViewerFile={component}\n          />\n        )}\n      </WorkspaceContext.Consumer>\n    );\n  };\n\n  render() {\n    const { loading } = this.state;\n\n    if (loading) {\n      return (\n        <div>\n          <DeferredSpinner />\n        </div>\n      );\n    }\n\n    const { components, duplications, duplicationsByLine, linePopup } = this.state;\n    const issuesByComponent = issuesByComponentAndLine(this.props.issues);\n    const locationsByComponent = groupLocationsByComponent(this.props.locations, components);\n\n    return (\n      <div>\n        {locationsByComponent.map((snippetGroup, i) => {\n          let componentProps = {};\n          if (linePopup && snippetGroup.component.key === linePopup.component) {\n            componentProps = {\n              duplications,\n              duplicationsByLine,\n              linePopup: { index: linePopup.index, line: linePopup.line, name: linePopup.name }\n            };\n          }\n          return (\n            <SourceViewerContext.Provider\n              key={`${this.props.issue.key}-${this.props.selectedFlowIndex || 0}-${i}`}\n              value={{ branchLike: this.props.branchLike, file: snippetGroup.component }}>\n              <ComponentSourceSnippetViewer\n                branchLike={this.props.branchLike}\n                highlightedLocationMessage={this.props.highlightedLocationMessage}\n                issue={this.props.issue}\n                issuePopup={this.state.issuePopup}\n                issuesByLine={issuesByComponent[snippetGroup.component.key] || {}}\n                last={i === locationsByComponent.length - 1}\n                loadDuplications={this.fetchDuplications}\n                locations={snippetGroup.locations || []}\n                onIssueChange={this.props.onIssueChange}\n                onIssuePopupToggle={this.handleIssuePopupToggle}\n                onLinePopupToggle={this.handleLinePopupToggle}\n                onLocationSelect={this.props.onLocationSelect}\n                renderDuplicationPopup={this.renderDuplicationPopup}\n                scroll={this.props.scroll}\n                snippetGroup={snippetGroup}\n                {...componentProps}\n              />\n            </SourceViewerContext.Provider>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar theme_1 = require(\"../theme\");\nvar Icon_1 = require(\"./Icon\");\nfunction FavoriteIcon(_a) {\n    var className = _a.className, favorite = _a.favorite, fill = _a.fill, size = _a.size;\n    return (React.createElement(theme_1.ThemeConsumer, null, function (theme) { return (React.createElement(Icon_1.default, { className: classNames('icon-outline', { 'is-filled': favorite }, className), size: size, style: { color: fill || theme.colors.orange } },\n        React.createElement(\"g\", { transform: \"matrix(0.988024,0,0,0.988024,0.0957953,0.717719)\" },\n            React.createElement(\"path\", { d: \"M15.428,5.777C15.428,5.908 15.35,6.051 15.195,6.205L11.954,9.366L12.722,13.83C12.728,13.872 12.731,13.932 12.731,14.009C12.731,14.134 12.7,14.24 12.637,14.326C12.575,14.412 12.484,14.455 12.365,14.455C12.252,14.455 12.133,14.42 12.008,14.348L7.999,12.241L3.99,14.348C3.859,14.42 3.74,14.455 3.633,14.455C3.508,14.455 3.414,14.412 3.352,14.326C3.289,14.24 3.258,14.134 3.258,14.009C3.258,13.973 3.264,13.914 3.276,13.83L4.044,9.366L0.794,6.205C0.645,6.045 0.57,5.902 0.57,5.777C0.57,5.557 0.737,5.42 1.07,5.366L5.552,4.714L7.561,0.652C7.674,0.408 7.82,0.286 7.999,0.286C8.177,0.286 8.323,0.408 8.436,0.652L10.445,4.714L14.927,5.366C15.261,5.42 15.427,5.557 15.427,5.777L15.428,5.777Z\" })))); }));\n}\nexports.default = FavoriteIcon;\n//# sourceMappingURL=FavoriteIcon.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar l10n_1 = require(\"../../helpers/l10n\");\nvar FavoriteIcon_1 = require(\"../icons/FavoriteIcon\");\nvar buttons_1 = require(\"./buttons\");\nvar Tooltip_1 = require(\"./Tooltip\");\nvar FavoriteButton = (function (_super) {\n    __extends(FavoriteButton, _super);\n    function FavoriteButton() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FavoriteButton.prototype.render = function () {\n        var _a = this.props, className = _a.className, favorite = _a.favorite, qualifier = _a.qualifier, toggleFavorite = _a.toggleFavorite;\n        var tooltip = favorite\n            ? l10n_1.translate('favorite.current', qualifier)\n            : l10n_1.translate('favorite.check', qualifier);\n        var ariaLabel = l10n_1.translate('favorite.action', favorite ? 'remove' : 'add');\n        return (React.createElement(Tooltip_1.default, { overlay: tooltip },\n            React.createElement(buttons_1.ButtonLink, { \"aria-label\": ariaLabel, className: classNames('favorite-link', 'link-no-underline', className), onClick: toggleFavorite },\n                React.createElement(FavoriteIcon_1.default, { favorite: favorite }))));\n    };\n    return FavoriteButton;\n}(React.PureComponent));\nexports.default = FavoriteButton;\n//# sourceMappingURL=FavoriteButton.js.map","var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n"],"sourceRoot":""}