{"version":3,"sources":["webpack:///./node_modules/lodash/intersection.js","webpack:///./node_modules/lodash/_baseIntersection.js","webpack:///./node_modules/lodash/_castArrayLikeObject.js","webpack:///./node_modules/lodash/times.js","webpack:///./node_modules/sonar-ui-common/components/icons/ExpandSnippetIcon.js","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/utils.ts","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/SnippetViewer.tsx","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/ComponentSourceSnippetViewer.tsx","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/CrossComponentSourceViewerWrapper.tsx","webpack:///./node_modules/lodash/groupBy.js","webpack:///./node_modules/sonar-ui-common/components/icons/FavoriteIcon.js","webpack:///./node_modules/sonar-ui-common/components/controls/FavoriteButton.js"],"names":["arrayMap","__webpack_require__","baseIntersection","baseRest","castArrayLikeObject","intersection","arrays","mapped","length","module","exports","SetCache","arrayIncludes","arrayIncludesWith","baseUnary","cacheHas","nativeMin","Math","min","iteratee","comparator","includes","othLength","othIndex","caches","Array","maxLength","Infinity","result","array","undefined","index","seen","outer","value","computed","cache","push","isArrayLikeObject","n","Object","defineProperty","React","Icon_1","default","_a","className","_b","fill","size","createElement","fillRule","d","stroke","strokeWidth","transform","LINES_ABOVE","LINES_BELOW","MERGE_DISTANCE","LINES_BELOW_LAST","EXPAND_BY_LINES","collision","startA","endA","startB","getPrimaryLocation","issue","component","textRange","endLine","endOffset","startLine","startOffset","SCROLL_LEFT_OFFSET","_super","SnippetViewer","props","_this","call","this","doScroll","element","scroll","parent","node","current","scrolling","leftOffset","rightOffset","getBoundingClientRect","width","expandBlock","direction","index_js_exposed","__extends","prototype","renderLine","displayDuplications","issuesForLine","issueLocations","line","snippet","symbols","verticalBuffer","secondaryIssueLocations","helpers_issueLocations","locations","duplications","duplicationsByLine","duplicationsCount","lineDuplications","isSinkLine","some","i","key","Line","branchLike","displayAllIssues","displayCoverage","displayIssues","displayLocationMarkers","highlighted","highlightedLocationMessage","helpers_lines","highlightedSymbols","issuePopup","issues","last","linePopup","loadDuplications","onIssueChange","onIssuePopupToggle","onIssueSelect","onIssueUnselect","onIssuesClose","handleCloseIssues","onIssuesOpen","handleOpenIssues","onLinePopupToggle","handleLinePopupToggle","onLocationSelect","onSymbolClick","handleSymbolClick","openIssues","openIssuesByLine","previousLine","renderDuplicationPopup","selectedIssue","render","issuesByLine","locationsByLine","lastLine","measures","lines","parseInt","indexing","bottomLine","issueLine","lowestVisibleIssue","max","apply","keys","map","k","filter","l","inSnippet","s","duplicated","ref","aria-label","l10n","onClick","type","ExpandSnippetIcon_default","a","classnames_default","expand-up","expand-down","ComponentSourceSnippetViewer","arguments","mounted","rootNodeRef","state","additionalLines","loading","snippets","snippetIndex","snippetGroup","find","extension","range","from","start","to","end","api_components","ComponentSourceSnippetViewer_assign","branches","then","reduce","lineMap","coverageStatus","getCoverageStatus","newLinesMapped","animateBlockExpansion","expandComponent","setState","ComponentSourceSnippetViewer_extends","componentDidMount","createSnippetsFromProps","componentWillUnmount","secondaryLocations","concat","loc","firstCollision","startIndex","endIndex","keep","getNodes","root","querySelector","wrapper","table","firstChild","setMaxHeight","up","nodes","maxHeight","height","startHeight","style","transition","marginTop","setTimeout","newSnippets_1","snippetToExpand","Error","toDelete","expandSnippet","deletedSnippets_1","forEach","renderSnippet","crossComponentSourceViewer_SnippetViewer","fullyShown","snippetLines","componentLines","linesForSnippets","sources","classnames","source-duplications-expanded","SourceViewerHeaderSlim","expandable","onExpand","sourceViewerFile","id","CrossComponentSourceViewerWrapper_CrossComponentSourceViewerWrapper","CrossComponentSourceViewerWrapper","components","fetchDuplications","CrossComponentSourceViewerWrapper_assign","r","duplicatedFiles","files","name","handleIssuePopupToggle","popupName","open","samePopup","handleCloseLinePopup","blocks","helpers_duplications","context","Consumer","openComponent","DuplicationPopup","inRemovedComponent","onClose","CrossComponentSourceViewerWrapper_extends","fetchIssueFlowSnippets","componentWillReceiveProps","newProps","issueKey","onLoaded","DeferredSpinner_default","issuesByComponent","locationsByComponent","currentGroup","currentComponent","groups","__assign","path","project","projectName","q","uuid","groupLocationsByComponent","componentProps","SourceViewerContext","Provider","selectedFlowIndex","file","crossComponentSourceViewer_ComponentSourceSnippetViewer","baseAssignValue","createAggregator","hasOwnProperty","groupBy","classNames","theme_1","favorite","ThemeConsumer","theme","is-filled","color","colors","orange","extendStatics","b","setPrototypeOf","__proto__","p","__","constructor","create","l10n_1","FavoriteIcon_1","buttons_1","Tooltip_1","FavoriteButton","qualifier","toggleFavorite","tooltip","translate","ariaLabel","overlay","ButtonLink","PureComponent"],"mappings":"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","file":"js/330.1570825310815.chunk.js","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar Icon_1 = require(\"./Icon\");\nfunction ExpandSnippetIcon(_a) {\n    var className = _a.className, _b = _a.fill, fill = _b === void 0 ? 'currentColor' : _b, size = _a.size;\n    return (React.createElement(Icon_1.default, { className: className, size: size },\n        React.createElement(\"g\", { fill: \"none\", fillRule: \"evenodd\" },\n            React.createElement(\"path\", { d: \"M8 1v4H4\", stroke: fill, strokeWidth: \"2\", transform: \"scale(-.83333 -.84583) rotate(45 7.66 -19.75)\" }),\n            React.createElement(\"path\", { d: \"M3 5.78h10v1.7H3z\", fill: fill }),\n            React.createElement(\"path\", { d: \"M7.17 2.4h1.66v5.07H7.17z\", fill: fill }),\n            React.createElement(\"g\", null,\n                React.createElement(\"path\", { d: \"M8.16 1.81V6.1H3.9\", stroke: fill, strokeWidth: \"2\", transform: \"scale(.83333 .84583) rotate(45 -4.2 13.2)\" }),\n                React.createElement(\"path\", { d: \"M13 10.01H3v-1.7h10z\", fill: fill }),\n                React.createElement(\"path\", { d: \"M8.83 13.4H7.17V9.15h1.66z\", fill: fill })))));\n}\nexports.default = ExpandSnippetIcon;\n//# sourceMappingURL=ExpandSnippetIcon.js.map","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nconst LINES_ABOVE = 2;\nconst LINES_BELOW = 2;\nexport const MERGE_DISTANCE = 4; // Merge if snippets are four lines away (separated by 3 lines) or fewer\nexport const LINES_BELOW_LAST = 9;\nexport const EXPAND_BY_LINES = 10;\n\nfunction unknownComponent(key: string): T.SnippetsByComponent {\n  return {\n    component: {\n      key,\n      measures: {},\n      path: '',\n      project: '',\n      projectName: '',\n      q: 'FIL',\n      uuid: ''\n    },\n    sources: []\n  };\n}\n\nfunction collision([startA, endA]: number[], [startB, endB]: number[]) {\n  return !(startA > endB + MERGE_DISTANCE || endA < startB - MERGE_DISTANCE);\n}\n\nfunction getPrimaryLocation(issue: T.Issue): T.FlowLocation {\n  return {\n    component: issue.component,\n    textRange: issue.textRange || {\n      endLine: 0,\n      endOffset: 0,\n      startLine: 0,\n      startOffset: 0\n    }\n  };\n}\n\nexport function createSnippets(\n  locations: T.FlowLocation[],\n  last: boolean,\n  issue?: T.Issue\n): T.Snippet[] {\n  // For each location's range (2 above and 2 below), and then compare with other ranges\n  // to merge snippets that collide.\n  return (issue ? [getPrimaryLocation(issue), ...locations] : locations).reduce(\n    (snippets: T.Snippet[], loc, index) => {\n      const startIndex = Math.max(1, loc.textRange.startLine - LINES_ABOVE);\n      const endIndex =\n        loc.textRange.endLine +\n        ((issue && index === 0) || (last && index === locations.length - 1)\n          ? LINES_BELOW_LAST\n          : LINES_BELOW);\n\n      let firstCollision: { start: number; end: number } | undefined;\n\n      // Remove ranges that collide into the first collision\n      snippets = snippets.filter(snippet => {\n        if (collision([snippet.start, snippet.end], [startIndex, endIndex])) {\n          let keep = false;\n          // Check if we've already collided\n          if (!firstCollision) {\n            firstCollision = snippet;\n            keep = true;\n          }\n          // Merge with first collision:\n          firstCollision.start = Math.min(startIndex, snippet.start, firstCollision.start);\n          firstCollision.end = Math.max(endIndex, snippet.end, firstCollision.end);\n\n          // remove the range if it was not the first collision\n          return keep;\n        }\n        return true;\n      });\n\n      if (firstCollision === undefined) {\n        snippets.push({\n          start: startIndex,\n          end: endIndex,\n          index\n        });\n      }\n\n      return snippets;\n    },\n    []\n  );\n}\n\nexport function linesForSnippets(snippets: T.Snippet[], componentLines: T.LineMap) {\n  return snippets\n    .map(snippet => {\n      const lines = [];\n      for (let i = snippet.start; i <= snippet.end; i++) {\n        if (componentLines[i]) {\n          lines.push(componentLines[i]);\n        }\n      }\n      return lines;\n    })\n    .filter(snippet => snippet.length > 0);\n}\n\nexport function groupLocationsByComponent(\n  locations: T.FlowLocation[],\n  components: { [key: string]: T.SnippetsByComponent }\n) {\n  let currentComponent = '';\n  let currentGroup: T.SnippetGroup;\n  const groups: T.SnippetGroup[] = [];\n\n  locations.forEach((loc, index) => {\n    if (loc.component !== currentComponent) {\n      currentGroup = {\n        ...(components[loc.component] || unknownComponent(loc.component)),\n        locations: []\n      };\n      groups.push(currentGroup);\n      currentComponent = loc.component;\n    }\n    loc.index = index;\n    currentGroup.locations.push(loc);\n  });\n\n  return groups;\n}\n\nexport function expandSnippet({\n  direction,\n  snippetIndex,\n  snippets\n}: {\n  direction: T.ExpandDirection;\n  snippetIndex: number;\n  snippets: T.Snippet[];\n}) {\n  const snippetToExpand = snippets.find(s => s.index === snippetIndex);\n  if (!snippetToExpand) {\n    throw new Error(`Snippet ${snippetIndex} not found`);\n  }\n\n  snippetToExpand.start = Math.max(\n    0,\n    snippetToExpand.start - (direction === 'up' ? EXPAND_BY_LINES : 0)\n  );\n  snippetToExpand.end += direction === 'down' ? EXPAND_BY_LINES : 0;\n\n  return snippets.map(snippet => {\n    if (snippet.index === snippetIndex) {\n      return snippetToExpand;\n    }\n    if (collision([snippet.start, snippet.end], [snippetToExpand.start, snippetToExpand.end])) {\n      // Merge with expanded snippet\n      snippetToExpand.start = Math.min(snippet.start, snippetToExpand.start);\n      snippetToExpand.end = Math.max(snippet.end, snippetToExpand.end);\n      snippet.toDelete = true;\n    }\n    return snippet;\n  });\n}\n\nexport function inSnippet(line: number, snippet: T.SourceLine[]) {\n  return line >= snippet[0].line && line <= snippet[snippet.length - 1].line;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport ExpandSnippetIcon from 'sonar-ui-common/components/icons/ExpandSnippetIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { scrollHorizontally } from 'sonar-ui-common/helpers/scrolling';\nimport Line from '../../../components/SourceViewer/components/Line';\nimport { symbolsByLine } from '../../../components/SourceViewer/helpers/indexing';\nimport { getSecondaryIssueLocationsForLine } from '../../../components/SourceViewer/helpers/issueLocations';\nimport {\n  optimizeHighlightedSymbols,\n  optimizeLocationMessage,\n  optimizeSelectedIssue\n} from '../../../components/SourceViewer/helpers/lines';\nimport { inSnippet, LINES_BELOW_LAST } from './utils';\n\ninterface Props {\n  branchLike: T.BranchLike | undefined;\n  component: T.SourceViewerFile;\n  duplications?: T.Duplication[];\n  duplicationsByLine?: { [line: number]: number[] };\n  expandBlock: (snippetIndex: number, direction: T.ExpandDirection) => void;\n  handleCloseIssues: (line: T.SourceLine) => void;\n  handleLinePopupToggle: (line: T.SourceLine) => void;\n  handleOpenIssues: (line: T.SourceLine) => void;\n  handleSymbolClick: (symbols: string[]) => void;\n  highlightedLocationMessage: { index: number; text: string | undefined } | undefined;\n  highlightedSymbols: string[];\n  index: number;\n  issue: T.Issue;\n  issuePopup?: { issue: string; name: string };\n  issuesByLine: T.IssuesByLine;\n  last: boolean;\n  linePopup?: T.LinePopup;\n  loadDuplications: (line: T.SourceLine) => void;\n  locations: T.FlowLocation[];\n  locationsByLine: { [line: number]: T.LinearIssueLocation[] };\n  onIssueChange: (issue: T.Issue) => void;\n  onIssuePopupToggle: (issue: string, popupName: string, open?: boolean) => void;\n  onLocationSelect: (index: number) => void;\n  openIssuesByLine: T.Dict<boolean>;\n  renderDuplicationPopup: (index: number, line: number) => React.ReactNode;\n  scroll?: (element: HTMLElement) => void;\n  snippet: T.SourceLine[];\n}\n\nconst SCROLL_LEFT_OFFSET = 32;\n\nexport default class SnippetViewer extends React.PureComponent<Props> {\n  node: React.RefObject<HTMLDivElement>;\n\n  constructor(props: Props) {\n    super(props);\n    this.node = React.createRef();\n  }\n\n  doScroll = (element: HTMLElement) => {\n    if (this.props.scroll) {\n      this.props.scroll(element);\n    }\n    const parent = this.node.current as Element;\n\n    if (parent) {\n      scrollHorizontally(element, {\n        leftOffset: SCROLL_LEFT_OFFSET,\n        rightOffset: parent.getBoundingClientRect().width - SCROLL_LEFT_OFFSET,\n        parent\n      });\n    }\n  };\n\n  expandBlock = (direction: T.ExpandDirection) => () =>\n    this.props.expandBlock(this.props.index, direction);\n\n  renderLine({\n    displayDuplications,\n    index,\n    issuesForLine,\n    issueLocations,\n    line,\n    snippet,\n    symbols,\n    verticalBuffer\n  }: {\n    displayDuplications: boolean;\n    index: number;\n    issuesForLine: T.Issue[];\n    issueLocations: T.LinearIssueLocation[];\n    line: T.SourceLine;\n    snippet: T.SourceLine[];\n    symbols: string[];\n    verticalBuffer: number;\n  }) {\n    const secondaryIssueLocations = getSecondaryIssueLocationsForLine(line, this.props.locations);\n\n    const { duplications, duplicationsByLine } = this.props;\n    const duplicationsCount = duplications ? duplications.length : 0;\n    const lineDuplications =\n      (duplicationsCount && duplicationsByLine && duplicationsByLine[line.line]) || [];\n\n    const isSinkLine = issuesForLine.some(i => i.key === this.props.issue.key);\n\n    return (\n      <Line\n        branchLike={this.props.branchLike}\n        displayAllIssues={false}\n        displayCoverage={true}\n        displayDuplications={displayDuplications}\n        displayIssues={!isSinkLine || issuesForLine.length > 1}\n        displayLocationMarkers={true}\n        duplications={lineDuplications}\n        duplicationsCount={duplicationsCount}\n        highlighted={false}\n        highlightedLocationMessage={optimizeLocationMessage(\n          this.props.highlightedLocationMessage,\n          secondaryIssueLocations\n        )}\n        highlightedSymbols={optimizeHighlightedSymbols(symbols, this.props.highlightedSymbols)}\n        issueLocations={issueLocations}\n        issuePopup={this.props.issuePopup}\n        issues={issuesForLine}\n        key={line.line}\n        last={false}\n        line={line}\n        linePopup={this.props.linePopup}\n        loadDuplications={this.props.loadDuplications}\n        onIssueChange={this.props.onIssueChange}\n        onIssuePopupToggle={this.props.onIssuePopupToggle}\n        onIssueSelect={() => {}}\n        onIssueUnselect={() => {}}\n        onIssuesClose={this.props.handleCloseIssues}\n        onIssuesOpen={this.props.handleOpenIssues}\n        onLinePopupToggle={this.props.handleLinePopupToggle}\n        onLocationSelect={this.props.onLocationSelect}\n        onSymbolClick={this.props.handleSymbolClick}\n        openIssues={this.props.openIssuesByLine[line.line]}\n        previousLine={index > 0 ? snippet[index - 1] : undefined}\n        renderDuplicationPopup={this.props.renderDuplicationPopup}\n        scroll={this.doScroll}\n        secondaryIssueLocations={secondaryIssueLocations}\n        selectedIssue={optimizeSelectedIssue(this.props.issue.key, issuesForLine)}\n        verticalBuffer={verticalBuffer}\n      />\n    );\n  }\n\n  render() {\n    const {\n      component,\n      issue,\n      issuesByLine = {},\n      last,\n      locationsByLine,\n      openIssuesByLine,\n      snippet\n    } = this.props;\n    const lastLine =\n      component.measures && component.measures.lines && parseInt(component.measures.lines, 10);\n\n    const symbols = symbolsByLine(snippet);\n\n    const bottomLine = snippet[snippet.length - 1].line;\n    const issueLine = issue.textRange ? issue.textRange.endLine : issue.line;\n    const lowestVisibleIssue = Math.max(\n      ...Object.keys(issuesByLine)\n        .map(k => parseInt(k, 10))\n        .filter(l => inSnippet(l, snippet) && (l === issueLine || openIssuesByLine[l]))\n    );\n    const verticalBuffer = last\n      ? Math.max(0, LINES_BELOW_LAST - (bottomLine - lowestVisibleIssue))\n      : 0;\n\n    const displayDuplications = snippet.some(s => !!s.duplicated);\n\n    return (\n      <div className=\"source-viewer-code snippet\" ref={this.node}>\n        <div>\n          {snippet[0].line > 1 && (\n            <div className=\"expand-block expand-block-above\">\n              <button\n                aria-label={translate('source_viewer.expand_above')}\n                onClick={this.expandBlock('up')}\n                type=\"button\">\n                <ExpandSnippetIcon />\n              </button>\n            </div>\n          )}\n          <table\n            className={classNames('source-table', {\n              'expand-up': snippet[0].line > 1,\n              'expand-down': !lastLine || snippet[snippet.length - 1].line < lastLine\n            })}>\n            <tbody>\n              {snippet.map((line, index) =>\n                this.renderLine({\n                  displayDuplications,\n                  index,\n                  issuesForLine: issuesByLine[line.line] || [],\n                  issueLocations: locationsByLine[line.line] || [],\n                  line,\n                  snippet,\n                  symbols: symbols[line.line],\n                  verticalBuffer: index === snippet.length - 1 ? verticalBuffer : 0\n                })\n              )}\n            </tbody>\n          </table>\n          {(!lastLine || snippet[snippet.length - 1].line < lastLine) && (\n            <div className=\"expand-block expand-block-below\">\n              <button\n                aria-label={translate('source_viewer.expand_below')}\n                onClick={this.expandBlock('down')}\n                type=\"button\">\n                <ExpandSnippetIcon />\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { getSources } from '../../../api/components';\nimport getCoverageStatus from '../../../components/SourceViewer/helpers/getCoverageStatus';\nimport { locationsByLine } from '../../../components/SourceViewer/helpers/indexing';\nimport SourceViewerHeaderSlim from '../../../components/SourceViewer/SourceViewerHeaderSlim';\nimport { getBranchLikeQuery } from '../../../helpers/branches';\nimport SnippetViewer from './SnippetViewer';\nimport {\n  createSnippets,\n  expandSnippet,\n  EXPAND_BY_LINES,\n  linesForSnippets,\n  MERGE_DISTANCE\n} from './utils';\n\ninterface Props {\n  branchLike: T.BranchLike | undefined;\n  duplications?: T.Duplication[];\n  duplicationsByLine?: { [line: number]: number[] };\n  highlightedLocationMessage: { index: number; text: string | undefined } | undefined;\n  issue: T.Issue;\n  issuePopup?: { issue: string; name: string };\n  issuesByLine: T.IssuesByLine;\n  last: boolean;\n  linePopup?: T.LinePopup;\n  loadDuplications: (component: string, line: T.SourceLine) => void;\n  locations: T.FlowLocation[];\n  onIssueChange: (issue: T.Issue) => void;\n  onIssuePopupToggle: (issue: string, popupName: string, open?: boolean) => void;\n  onLinePopupToggle: (linePopup: T.LinePopup & { component: string }) => void;\n  onLocationSelect: (index: number) => void;\n  renderDuplicationPopup: (\n    component: T.SourceViewerFile,\n    index: number,\n    line: number\n  ) => React.ReactNode;\n  scroll?: (element: HTMLElement) => void;\n  snippetGroup: T.SnippetGroup;\n}\n\ninterface State {\n  additionalLines: { [line: number]: T.SourceLine };\n  highlightedSymbols: string[];\n  loading: boolean;\n  openIssuesByLine: T.Dict<boolean>;\n  snippets: T.Snippet[];\n}\n\nexport default class ComponentSourceSnippetViewer extends React.PureComponent<Props, State> {\n  mounted = false;\n  rootNodeRef = React.createRef<HTMLDivElement>();\n  state: State = {\n    additionalLines: {},\n    highlightedSymbols: [],\n    loading: false,\n    openIssuesByLine: {},\n    snippets: []\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.createSnippetsFromProps();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  createSnippetsFromProps() {\n    const snippets = createSnippets(\n      this.props.snippetGroup.locations,\n      this.props.last,\n      this.props.issue.secondaryLocations.length > 0 ? this.props.issue : undefined\n    );\n\n    this.setState({ snippets });\n  }\n\n  getNodes(index: number): { wrapper: HTMLElement; table: HTMLElement } | undefined {\n    const root = this.rootNodeRef.current;\n    if (!root) {\n      return undefined;\n    }\n    const element = root.querySelector(`#snippet-wrapper-${index}`);\n    if (!element) {\n      return undefined;\n    }\n    const wrapper = element.querySelector<HTMLElement>('.snippet');\n    if (!wrapper) {\n      return undefined;\n    }\n    const table = wrapper.firstChild as HTMLElement;\n    if (!table) {\n      return undefined;\n    }\n\n    return { wrapper, table };\n  }\n\n  setMaxHeight(index: number, value?: number, up = false) {\n    const nodes = this.getNodes(index);\n\n    if (!nodes) {\n      return;\n    }\n\n    const { wrapper, table } = nodes;\n\n    const maxHeight = value !== undefined ? value : table.getBoundingClientRect().height;\n\n    if (up) {\n      const startHeight = wrapper.getBoundingClientRect().height;\n      table.style.transition = 'none';\n      table.style.marginTop = `${startHeight - maxHeight}px`;\n\n      // animate!\n      setTimeout(() => {\n        table.style.transition = '';\n        table.style.marginTop = '0px';\n        wrapper.style.maxHeight = `${maxHeight + 20}px`;\n      }, 0);\n    } else {\n      wrapper.style.maxHeight = `${maxHeight + 20}px`;\n    }\n  }\n\n  expandBlock = (snippetIndex: number, direction: T.ExpandDirection) => {\n    const { branchLike, snippetGroup } = this.props;\n    const { key } = snippetGroup.component;\n    const { snippets } = this.state;\n    const snippet = snippets.find(s => s.index === snippetIndex);\n    if (!snippet) {\n      return;\n    }\n    // Extend by EXPAND_BY_LINES and add buffer for merging snippets\n    const extension = EXPAND_BY_LINES + MERGE_DISTANCE - 1;\n    const range =\n      direction === 'up'\n        ? {\n            from: Math.max(1, snippet.start - extension),\n            to: snippet.start - 1\n          }\n        : {\n            from: snippet.end + 1,\n            to: snippet.end + extension\n          };\n    getSources({\n      key,\n      ...range,\n      ...getBranchLikeQuery(branchLike)\n    })\n      .then(lines =>\n        lines.reduce((lineMap: T.Dict<T.SourceLine>, line) => {\n          line.coverageStatus = getCoverageStatus(line);\n          lineMap[line.line] = line;\n          return lineMap;\n        }, {})\n      )\n      .then(\n        newLinesMapped => this.animateBlockExpansion(snippetIndex, direction, newLinesMapped),\n        () => {}\n      );\n  };\n\n  animateBlockExpansion(\n    snippetIndex: number,\n    direction: T.ExpandDirection,\n    newLinesMapped: T.Dict<T.SourceLine>\n  ) {\n    if (this.mounted) {\n      const { snippets } = this.state;\n\n      const newSnippets = expandSnippet({\n        direction,\n        snippetIndex,\n        snippets\n      });\n\n      const deletedSnippets = newSnippets.filter(s => s.toDelete);\n\n      // set max-height to current height for CSS transitions\n      deletedSnippets.forEach(s => this.setMaxHeight(s.index));\n      this.setMaxHeight(snippetIndex);\n\n      this.setState(\n        ({ additionalLines, snippets }) => {\n          const combinedLines = { ...additionalLines, ...newLinesMapped };\n          return {\n            additionalLines: combinedLines,\n            snippets\n          };\n        },\n        () => {\n          // Set max-height 0 to trigger CSS transitions\n          deletedSnippets.forEach(s => {\n            this.setMaxHeight(s.index, 0);\n          });\n          this.setMaxHeight(snippetIndex, undefined, direction === 'up');\n\n          // Wait for transition to finish before updating dom\n          setTimeout(() => {\n            this.setState({ snippets: newSnippets.filter(s => !s.toDelete) });\n          }, 200);\n        }\n      );\n    }\n  }\n\n  expandComponent = () => {\n    const { branchLike, snippetGroup } = this.props;\n    const { key } = snippetGroup.component;\n\n    this.setState({ loading: true });\n\n    getSources({ key, ...getBranchLikeQuery(branchLike) }).then(\n      lines => {\n        if (this.mounted) {\n          this.setState(({ additionalLines }) => {\n            const combinedLines = { ...additionalLines, ...lines };\n            return {\n              additionalLines: combinedLines,\n              loading: false,\n              snippets: [{ start: 0, end: lines[lines.length - 1].line, index: -1 }]\n            };\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  handleLinePopupToggle = (linePopup: T.LinePopup) => {\n    this.props.onLinePopupToggle({\n      ...linePopup,\n      component: this.props.snippetGroup.component.key\n    });\n  };\n\n  handleOpenIssues = (line: T.SourceLine) => {\n    this.setState(state => ({\n      openIssuesByLine: { ...state.openIssuesByLine, [line.line]: true }\n    }));\n  };\n\n  handleCloseIssues = (line: T.SourceLine) => {\n    this.setState(state => ({\n      openIssuesByLine: { ...state.openIssuesByLine, [line.line]: false }\n    }));\n  };\n\n  handleSymbolClick = (highlightedSymbols: string[]) => {\n    this.setState({ highlightedSymbols });\n  };\n\n  loadDuplications = (line: T.SourceLine) => {\n    this.props.loadDuplications(this.props.snippetGroup.component.key, line);\n  };\n\n  renderDuplicationPopup = (index: number, line: number) => {\n    return this.props.renderDuplicationPopup(this.props.snippetGroup.component, index, line);\n  };\n\n  renderSnippet({\n    index,\n    issuesByLine,\n    last,\n    locationsByLine,\n    snippet\n  }: {\n    index: number;\n    issuesByLine: T.IssuesByLine;\n    last: boolean;\n    locationsByLine: { [line: number]: T.LinearIssueLocation[] };\n    snippet: T.SourceLine[];\n  }) {\n    return (\n      <SnippetViewer\n        branchLike={this.props.branchLike}\n        component={this.props.snippetGroup.component}\n        expandBlock={this.expandBlock}\n        handleCloseIssues={this.handleCloseIssues}\n        handleLinePopupToggle={this.handleLinePopupToggle}\n        handleOpenIssues={this.handleOpenIssues}\n        handleSymbolClick={this.handleSymbolClick}\n        highlightedLocationMessage={this.props.highlightedLocationMessage}\n        highlightedSymbols={this.state.highlightedSymbols}\n        index={index}\n        issue={this.props.issue}\n        issuePopup={this.props.issuePopup}\n        issuesByLine={issuesByLine}\n        last={last}\n        linePopup={this.props.linePopup}\n        loadDuplications={this.loadDuplications}\n        locations={this.props.locations}\n        locationsByLine={locationsByLine}\n        onIssueChange={this.props.onIssueChange}\n        onIssuePopupToggle={this.props.onIssuePopupToggle}\n        onLocationSelect={this.props.onLocationSelect}\n        openIssuesByLine={this.state.openIssuesByLine}\n        renderDuplicationPopup={this.renderDuplicationPopup}\n        scroll={this.props.scroll}\n        snippet={snippet}\n      />\n    );\n  }\n\n  render() {\n    const { branchLike, duplications, issue, issuesByLine, last, snippetGroup } = this.props;\n    const { additionalLines, loading, snippets } = this.state;\n    const locations = locationsByLine([issue]);\n\n    const fullyShown =\n      snippets.length === 1 &&\n      snippetGroup.component.measures &&\n      snippets[0].end - snippets[0].start ===\n        parseInt(snippetGroup.component.measures.lines || '', 10);\n\n    const snippetLines = linesForSnippets(snippets, {\n      ...snippetGroup.sources,\n      ...additionalLines\n    });\n\n    return (\n      <div\n        className={classNames('component-source-container', {\n          'source-duplications-expanded': duplications && duplications.length > 0\n        })}\n        ref={this.rootNodeRef}>\n        <SourceViewerHeaderSlim\n          branchLike={branchLike}\n          expandable={!fullyShown}\n          loading={loading}\n          onExpand={this.expandComponent}\n          sourceViewerFile={snippetGroup.component}\n        />\n        {snippetLines.map((snippet, index) => (\n          <div id={`snippet-wrapper-${snippets[index].index}`} key={snippets[index].index}>\n            {this.renderSnippet({\n              snippet,\n              index: snippets[index].index,\n              issuesByLine: last ? issuesByLine : {},\n              locationsByLine: last && index === snippets.length - 1 ? locations : {},\n              last: last && index === snippets.length - 1\n            })}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { getDuplications } from '../../../api/components';\nimport { getIssueFlowSnippets } from '../../../api/issues';\nimport DuplicationPopup from '../../../components/SourceViewer/components/DuplicationPopup';\nimport {\n  filterDuplicationBlocksByLine,\n  getDuplicationBlocksForIndex,\n  isDuplicationBlockInRemovedComponent\n} from '../../../components/SourceViewer/helpers/duplications';\nimport {\n  duplicationsByLine,\n  issuesByComponentAndLine\n} from '../../../components/SourceViewer/helpers/indexing';\nimport { SourceViewerContext } from '../../../components/SourceViewer/SourceViewerContext';\nimport { WorkspaceContext } from '../../../components/workspace/context';\nimport { getBranchLikeQuery } from '../../../helpers/branches';\nimport ComponentSourceSnippetViewer from './ComponentSourceSnippetViewer';\nimport { groupLocationsByComponent } from './utils';\n\ninterface Props {\n  branchLike: T.Branch | T.PullRequest | undefined;\n  highlightedLocationMessage?: { index: number; text: string | undefined };\n  issue: T.Issue;\n  issues: T.Issue[];\n  locations: T.FlowLocation[];\n  onIssueChange: (issue: T.Issue) => void;\n  onLoaded?: () => void;\n  onLocationSelect: (index: number) => void;\n  scroll?: (element: HTMLElement) => void;\n  selectedFlowIndex: number | undefined;\n}\n\ninterface State {\n  components: T.Dict<T.SnippetsByComponent>;\n  duplicatedFiles?: T.Dict<T.DuplicatedFile>;\n  duplications?: T.Duplication[];\n  duplicationsByLine: { [line: number]: number[] };\n  issuePopup?: { issue: string; name: string };\n  linePopup?: T.LinePopup & { component: string };\n  loading: boolean;\n}\n\nexport default class CrossComponentSourceViewerWrapper extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    components: {},\n    duplicationsByLine: {},\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIssueFlowSnippets(this.props.issue.key);\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (newProps.issue.key !== this.props.issue.key) {\n      this.fetchIssueFlowSnippets(newProps.issue.key);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchDuplications = (component: string, line: T.SourceLine) => {\n    getDuplications({\n      key: component,\n      ...getBranchLikeQuery(this.props.branchLike)\n    }).then(\n      r => {\n        if (this.mounted) {\n          this.setState(state => ({\n            duplicatedFiles: r.files,\n            duplications: r.duplications,\n            duplicationsByLine: duplicationsByLine(r.duplications),\n            linePopup:\n              r.duplications.length === 1\n                ? { component, index: 0, line: line.line, name: 'duplications' }\n                : state.linePopup\n          }));\n        }\n      },\n      () => {}\n    );\n  };\n\n  fetchIssueFlowSnippets(issueKey: string) {\n    this.setState({ loading: true });\n    getIssueFlowSnippets(issueKey).then(\n      components => {\n        if (this.mounted) {\n          this.setState({\n            components,\n            issuePopup: undefined,\n            linePopup: undefined,\n            loading: false\n          });\n          if (this.props.onLoaded) {\n            this.props.onLoaded();\n          }\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleIssuePopupToggle = (issue: string, popupName: string, open?: boolean) => {\n    this.setState((state: State) => {\n      const samePopup =\n        state.issuePopup && state.issuePopup.name === popupName && state.issuePopup.issue === issue;\n      if (open !== false && !samePopup) {\n        return { issuePopup: { issue, name: popupName } };\n      } else if (open !== true && samePopup) {\n        return { issuePopup: undefined };\n      }\n      return null;\n    });\n  };\n\n  handleLinePopupToggle = ({\n    component,\n    index,\n    line,\n    name,\n    open\n  }: T.LinePopup & { component: string }) => {\n    this.setState((state: State) => {\n      const samePopup =\n        state.linePopup !== undefined &&\n        state.linePopup.line === line &&\n        state.linePopup.name === name &&\n        state.linePopup.component === component &&\n        state.linePopup.index === index;\n      if (open !== false && !samePopup) {\n        return { linePopup: { component, index, line, name } };\n      } else if (open !== true && samePopup) {\n        return { linePopup: undefined };\n      }\n      return null;\n    });\n  };\n\n  handleCloseLinePopup = () => {\n    this.setState({ linePopup: undefined });\n  };\n\n  renderDuplicationPopup = (component: T.SourceViewerFile, index: number, line: number) => {\n    const { duplicatedFiles, duplications } = this.state;\n\n    if (!component || !duplicatedFiles) {\n      return null;\n    }\n\n    const blocks = getDuplicationBlocksForIndex(duplications, index);\n\n    return (\n      <WorkspaceContext.Consumer>\n        {({ openComponent }) => (\n          <DuplicationPopup\n            blocks={filterDuplicationBlocksByLine(blocks, line)}\n            branchLike={this.props.branchLike}\n            duplicatedFiles={duplicatedFiles}\n            inRemovedComponent={isDuplicationBlockInRemovedComponent(blocks)}\n            onClose={this.handleCloseLinePopup}\n            openComponent={openComponent}\n            sourceViewerFile={component}\n          />\n        )}\n      </WorkspaceContext.Consumer>\n    );\n  };\n\n  render() {\n    const { loading } = this.state;\n\n    if (loading) {\n      return (\n        <div>\n          <DeferredSpinner />\n        </div>\n      );\n    }\n\n    const { components, duplications, duplicationsByLine, linePopup } = this.state;\n    const issuesByComponent = issuesByComponentAndLine(this.props.issues);\n    const locationsByComponent = groupLocationsByComponent(this.props.locations, components);\n\n    return (\n      <div>\n        {locationsByComponent.map((snippetGroup, i) => {\n          let componentProps = {};\n          if (linePopup && snippetGroup.component.key === linePopup.component) {\n            componentProps = {\n              duplications,\n              duplicationsByLine,\n              linePopup: { index: linePopup.index, line: linePopup.line, name: linePopup.name }\n            };\n          }\n          return (\n            <SourceViewerContext.Provider\n              key={`${this.props.issue.key}-${this.props.selectedFlowIndex || 0}-${i}`}\n              value={{ branchLike: this.props.branchLike, file: snippetGroup.component }}>\n              <ComponentSourceSnippetViewer\n                branchLike={this.props.branchLike}\n                highlightedLocationMessage={this.props.highlightedLocationMessage}\n                issue={this.props.issue}\n                issuePopup={this.state.issuePopup}\n                issuesByLine={issuesByComponent[snippetGroup.component.key] || {}}\n                last={i === locationsByComponent.length - 1}\n                loadDuplications={this.fetchDuplications}\n                locations={snippetGroup.locations || []}\n                onIssueChange={this.props.onIssueChange}\n                onIssuePopupToggle={this.handleIssuePopupToggle}\n                onLinePopupToggle={this.handleLinePopupToggle}\n                onLocationSelect={this.props.onLocationSelect}\n                renderDuplicationPopup={this.renderDuplicationPopup}\n                scroll={this.props.scroll}\n                snippetGroup={snippetGroup}\n                {...componentProps}\n              />\n            </SourceViewerContext.Provider>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar theme_1 = require(\"../theme\");\nvar Icon_1 = require(\"./Icon\");\nfunction FavoriteIcon(_a) {\n    var className = _a.className, favorite = _a.favorite, fill = _a.fill, size = _a.size;\n    return (React.createElement(theme_1.ThemeConsumer, null, function (theme) { return (React.createElement(Icon_1.default, { className: classNames('icon-outline', { 'is-filled': favorite }, className), size: size, style: { color: fill || theme.colors.orange } },\n        React.createElement(\"g\", { transform: \"matrix(0.988024,0,0,0.988024,0.0957953,0.717719)\" },\n            React.createElement(\"path\", { d: \"M15.428,5.777C15.428,5.908 15.35,6.051 15.195,6.205L11.954,9.366L12.722,13.83C12.728,13.872 12.731,13.932 12.731,14.009C12.731,14.134 12.7,14.24 12.637,14.326C12.575,14.412 12.484,14.455 12.365,14.455C12.252,14.455 12.133,14.42 12.008,14.348L7.999,12.241L3.99,14.348C3.859,14.42 3.74,14.455 3.633,14.455C3.508,14.455 3.414,14.412 3.352,14.326C3.289,14.24 3.258,14.134 3.258,14.009C3.258,13.973 3.264,13.914 3.276,13.83L4.044,9.366L0.794,6.205C0.645,6.045 0.57,5.902 0.57,5.777C0.57,5.557 0.737,5.42 1.07,5.366L5.552,4.714L7.561,0.652C7.674,0.408 7.82,0.286 7.999,0.286C8.177,0.286 8.323,0.408 8.436,0.652L10.445,4.714L14.927,5.366C15.261,5.42 15.427,5.557 15.427,5.777L15.428,5.777Z\" })))); }));\n}\nexports.default = FavoriteIcon;\n//# sourceMappingURL=FavoriteIcon.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar l10n_1 = require(\"../../helpers/l10n\");\nvar FavoriteIcon_1 = require(\"../icons/FavoriteIcon\");\nvar buttons_1 = require(\"./buttons\");\nvar Tooltip_1 = require(\"./Tooltip\");\nvar FavoriteButton = (function (_super) {\n    __extends(FavoriteButton, _super);\n    function FavoriteButton() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FavoriteButton.prototype.render = function () {\n        var _a = this.props, className = _a.className, favorite = _a.favorite, qualifier = _a.qualifier, toggleFavorite = _a.toggleFavorite;\n        var tooltip = favorite\n            ? l10n_1.translate('favorite.current', qualifier)\n            : l10n_1.translate('favorite.check', qualifier);\n        var ariaLabel = l10n_1.translate('favorite.action', favorite ? 'remove' : 'add');\n        return (React.createElement(Tooltip_1.default, { overlay: tooltip },\n            React.createElement(buttons_1.ButtonLink, { \"aria-label\": ariaLabel, className: classNames('favorite-link', 'link-no-underline', className), onClick: toggleFavorite },\n                React.createElement(FavoriteIcon_1.default, { favorite: favorite }))));\n    };\n    return FavoriteButton;\n}(React.PureComponent));\nexports.default = FavoriteButton;\n//# sourceMappingURL=FavoriteButton.js.map"],"sourceRoot":""}