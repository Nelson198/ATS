{"version":3,"sources":["webpack:///./src/main/js/apps/quality-profiles/styles.css?32c6","webpack:///./src/main/js/apps/quality-profiles/styles.css","webpack:///./src/main/js/apps/quality-profiles/components/AppContainer.tsx","webpack:///./src/main/js/apps/quality-profiles/components/App.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/api/quality-profiles.ts","webpack:///./node_modules/lodash/map.js","webpack:///./node_modules/sonar-ui-common/helpers/csv.js","webpack:///./src/main/js/components/common/OrganizationHelmet.tsx"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","__webpack_exports__","Object","es","state","ownProps","languages","rootReducer","organization","params","organizationKey","index_js_exposed","[object Object]","this","mounted","loading","updateProfiles","fetchProfiles","then","r","setState","profiles","utils","loadData","props","data","key","quality_profiles","Promise","all","responses","_responses","_slicedToArray","exporters","profilesResponse","actions","className","finalLanguages","values","children","Suggestions","suggestions","OrganizationHelmet","title","l10n","renderChild","d","react__WEBPACK_IMPORTED_MODULE_0__","_SuggestionsContext__WEBPACK_IMPORTED_MODULE_1__","_ref","Consumer","_ref2","addSuggestions","removeSuggestions","SuggestionsInner","prevProps","searchQualityProfiles","parameters","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_2__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_3__","getQualityProfile","createQualityProfile","restoreQualityProfile","getProfileProjects","getProfileInheritance","profileKey","setDefaultProfile","renameProfile","name","copyProfile","fromKey","toName","deleteProfile","changeProfileParent","parentKey","getImporters","importers","getExporters","getProfileChangelog","compareProfiles","leftKey","rightKey","associateProject","project","dissociateProject","searchUsers","searchGroups","addUser","removeUser","addGroup","removeGroup","bulkActivateRules","bulkDeactivateRules","activateRule","lodash_map__WEBPACK_IMPORTED_MODULE_0___default","value","concat","sonar_ui_common_helpers_csv__WEBPACK_IMPORTED_MODULE_1__","join","assign","deactivateRule","arrayMap","baseIteratee","baseMap","isArray","collection","iteratee","defineProperty","csvEscape","replace","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","n","defaultTitle","a","titleTemplate"],"mappings":"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","file":"js/332.m.b3fd492d.chunk.js","sourcesContent":["\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".quality-profiles-table{padding-top:7px}.quality-profiles-table-inheritance{width:280px}.quality-profiles-table-date,.quality-profiles-table-projects,.quality-profiles-table-rules{min-width:80px}.quality-profiles-list-header{line-height:24px;margin-bottom:20px;padding:5px 10px;border-bottom:1px solid #e6e6e6}.quality-profile-grid{display:flex;justify-content:space-between;align-items:flex-start}.quality-profile-grid-left{width:340px;flex-shrink:0}.quality-profile-grid-right{flex-grow:1;margin-left:20px}.quality-profile-rules-distribution{margin-bottom:15px;padding:7px 20px 0}.quality-profile-rules-deprecated{margin-top:20px;padding:15px 20px;background-color:#f2dede}.quality-profile-rules-sonarway-missing{margin-top:20px;padding:15px 20px;background-color:#fcf8e3}.quality-profile-not-found{padding-top:100px;text-align:center}.quality-profiles-evolution{padding-top:55px}.quality-profiles-evolution-deprecated{border-color:#f4b1b0;background-color:#f2dede}.quality-profiles-evolution-stagnant{border-color:#faebcc;background-color:#fcf8e3}.quality-profile-comparison-table{table-layout:fixed}.quality-profile-changelog-rule-cell{line-height:1.5}.quality-profile-changelog-parameter{max-width:270px;word-break:break-word}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { getLanguages, getOrganizationByKey, Store } from '../../../store/rootReducer';\nimport App from './App';\n\nconst mapStateToProps = (state: Store, ownProps: any) => ({\n  languages: getLanguages(state),\n  organization: ownProps.params.organizationKey\n    ? getOrganizationByKey(state, ownProps.params.organizationKey)\n    : undefined\n});\n\nexport default connect(mapStateToProps)(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Actions, getExporters, searchQualityProfiles } from '../../../api/quality-profiles';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport OrganizationHelmet from '../../../components/common/OrganizationHelmet';\nimport '../styles.css';\nimport { Exporter, Profile } from '../types';\nimport { sortProfiles } from '../utils';\n\ninterface Props {\n  children: React.ReactElement<any>;\n  languages: T.Languages;\n  organization: { name: string; key: string } | undefined;\n}\n\ninterface State {\n  actions?: Actions;\n  loading: boolean;\n  exporters?: Exporter[];\n  profiles?: Profile[];\n}\n\nexport default class App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadData();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchProfiles() {\n    const { organization } = this.props;\n    const data = organization ? { organization: organization.key } : {};\n    return searchQualityProfiles(data);\n  }\n\n  loadData() {\n    this.setState({ loading: true });\n    Promise.all([getExporters(), this.fetchProfiles()]).then(\n      responses => {\n        if (this.mounted) {\n          const [exporters, profilesResponse] = responses;\n          this.setState({\n            actions: profilesResponse.actions,\n            exporters,\n            profiles: sortProfiles(profilesResponse.profiles),\n            loading: false\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  updateProfiles = () => {\n    return this.fetchProfiles().then(r => {\n      if (this.mounted) {\n        this.setState({ profiles: sortProfiles(r.profiles) });\n      }\n    });\n  };\n\n  renderChild() {\n    if (this.state.loading) {\n      return <i className=\"spinner\" />;\n    }\n    const { organization } = this.props;\n    const finalLanguages = Object.values(this.props.languages);\n\n    return React.cloneElement(this.props.children, {\n      actions: this.state.actions || {},\n      profiles: this.state.profiles || [],\n      languages: finalLanguages,\n      exporters: this.state.exporters,\n      updateProfiles: this.updateProfiles,\n      organization: organization ? organization.key : null\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"page page-limited\">\n        <Suggestions suggestions=\"quality_profiles\" />\n        <OrganizationHelmet\n          organization={this.props.organization}\n          title={translate('quality_profiles.page')}\n        />\n\n        {this.renderChild()}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { map } from 'lodash';\nimport { csvEscape } from 'sonar-ui-common/helpers/csv';\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport interface ProfileActions {\n  associateProjects?: boolean;\n  copy?: boolean;\n  delete?: boolean;\n  edit?: boolean;\n  setAsDefault?: boolean;\n}\n\nexport interface Actions {\n  create?: boolean;\n}\n\nexport interface Profile {\n  actions?: ProfileActions;\n  key: string;\n  name: string;\n  language: string;\n  languageName: string;\n  isInherited?: boolean;\n  parentKey?: string;\n  parentName?: string;\n  isDefault?: boolean;\n  activeRuleCount: number;\n  activeDeprecatedRuleCount: number;\n  rulesUpdatedAt?: string;\n  lastUsed?: string;\n  userUpdatedAt?: string;\n  organization: string;\n  isBuiltIn?: boolean;\n  projectCount?: number;\n}\n\nexport interface SearchQualityProfilesParameters {\n  defaults?: boolean;\n  language?: string;\n  organization?: string;\n  project?: string;\n  qualityProfile?: string;\n}\n\nexport interface SearchQualityProfilesResponse {\n  actions?: Actions;\n  profiles: Profile[];\n}\n\nexport function searchQualityProfiles(\n  parameters: SearchQualityProfilesParameters\n): Promise<SearchQualityProfilesResponse> {\n  return getJSON('/api/qualityprofiles/search', parameters).catch(throwGlobalError);\n}\n\nexport function getQualityProfile(data: {\n  compareToSonarWay?: boolean;\n  profile: string;\n}): Promise<any> {\n  return getJSON('/api/qualityprofiles/show', data);\n}\n\nexport function createQualityProfile(data: RequestData): Promise<any> {\n  return postJSON('/api/qualityprofiles/create', data).catch(throwGlobalError);\n}\n\nexport function restoreQualityProfile(data: RequestData): Promise<any> {\n  return postJSON('/api/qualityprofiles/restore', data).catch(throwGlobalError);\n}\n\nexport interface ProfileProject {\n  id: number;\n  key: string;\n  name: string;\n  selected: boolean;\n}\n\nexport function getProfileProjects(\n  data: RequestData\n): Promise<{ more: boolean; paging: T.Paging; results: ProfileProject[] }> {\n  return getJSON('/api/qualityprofiles/projects', data).catch(throwGlobalError);\n}\n\nexport function getProfileInheritance(\n  profileKey: string\n): Promise<{\n  ancestors: T.ProfileInheritanceDetails[];\n  children: T.ProfileInheritanceDetails[];\n  profile: T.ProfileInheritanceDetails;\n}> {\n  return getJSON('/api/qualityprofiles/inheritance', { profileKey }).catch(throwGlobalError);\n}\n\nexport function setDefaultProfile(profileKey: string) {\n  return post('/api/qualityprofiles/set_default', { profileKey });\n}\n\nexport function renameProfile(key: string, name: string) {\n  return post('/api/qualityprofiles/rename', { key, name }).catch(throwGlobalError);\n}\n\nexport function copyProfile(fromKey: string, toName: string): Promise<any> {\n  return postJSON('/api/qualityprofiles/copy', { fromKey, toName }).catch(throwGlobalError);\n}\n\nexport function deleteProfile(profileKey: string) {\n  return post('/api/qualityprofiles/delete', { profileKey }).catch(throwGlobalError);\n}\n\nexport function changeProfileParent(profileKey: string, parentKey: string) {\n  return post('/api/qualityprofiles/change_parent', {\n    profileKey,\n    parentKey\n  }).catch(throwGlobalError);\n}\n\nexport function getImporters(): Promise<\n  Array<{ key: string; languages: Array<string>; name: string }>\n> {\n  return getJSON('/api/qualityprofiles/importers').then(r => r.importers, throwGlobalError);\n}\n\nexport function getExporters(): Promise<any> {\n  return getJSON('/api/qualityprofiles/exporters').then(r => r.exporters);\n}\n\nexport function getProfileChangelog(data: RequestData): Promise<any> {\n  return getJSON('/api/qualityprofiles/changelog', data);\n}\n\nexport interface CompareResponse {\n  left: { name: string };\n  right: { name: string };\n  inLeft: Array<{ key: string; name: string; severity: string }>;\n  inRight: Array<{ key: string; name: string; severity: string }>;\n  modified: Array<{\n    key: string;\n    name: string;\n    left: { params: T.Dict<string>; severity: string };\n    right: { params: T.Dict<string>; severity: string };\n  }>;\n}\n\nexport function compareProfiles(leftKey: string, rightKey: string): Promise<CompareResponse> {\n  return getJSON('/api/qualityprofiles/compare', { leftKey, rightKey });\n}\n\nexport function associateProject(key: string, project: string) {\n  return post('/api/qualityprofiles/add_project', { key, project }).catch(throwGlobalError);\n}\n\nexport function dissociateProject(key: string, project: string) {\n  return post('/api/qualityprofiles/remove_project', { key, project }).catch(throwGlobalError);\n}\n\nexport interface SearchUsersGroupsParameters {\n  language: string;\n  organization?: string;\n  qualityProfile: string;\n  q?: string;\n  selected?: 'all' | 'selected' | 'deselected';\n}\n\ninterface SearchUsersResponse {\n  users: T.UserSelected[];\n  paging: T.Paging;\n}\n\nexport function searchUsers(parameters: SearchUsersGroupsParameters): Promise<SearchUsersResponse> {\n  return getJSON('/api/qualityprofiles/search_users', parameters).catch(throwGlobalError);\n}\n\nexport interface SearchGroupsResponse {\n  groups: Array<{ name: string }>;\n  paging: T.Paging;\n}\n\nexport function searchGroups(\n  parameters: SearchUsersGroupsParameters\n): Promise<SearchGroupsResponse> {\n  return getJSON('/api/qualityprofiles/search_groups', parameters).catch(throwGlobalError);\n}\n\nexport interface AddRemoveUserParameters {\n  language: string;\n  login: string;\n  organization?: string;\n  qualityProfile: string;\n}\n\nexport function addUser(parameters: AddRemoveUserParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/add_user', parameters).catch(throwGlobalError);\n}\n\nexport function removeUser(parameters: AddRemoveUserParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/remove_user', parameters).catch(throwGlobalError);\n}\n\nexport interface AddRemoveGroupParameters {\n  group: string;\n  language: string;\n  organization?: string;\n  qualityProfile: string;\n}\n\nexport function addGroup(parameters: AddRemoveGroupParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/add_group', parameters).catch(throwGlobalError);\n}\n\nexport function removeGroup(parameters: AddRemoveGroupParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/remove_group', parameters).catch(throwGlobalError);\n}\n\nexport interface BulkActivateParameters {\n  activation?: boolean;\n  active_severities?: string;\n  asc?: boolean;\n  available_since?: string;\n  compareToProfile?: string;\n  inheritance?: string;\n  is_template?: string;\n  languages?: string;\n  organization: string | undefined;\n  q?: string;\n  qprofile?: string;\n  repositories?: string;\n  rule_key?: string;\n  s?: string;\n  severities?: string;\n  statuses?: string;\n  tags?: string;\n  targetKey: string;\n  targetSeverity?: string;\n  template_key?: string;\n  types?: string;\n}\n\nexport function bulkActivateRules(data: BulkActivateParameters) {\n  return postJSON('/api/qualityprofiles/activate_rules', data);\n}\n\nexport function bulkDeactivateRules(data: BulkActivateParameters) {\n  return postJSON('/api/qualityprofiles/deactivate_rules', data);\n}\n\nexport function activateRule(data: {\n  key: string;\n  organization: string | undefined;\n  params?: T.Dict<string>;\n  reset?: boolean;\n  rule: string;\n  severity?: string;\n}) {\n  const params =\n    data.params && map(data.params, (value, key) => `${key}=${csvEscape(value)}`).join(';');\n  return post('/api/qualityprofiles/activate_rule', { ...data, params }).catch(throwGlobalError);\n}\n\nexport function deactivateRule(data: {\n  key: string;\n  organization: string | undefined;\n  rule: string;\n}) {\n  return post('/api/qualityprofiles/deactivate_rule', data).catch(throwGlobalError);\n}\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction csvEscape(value) {\n    var escaped = value.replace(/\"/g, '\\\\\"');\n    return \"\\\"\" + escaped + \"\\\"\";\n}\nexports.csvEscape = csvEscape;\n//# sourceMappingURL=csv.js.map","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\n\ninterface Props {\n  organization?: { name: string };\n  title: string;\n}\n\nexport default function OrganizationHelmet({ title, organization }: Props) {\n  const defaultTitle = title + (organization ? ' - ' + organization.name : '');\n  return <Helmet defaultTitle={defaultTitle} titleTemplate={'%s - ' + defaultTitle} />;\n}\n"],"sourceRoot":""}