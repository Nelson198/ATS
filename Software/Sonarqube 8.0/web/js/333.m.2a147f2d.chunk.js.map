{"version":3,"sources":["webpack:///../sonar-docs/src/tooltips/organizations/add-organization-member.md","webpack:///./src/main/js/apps/organizations/components/OrganizationGroupCheckbox.tsx","webpack:///./src/main/js/apps/organizationMembers/ManageMemberGroupsForm.tsx","webpack:///./src/main/js/apps/organizationMembers/RemoveMemberForm.tsx","webpack:///./src/main/js/apps/organizationMembers/MembersListItem.tsx","webpack:///./src/main/js/apps/organizationMembers/MembersList.tsx","webpack:///./src/main/js/apps/organizationMembers/MembersListHeader.tsx","webpack:///./src/main/js/apps/users/components/UsersSelectSearch.tsx","webpack:///./src/main/js/apps/organizationMembers/AddMemberForm.tsx","webpack:///./src/main/js/apps/organizationMembers/SyncMemberForm.tsx","webpack:///./src/main/js/apps/organizationMembers/MembersPageHeader.tsx","webpack:///./src/main/js/apps/organizationMembers/OrganizationMembers.tsx","webpack:///./src/main/js/apps/organizationMembers/OrganizationMembersContainer.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/docs/DocTooltip.tsx","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/helpers/almIntegrations.ts","webpack:///./src/main/js/helpers/markdown.js","webpack:///./src/main/js/api/user_groups.ts"],"names":["__webpack_require__","r","__webpack_exports__","OrganizationGroupCheckbox_OrganizationGroupCheckbox","index_js_exposed","[object Object]","this","onCheck","checked","group","props","default","name","toggleCheck","className","classnames","disabled","onClick","Checkbox_default","a","ManageMemberGroupsForm_ManageMemberGroupsForm","mounted","state","loadUserGroups","setState","loading","Object","users","login","member","organization","key","then","response","userGroups","keyBy_default","groups","isGroupSelected","groupName","status","selected","prevState","_prevState$userGroups","assign","handleSubmit","updateMemberGroups","keys","pickBy_default","onClose","_this$state","_this$state$userGroup","header","l10n","hasChanges","some_default","undefined","SimpleModal_default","onSubmit","_ref","onCloseClick","onFormSubmit","submitting","DeferredSpinner_default","organizationGroups","map","id","buttons","RemoveMemberForm_RemoveMemberForm","event","preventDefault","removeMember","Modal_default","contentLabel","onRequestClose","autoFocus","AVATAR_SIZE","MembersListItem_MembersListItem","removeMemberForm","manageGroupsForm","handleManageGroupsClick","closeManageGroupsForm","handleRemoveMemberClick","closeRemoveMemberForm","_this$props","_organization$actions","actions","Avatar","hash","avatar","size","admin","measures","groupCount","ActionsDropdown_default","ActionsDropdown","destructive","MembersList_MembersList","currentUser","members","length","sortedMembers","sortBy_default","MembersListHeader","handleSearch","total","SearchBox_default","minLength","onChange","placeholder","alm","membersSync","HelpTooltip_default","overlay","almIntegrations","href","url","rel","target","LIST_SIZE","UsersSelectSearch_AVATAR_SIZE","UsersSelectSearch_UsersSelectSearch","super","filterSearchResult","filter","user","excludedUsers","includes","slice","filterOptions","options","search","searchUsers","Math","min","searchResult","isLoading","handleInputChange","debounce_default","prevProps","noResult","Select_default","clearable","labelKey","noResultsText","handleValueChange","onInputChange","optionComponent","UsersSelectSearch_UsersSelectSearchOption","searchable","value","selectedUser","valueComponent","UsersSelectSearchValue","valueKey","handleMouseDown","evt","stopPropagation","onSelect","option","handleMouseEnter","onFocus","handleMouseMove","isFocused","onMouseDown","onMouseEnter","onMouseMove","role","title","children","_ref2","AddMemberForm_AddMemberForm","open","openForm","closeForm","selectedMember","query","ps","data","organizations","q","addMember","selectedMemberChange","memberLogins","renderModal","mapDispatchToProps","fetchOrganization","organizationMembers_SyncMemberForm","es","handleConfirm","enabled","handleMemberSync","Promise","resolve","handleManualClick","handleAutoClick","refreshMembers","renderModalDescription","react_router_es","to","pathname","renderModalBody","hasOtherMembers","almKey","showWarning","RadioCard_default","Alert","variant","Boolean","orgMemberSync","ConfirmButton_default","cancelButtonText","confirmButtonText","confirmDisable","modalBody","modalHeader","modalHeaderDescription","onConfirm","buttonText","MembersPageHeader","isAdmin","hasMemberSync","showSyncNotif","isSyncEligible","personal","handleAddMember","DocTooltip","doc","bind","index_es","defaultMessage","values","link","display","PAGE_SIZE","withCurrentUser","ownProps","rootReducer","params","organizationKey","stopLoading","fetchMembers","paging","fetchGroups","user_groups","handleSearchMembers","handleLoadMoreMembers","p","pageIndex","_ref3","_ref4","_ref4$members","_ref5","_ref6","handleRemoveMember","_ref7","_ref8","_ref9","updateGroup","updater","_ref10","_ref11","add","remove","promises","all","_this$state2","Helmet_default","Suggestions","suggestions","A11ySkipTarget","anchor","ListFooter_default","count","loadMore","ready","d","react__WEBPACK_IMPORTED_MODULE_0__","_SuggestionsContext__WEBPACK_IMPORTED_MODULE_1__","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","sonar_ui_common_components_controls_HelpTooltip__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_controls_HelpTooltip__WEBPACK_IMPORTED_MODULE_1___default","n","sonar_ui_common_components_lazyLoad__WEBPACK_IMPORTED_MODULE_2__","_helpers_markdown__WEBPACK_IMPORTED_MODULE_3__","DocMarkdownBlock","e","close","content","document","addEventListener","removeEventListener","childProps","overlayProps","isTooltip","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_1__","_A11yContext__WEBPACK_IMPORTED_MODULE_2__","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","_this$props$label","label","weight","concat","getAlmMembersUrl","getUserAlmKey","hasAdvancedALMIntegration","isBitbucket","isGithub","isVSTS","sanitizeAlmId","_users__WEBPACK_IMPORTED_MODULE_0__","endsWith","replace","externalProvider","startsWith","getFrontMatterPosition","lines","firstLine","lastLine","i","trim","parseFrontMatter","tokens","split","x","cutConditionalContent","tag","beginning","ending","newContent","start","indexOf","end","substring","module","exports","getFrontMatter","position","separateFrontMatter","frontmatter","join","filterContent","regexBase","_require","isSonarCloud","getInstance","contentWithoutStatic","RegExp","searchUsersGroups","getUsersInGroup","addUserToGroup","removeUserFromGroup","createGroup","deleteGroup","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","catch"],"mappings":"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","file":"js/333.m.2a147f2d.chunk.js","sourcesContent":["export default \"Add new members to this organization and manage their permissions. Note that users must have signed up on the service to be able to find and add them.\\n\\n---\\n\\nSee also: [Manage a Team](/organizations/manage-team/)\\n\"","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\n\ninterface Props {\n  group: T.Group;\n  checked: boolean;\n  onCheck: (name: string, checked: boolean) => void;\n}\n\nexport default class OrganizationGroupCheckbox extends React.PureComponent<Props> {\n  onCheck = (checked: boolean) => {\n    const { group } = this.props;\n    if (!group.default) {\n      this.props.onCheck(group.name, checked);\n    }\n  };\n\n  toggleCheck = () => {\n    this.onCheck(!this.props.checked);\n  };\n\n  render() {\n    const { group } = this.props;\n    return (\n      <li\n        className={classNames('capitalize list-item-checkable-link', { disabled: group.default })}\n        onClick={this.toggleCheck}>\n        <Checkbox checked={this.props.checked} onCheck={this.onCheck} /> {group.name}\n      </li>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { keyBy, pickBy, some } from 'lodash';\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { getUserGroups, UserGroup } from '../../api/users';\nimport OrganizationGroupCheckbox from '../organizations/components/OrganizationGroupCheckbox';\n\ninterface Props {\n  onClose: () => void;\n  member: T.OrganizationMember;\n  organization: T.Organization;\n  organizationGroups: T.Group[];\n  updateMemberGroups: (\n    member: T.OrganizationMember,\n    add: string[],\n    remove: string[]\n  ) => Promise<void>;\n}\n\ninterface State {\n  userGroups?: T.Dict<UserGroup & { status?: string }>;\n  loading?: boolean;\n}\n\nexport default class ManageMemberGroupsForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadUserGroups();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadUserGroups = () => {\n    this.setState({ loading: true });\n    getUserGroups({\n      login: this.props.member.login,\n      organization: this.props.organization.key\n    }).then(\n      response => {\n        if (this.mounted) {\n          this.setState({ loading: false, userGroups: keyBy(response.groups, 'name') });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  isGroupSelected = (groupName: string) => {\n    if (this.state.userGroups) {\n      const group = this.state.userGroups[groupName] || {};\n      if (group.status) {\n        return group.status === 'add';\n      } else {\n        return group.selected === true;\n      }\n    }\n    return false;\n  };\n\n  onCheck = (groupName: string, checked: boolean) => {\n    this.setState((prevState: State) => {\n      const { userGroups = {} } = prevState;\n      const group = userGroups[groupName] || {};\n      let status = '';\n      if (group.selected && !checked) {\n        status = 'remove';\n      } else if (!group.selected && checked) {\n        status = 'add';\n      }\n      return { userGroups: { ...userGroups, [groupName]: { ...group, status } } };\n    });\n  };\n\n  handleSubmit = () => {\n    return this.props\n      .updateMemberGroups(\n        this.props.member,\n        Object.keys(pickBy(this.state.userGroups, group => group.status === 'add')),\n        Object.keys(pickBy(this.state.userGroups, group => group.status === 'remove'))\n      )\n      .then(this.props.onClose);\n  };\n\n  render() {\n    const { loading, userGroups = {} } = this.state;\n    const header = translate('organization.members.manage_groups');\n    const hasChanges = some(userGroups, group => group.status !== undefined);\n    return (\n      <SimpleModal header={header} onClose={this.props.onClose} onSubmit={this.handleSubmit}>\n        {({ onCloseClick, onFormSubmit, submitting }) => (\n          <form onSubmit={onFormSubmit}>\n            <header className=\"modal-head\">\n              <h2>{header}</h2>\n            </header>\n            <div className=\"modal-body modal-container\">\n              <p>\n                <strong>\n                  {translateWithParameters(\n                    'organization.members.members_groups',\n                    this.props.member.name\n                  )}\n                </strong>\n              </p>\n              {loading ? (\n                <DeferredSpinner className=\"spacer-top\" />\n              ) : (\n                <ul className=\"list-spaced\">\n                  {this.props.organizationGroups.map(group => (\n                    <OrganizationGroupCheckbox\n                      checked={this.isGroupSelected(group.name)}\n                      group={group}\n                      key={group.id}\n                      onCheck={this.onCheck}\n                    />\n                  ))}\n                </ul>\n              )}\n            </div>\n\n            <footer className=\"modal-foot\">\n              <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n              <SubmitButton disabled={submitting || !hasChanges}>{translate('save')}</SubmitButton>\n              <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n                {translate('cancel')}\n              </ResetButtonLink>\n            </footer>\n          </form>\n        )}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  onClose: () => void;\n  member: T.OrganizationMember;\n  organization: T.Organization;\n  removeMember: (member: T.OrganizationMember) => void;\n}\n\nexport default class RemoveMemberForm extends React.PureComponent<Props> {\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.props.removeMember(this.props.member);\n    this.props.onClose();\n  };\n\n  render() {\n    const header = translate('users.remove');\n    return (\n      <Modal contentLabel={header} key=\"remove-member-modal\" onRequestClose={this.props.onClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            {translateWithParameters(\n              'organization.members.remove_x',\n              this.props.member.name,\n              this.props.organization.name\n            )}\n          </div>\n          <footer className=\"modal-foot\">\n            <div>\n              <SubmitButton autoFocus={true} className=\"button-red\">\n                {translate('remove')}\n              </SubmitButton>\n              <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n            </div>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownDivider,\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport Avatar from '../../components/ui/Avatar';\nimport ManageMemberGroupsForm from './ManageMemberGroupsForm';\nimport RemoveMemberForm from './RemoveMemberForm';\n\ninterface Props {\n  member: T.OrganizationMember;\n  organization: T.Organization;\n  organizationGroups: T.Group[];\n  removeMember?: (member: T.OrganizationMember) => void;\n  updateMemberGroups: (\n    member: T.OrganizationMember,\n    add: string[],\n    remove: string[]\n  ) => Promise<void>;\n}\n\ninterface State {\n  removeMemberForm: boolean;\n  manageGroupsForm: boolean;\n}\n\nconst AVATAR_SIZE = 36;\n\nexport default class MembersListItem extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { removeMemberForm: false, manageGroupsForm: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleManageGroupsClick = () => {\n    this.setState({ manageGroupsForm: true });\n  };\n\n  closeManageGroupsForm = () => {\n    if (this.mounted) {\n      this.setState({ manageGroupsForm: false });\n    }\n  };\n\n  handleRemoveMemberClick = () => {\n    this.setState({ removeMemberForm: true });\n  };\n\n  closeRemoveMemberForm = () => {\n    if (this.mounted) {\n      this.setState({ removeMemberForm: false });\n    }\n  };\n\n  render() {\n    const { member, organization, removeMember } = this.props;\n    const { actions = {} } = organization;\n    return (\n      <tr>\n        <td className=\"thin nowrap\">\n          <Avatar hash={member.avatar} name={member.name} size={AVATAR_SIZE} />\n        </td>\n        <td className=\"nowrap text-middle\">\n          <strong>{member.name}</strong>\n          <span className=\"note little-spacer-left\">{member.login}</span>\n        </td>\n        {actions.admin && (\n          <td className=\"text-right text-middle\">\n            {translateWithParameters(\n              'organization.members.x_groups',\n              formatMeasure(member.groupCount || 0, 'INT')\n            )}\n          </td>\n        )}\n        {actions.admin && (\n          <>\n            <td className=\"nowrap text-middle text-right\">\n              <ActionsDropdown>\n                <ActionsDropdownItem onClick={this.handleManageGroupsClick}>\n                  {translate('organization.members.manage_groups')}\n                </ActionsDropdownItem>\n                {removeMember && (\n                  <>\n                    <ActionsDropdownDivider />\n                    <ActionsDropdownItem destructive={true} onClick={this.handleRemoveMemberClick}>\n                      {translate('organization.members.remove')}\n                    </ActionsDropdownItem>\n                  </>\n                )}\n              </ActionsDropdown>\n            </td>\n\n            {this.state.manageGroupsForm && (\n              <ManageMemberGroupsForm\n                member={this.props.member}\n                onClose={this.closeManageGroupsForm}\n                organization={this.props.organization}\n                organizationGroups={this.props.organizationGroups}\n                updateMemberGroups={this.props.updateMemberGroups}\n              />\n            )}\n\n            {removeMember && this.state.removeMemberForm && (\n              <RemoveMemberForm\n                member={this.props.member}\n                onClose={this.closeRemoveMemberForm}\n                organization={this.props.organization}\n                removeMember={removeMember}\n              />\n            )}\n          </>\n        )}\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport MembersListItem from './MembersListItem';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n  members: T.OrganizationMember[];\n  organizationGroups: T.Group[];\n  organization: T.Organization;\n  removeMember?: (member: T.OrganizationMember) => void;\n  updateMemberGroups: (\n    member: T.OrganizationMember,\n    add: Array<string>,\n    remove: Array<string>\n  ) => Promise<void>;\n}\n\nexport default class MembersList extends React.PureComponent<Props> {\n  render() {\n    const { currentUser, members } = this.props;\n\n    if (!members.length) {\n      return <div className=\"note\">{translate('no_results')}</div>;\n    }\n\n    const sortedMembers = sortBy(members, member => member.name, member => member.login);\n    return (\n      <div className=\"boxed-group boxed-group-inner\">\n        <table className=\"data zebra\">\n          <tbody>\n            {sortedMembers.map(member => (\n              <MembersListItem\n                key={member.login}\n                member={member}\n                organization={this.props.organization}\n                organizationGroups={this.props.organizationGroups}\n                removeMember={\n                  currentUser.login !== member.login ? this.props.removeMember : undefined\n                }\n                updateMemberGroups={this.props.updateMemberGroups}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { getAlmMembersUrl, sanitizeAlmId } from '../../helpers/almIntegrations';\n\nexport interface Props {\n  handleSearch: (query?: string) => void;\n  organization: T.Organization;\n  total?: number;\n}\n\nexport default function MembersListHeader({ handleSearch, organization, total }: Props) {\n  return (\n    <div className=\"panel panel-vertical bordered-bottom spacer-bottom\">\n      <SearchBox\n        minLength={2}\n        onChange={handleSearch}\n        placeholder={translate('search.search_for_members')}\n      />\n      {total !== undefined && (\n        <span className=\"pull-right little-spacer-top\">\n          <strong>{formatMeasure(total, 'INT')}</strong> {translate('organization.members.members')}\n          {organization.alm && organization.alm.membersSync && (\n            <HelpTooltip\n              className=\"spacer-left\"\n              overlay={\n                <div className=\"abs-width-300 markdown cut-margins\">\n                  <p>\n                    {translate(\n                      'organization.members.auto_sync_total_help',\n                      sanitizeAlmId(organization.alm.key)\n                    )}\n                  </p>\n                  <hr />\n                  <p>\n                    <a\n                      href={getAlmMembersUrl(organization.alm.key, organization.alm.url)}\n                      rel=\"noopener noreferrer\"\n                      target=\"_blank\">\n                      {translateWithParameters(\n                        'organization.members.see_all_members_on_x',\n                        translate(sanitizeAlmId(organization.alm.key))\n                      )}\n                    </a>\n                  </p>\n                </div>\n              }\n            />\n          )}\n        </span>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport Avatar from '../../../components/ui/Avatar';\n\ninterface Option {\n  login: string;\n  name: string;\n  avatar?: string;\n}\n\ninterface Props {\n  autoFocus?: boolean;\n  excludedUsers: string[];\n  handleValueChange: (option: Option) => void;\n  searchUsers: (query: string, ps: number) => Promise<{ users: Option[] }>;\n  selectedUser?: Option;\n}\n\ninterface State {\n  isLoading: boolean;\n  search: string;\n  searchResult: Option[];\n}\n\nconst LIST_SIZE = 10;\nconst AVATAR_SIZE = 16;\n\nexport default class UsersSelectSearch extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.handleSearch = debounce(this.handleSearch, 250);\n    this.state = { searchResult: [], isLoading: false, search: '' };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.handleSearch(this.state.search);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.excludedUsers !== prevProps.excludedUsers) {\n      this.handleSearch(this.state.search);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  filterSearchResult = ({ users }: { users: Option[] }) =>\n    users.filter(user => !this.props.excludedUsers.includes(user.login)).slice(0, LIST_SIZE);\n\n  filterOptions = (options: Option[]) => {\n    return options; // We don't filter anything, this is done by the WS\n  };\n\n  handleSearch = (search: string) => {\n    this.props\n      .searchUsers(search, Math.min(this.props.excludedUsers.length + LIST_SIZE, 500))\n      .then(this.filterSearchResult)\n      .then(\n        searchResult => {\n          if (this.mounted) {\n            this.setState({ isLoading: false, searchResult });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ isLoading: false, searchResult: [] });\n          }\n        }\n      );\n  };\n\n  handleInputChange = (search: string) => {\n    if (search == null || search.length === 1) {\n      this.setState({ search });\n    } else {\n      this.setState({ isLoading: true, search });\n      this.handleSearch(search);\n    }\n  };\n\n  render() {\n    const noResult =\n      this.state.search.length === 1\n        ? translateWithParameters('select2.tooShort', 2)\n        : translate('no_results');\n    return (\n      <Select\n        autoFocus={this.props.autoFocus}\n        className=\"Select-big\"\n        clearable={false}\n        filterOptions={this.filterOptions}\n        isLoading={this.state.isLoading}\n        labelKey=\"name\"\n        noResultsText={noResult}\n        onChange={this.props.handleValueChange}\n        onInputChange={this.handleInputChange}\n        optionComponent={UsersSelectSearchOption}\n        options={this.state.searchResult}\n        placeholder=\"\"\n        searchable={true}\n        value={this.props.selectedUser}\n        valueComponent={UsersSelectSearchValue}\n        valueKey=\"login\"\n      />\n    );\n  }\n}\n\ninterface OptionProps {\n  children?: React.ReactNode;\n  className?: string;\n  isFocused?: boolean;\n  onFocus: (option: Option, evt: React.MouseEvent<HTMLDivElement>) => void;\n  onSelect: (option: Option, evt: React.MouseEvent<HTMLDivElement>) => void;\n  option: Option;\n}\n\nexport class UsersSelectSearchOption extends React.PureComponent<OptionProps> {\n  handleMouseDown = (evt: React.MouseEvent<HTMLDivElement>) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.props.onSelect(this.props.option, evt);\n  };\n\n  handleMouseEnter = (evt: React.MouseEvent<HTMLDivElement>) => {\n    this.props.onFocus(this.props.option, evt);\n  };\n\n  handleMouseMove = (evt: React.MouseEvent<HTMLDivElement>) => {\n    if (this.props.isFocused) {\n      return;\n    }\n    this.props.onFocus(this.props.option, evt);\n  };\n\n  render() {\n    const { option } = this.props;\n    return (\n      <div\n        className={this.props.className}\n        onMouseDown={this.handleMouseDown}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseMove={this.handleMouseMove}\n        role=\"listitem\"\n        title={option.name}>\n        <Avatar hash={option.avatar} name={option.name} size={AVATAR_SIZE} />\n        <strong className=\"spacer-left\">{this.props.children}</strong>\n        <span className=\"note little-spacer-left\">{option.login}</span>\n      </div>\n    );\n  }\n}\n\ninterface ValueProps {\n  value?: Option;\n  children?: React.ReactNode;\n}\n\nexport function UsersSelectSearchValue({ children, value }: ValueProps) {\n  return (\n    <div className=\"Select-value\" title={value ? value.name : ''}>\n      {value && value.login && (\n        <div className=\"Select-value-label\">\n          <Avatar hash={value.avatar} name={value.name} size={AVATAR_SIZE} />\n          <strong className=\"spacer-left\">{children}</strong>\n          <span className=\"note little-spacer-left\">{value.login}</span>\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { searchMembers } from '../../api/organizations';\nimport UsersSelectSearch from '../users/components/UsersSelectSearch';\n\ninterface Props {\n  addMember: (member: T.OrganizationMember) => void;\n  organization: T.Organization;\n  memberLogins: string[];\n}\n\ninterface State {\n  open: boolean;\n  selectedMember?: T.OrganizationMember;\n}\n\nexport default class AddMemberForm extends React.PureComponent<Props, State> {\n  state: State = {\n    open: false\n  };\n\n  openForm = () => {\n    this.setState({ open: true });\n  };\n\n  closeForm = () => {\n    this.setState({ open: false, selectedMember: undefined });\n  };\n\n  handleSearch = (query: string | undefined, ps: number) => {\n    const data = { organization: this.props.organization.key, ps, selected: 'deselected' };\n    if (!query) {\n      return searchMembers(data);\n    }\n    return searchMembers({ ...data, q: query });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (this.state.selectedMember) {\n      this.props.addMember(this.state.selectedMember);\n      this.closeForm();\n    }\n  };\n\n  selectedMemberChange = (member: T.OrganizationMember) => {\n    this.setState({ selectedMember: member });\n  };\n\n  renderModal() {\n    const header = translate('users.add');\n    return (\n      <Modal contentLabel={header} key=\"add-member-modal\" onRequestClose={this.closeForm}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <div className=\"modal-field\">\n              <label>{translate('users.search_description')}</label>\n              <UsersSelectSearch\n                autoFocus={true}\n                excludedUsers={this.props.memberLogins}\n                handleValueChange={this.selectedMemberChange}\n                searchUsers={this.handleSearch}\n                selectedUser={this.state.selectedMember}\n              />\n            </div>\n          </div>\n          <footer className=\"modal-foot\">\n            <div>\n              <SubmitButton disabled={!this.state.selectedMember}>\n                {translate('organization.members.add_to_members')}\n              </SubmitButton>\n              <ResetButtonLink onClick={this.closeForm}>{translate('cancel')}</ResetButtonLink>\n            </div>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Button key=\"add-member-button\" onClick={this.openForm}>\n          {translate('organization.members.add')}\n        </Button>\n        {this.state.open && this.renderModal()}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport ConfirmButton from 'sonar-ui-common/components/controls/ConfirmButton';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { setOrganizationMemberSync, syncMembers } from '../../api/organizations';\nimport { sanitizeAlmId } from '../../helpers/almIntegrations';\nimport { fetchOrganization } from '../../store/rootActions';\n\ninterface Props {\n  buttonText: string;\n  fetchOrganization: (key: string) => void;\n  hasOtherMembers?: boolean;\n  organization: T.Organization;\n  refreshMembers: () => Promise<void>;\n}\n\ninterface State {\n  membersSync: boolean;\n}\n\nexport class SyncMemberForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      membersSync: Boolean(props.organization.alm && props.organization.alm.membersSync)\n    };\n  }\n\n  handleConfirm = () => {\n    const { organization } = this.props;\n    const { membersSync } = this.state;\n\n    return setOrganizationMemberSync({\n      organization: organization.key,\n      enabled: membersSync\n    }).then(() => {\n      this.props.fetchOrganization(organization.key);\n      if (membersSync) {\n        return this.handleMemberSync();\n      }\n      return Promise.resolve();\n    });\n  };\n\n  handleManualClick = () => {\n    this.setState({ membersSync: false });\n  };\n\n  handleAutoClick = () => {\n    this.setState({ membersSync: true });\n  };\n\n  handleMemberSync = () => {\n    return syncMembers(this.props.organization.key).then(this.props.refreshMembers);\n  };\n\n  renderModalDescription = () => {\n    return (\n      <p className=\"spacer-top\">\n        {translate('organization.members.management.description')}\n        <Link\n          className=\"spacer-left\"\n          target=\"_blank\"\n          to={{ pathname: '/documentation/organizations/manage-team/' }}>\n          {translate('learn_more')}\n        </Link>\n      </p>\n    );\n  };\n\n  renderModalBody = () => {\n    const { membersSync } = this.state;\n    const { hasOtherMembers, organization } = this.props;\n    const almKey = organization.alm && sanitizeAlmId(organization.alm.key);\n    const showWarning = hasOtherMembers && organization.alm && !organization.alm.membersSync;\n    return (\n      <div className=\"display-flex-stretch big-spacer-top\">\n        <RadioCard\n          onClick={this.handleManualClick}\n          selected={!membersSync}\n          title={translate('organization.members.management.manual')}>\n          <div className=\"spacer-left\">\n            <ul className=\"big-spacer-left note\">\n              <li className=\"spacer-bottom\">\n                {translate('organization.members.management.manual.add_members_manually')}\n              </li>\n              <li>{translate('organization.members.management.choose_members_permissions')}</li>\n            </ul>\n          </div>\n        </RadioCard>\n        <RadioCard\n          onClick={this.handleAutoClick}\n          selected={membersSync}\n          title={translateWithParameters(\n            'organization.members.management.automatic',\n            translate(almKey || '')\n          )}>\n          <div className=\"spacer-left\">\n            <ul className=\"big-spacer-left note\">\n              {almKey && (\n                <>\n                  <li className=\"spacer-bottom\">\n                    {translateWithParameters(\n                      'organization.members.management.automatic.synchronized_from_x',\n                      translate('organization', almKey)\n                    )}\n                  </li>\n                  <li className=\"spacer-bottom\">\n                    {translate(\n                      'organization.members.management.automatic.members_changes_reflected',\n                      almKey\n                    )}\n                  </li>\n                </>\n              )}\n              <li>{translate('organization.members.management.choose_members_permissions')}</li>\n            </ul>\n          </div>\n          {almKey && showWarning && (\n            <Alert className=\"big-spacer-top\" variant=\"warning\">\n              {translateWithParameters(\n                'organization.members.management.automatic.warning_x',\n                translate('organization', almKey)\n              )}\n            </Alert>\n          )}\n        </RadioCard>\n      </div>\n    );\n  };\n\n  render() {\n    const { organization } = this.props;\n    const orgMemberSync = Boolean(organization.alm && organization.alm.membersSync);\n    return (\n      <ConfirmButton\n        cancelButtonText={translate('close')}\n        confirmButtonText={translate('save')}\n        confirmDisable={this.state.membersSync === orgMemberSync}\n        modalBody={this.renderModalBody()}\n        modalHeader={translate('organization.members.management.title')}\n        modalHeaderDescription={this.renderModalDescription()}\n        onConfirm={this.handleConfirm}\n        size=\"medium\">\n        {({ onClick }) => <Button onClick={onClick}>{this.props.buttonText}</Button>}\n      </ConfirmButton>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchOrganization };\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SyncMemberForm);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport DocTooltip from '../../components/docs/DocTooltip';\nimport { isGithub, sanitizeAlmId } from '../../helpers/almIntegrations';\nimport AddMemberForm from './AddMemberForm';\nimport SyncMemberForm from './SyncMemberForm';\n\nexport interface Props {\n  handleAddMember: (member: T.OrganizationMember) => void;\n  loading: boolean;\n  members?: T.OrganizationMember[];\n  organization: T.Organization;\n  refreshMembers: () => Promise<void>;\n}\n\nexport default function MembersPageHeader(props: Props) {\n  const { members, organization, refreshMembers } = props;\n  const memberLogins = members ? members.map(member => member.login) : [];\n  const isAdmin = organization.actions && organization.actions.admin;\n  const almKey = organization.alm && sanitizeAlmId(organization.alm.key);\n  const hasMemberSync = organization.alm && organization.alm.membersSync;\n  const showSyncNotif = isAdmin && organization.alm && !hasMemberSync;\n  const isSyncEligible =\n    almKey && isGithub(almKey) && organization.alm && !organization.alm.personal;\n\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">\n        {translate('organization.members.page')}\n        <DeferredSpinner className=\"little-spacer-left\" loading={props.loading} />\n      </h1>\n\n      {isAdmin && (\n        <div className=\"page-actions text-right\">\n          {isSyncEligible && !showSyncNotif && (\n            <SyncMemberForm\n              buttonText={translate('organization.members.config_synchro')}\n              hasOtherMembers={members && members.length > 1}\n              organization={organization}\n              refreshMembers={refreshMembers}\n            />\n          )}\n          {!hasMemberSync && (\n            <div className=\"display-inline-block spacer-left spacer-bottom\">\n              <AddMemberForm\n                addMember={props.handleAddMember}\n                memberLogins={memberLogins}\n                organization={organization}\n              />\n              <DocTooltip\n                className=\"spacer-left\"\n                doc={import(/* webpackMode: \"eager\" */ 'Docs/tooltips/organizations/add-organization-member.md')}\n              />\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"page-description\">\n        <FormattedMessage\n          defaultMessage={translate('organization.members.page.description')}\n          id=\"organization.members.page.description\"\n          values={{\n            link: (\n              <Link target=\"_blank\" to=\"/documentation/organizations/manage-team/\">\n                {translate('organization.members.manage_a_team')}\n              </Link>\n            )\n          }}\n        />\n        {almKey && isSyncEligible && showSyncNotif && (\n          <Alert className=\"spacer-top\" display=\"inline\" variant=\"info\">\n            {translateWithParameters(\n              'organization.members.auto_sync_members_from_org_x',\n              translate('organization', almKey)\n            )}\n            <span className=\"spacer-left\">\n              <SyncMemberForm\n                buttonText={translate('configure')}\n                hasOtherMembers={members && members.length > 1}\n                organization={organization}\n                refreshMembers={refreshMembers}\n              />\n            </span>\n          </Alert>\n        )}\n      </div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addMember, removeMember, searchMembers } from '../../api/organizations';\nimport { addUserToGroup, removeUserFromGroup, searchUsersGroups } from '../../api/user_groups';\nimport A11ySkipTarget from '../../app/components/a11y/A11ySkipTarget';\nimport Suggestions from '../../app/components/embed-docs-modal/Suggestions';\nimport MembersList from './MembersList';\nimport MembersListHeader from './MembersListHeader';\nimport MembersPageHeader from './MembersPageHeader';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n  organization: T.Organization;\n}\n\ninterface State {\n  groups: T.Group[];\n  loading: boolean;\n  members?: T.OrganizationMember[];\n  paging?: T.Paging;\n  query: string;\n}\n\nconst PAGE_SIZE = 50;\n\nexport default class OrganizationMembers extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    groups: [],\n    loading: true,\n    query: ''\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchMembers();\n    if (this.props.organization.actions && this.props.organization.actions.admin) {\n      this.fetchGroups();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  fetchMembers = (query?: string) => {\n    this.setState({ loading: true });\n    searchMembers({\n      organization: this.props.organization.key,\n      ps: PAGE_SIZE,\n      q: query\n    }).then(({ paging, users }) => {\n      if (this.mounted) {\n        this.setState({ loading: false, members: users, paging });\n      }\n    }, this.stopLoading);\n  };\n\n  fetchGroups = () => {\n    searchUsersGroups({ organization: this.props.organization.key }).then(\n      ({ groups }) => {\n        if (this.mounted) {\n          this.setState({ groups });\n        }\n      },\n      () => {}\n    );\n  };\n\n  handleSearchMembers = (query: string) => {\n    this.setState({ query });\n    this.fetchMembers(query || undefined); // empty string -> undefined\n  };\n\n  handleLoadMoreMembers = () => {\n    const { paging, query } = this.state;\n    if (!paging) {\n      return;\n    }\n\n    this.setState({ loading: true });\n    searchMembers({\n      organization: this.props.organization.key,\n      p: paging.pageIndex + 1,\n      ps: PAGE_SIZE,\n      q: query || undefined // empty string -> undefined\n    }).then(({ paging, users }) => {\n      if (this.mounted) {\n        this.setState(({ members = [] }) => ({\n          loading: false,\n          members: [...members, ...users],\n          paging\n        }));\n      }\n    }, this.stopLoading);\n  };\n\n  handleAddMember = ({ login }: T.OrganizationMember) => {\n    // TODO optimistic update\n    addMember({ login, organization: this.props.organization.key }).then(\n      member => {\n        if (this.mounted) {\n          this.setState(({ members, paging }) => ({\n            members: members && [...members, member],\n            paging: paging && { ...paging, total: paging.total + 1 }\n          }));\n        }\n      },\n      () => {}\n    );\n  };\n\n  handleRemoveMember = ({ login }: T.OrganizationMember) => {\n    // TODO optimistic update\n    removeMember({ login, organization: this.props.organization.key }).then(\n      () => {\n        if (this.mounted) {\n          this.setState(({ members, paging }) => ({\n            members: members && members.filter(member => member.login !== login),\n            paging: paging && { ...paging, total: paging.total - 1 }\n          }));\n        }\n      },\n      () => {}\n    );\n  };\n\n  refreshMembers = () => {\n    return searchMembers({\n      organization: this.props.organization.key,\n      ps: PAGE_SIZE,\n      q: this.state.query || undefined\n    }).then(({ paging, users }) => {\n      if (this.mounted) {\n        this.setState({ members: users, paging });\n      }\n    });\n  };\n\n  updateGroup = (\n    login: string,\n    updater: (member: T.OrganizationMember) => T.OrganizationMember\n  ) => {\n    this.setState(({ members }) => ({\n      members: members && members.map(member => (member.login === login ? updater(member) : member))\n    }));\n  };\n\n  updateMemberGroups = ({ login }: T.OrganizationMember, add: string[], remove: string[]) => {\n    // TODO optimistic update\n    const promises = [\n      ...add.map(name =>\n        addUserToGroup({ name, login, organization: this.props.organization.key })\n      ),\n      ...remove.map(name =>\n        removeUserFromGroup({ name, login, organization: this.props.organization.key })\n      )\n    ];\n    return Promise.all(promises).then(() => {\n      if (this.mounted) {\n        this.updateGroup(login, member => ({\n          ...member,\n          groupCount: (member.groupCount || 0) + add.length - remove.length\n        }));\n      }\n    });\n  };\n\n  render() {\n    const { currentUser, organization } = this.props;\n    const { groups, loading, members, paging } = this.state;\n    const hasMemberSync = organization.alm && organization.alm.membersSync;\n    return (\n      <div className=\"page page-limited\">\n        <Helmet title={translate('organization.members.page')} />\n        <Suggestions suggestions=\"organization_members\" />\n        <A11ySkipTarget anchor=\"members_main\" />\n        <MembersPageHeader\n          handleAddMember={this.handleAddMember}\n          loading={loading}\n          members={members}\n          organization={organization}\n          refreshMembers={this.refreshMembers}\n        />\n        {members !== undefined && paging !== undefined && (\n          <>\n            <MembersListHeader\n              handleSearch={this.handleSearchMembers}\n              organization={organization}\n              total={paging.total}\n            />\n            <MembersList\n              currentUser={currentUser}\n              members={members}\n              organization={organization}\n              organizationGroups={groups}\n              removeMember={hasMemberSync ? undefined : this.handleRemoveMember}\n              updateMemberGroups={this.updateMemberGroups}\n            />\n            {paging.total !== 0 && (\n              <ListFooter\n                count={members.length}\n                loadMore={this.handleLoadMoreMembers}\n                ready={!loading}\n                total={paging.total}\n              />\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { withCurrentUser } from '../../components/hoc/withCurrentUser';\nimport { getOrganizationByKey, Store } from '../../store/rootReducer';\nimport OrganizationMembers from './OrganizationMembers';\n\ninterface OwnProps {\n  params: { organizationKey: string };\n}\n\ninterface StateProps {\n  organization: T.Organization;\n}\n\nconst mapStateToProps = (state: Store, ownProps: OwnProps): StateProps => {\n  return { organization: getOrganizationByKey(state, ownProps.params.organizationKey) };\n};\n\nexport default withCurrentUser(connect(mapStateToProps)(OrganizationMembers));\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { lazyLoad } from 'sonar-ui-common/components/lazyLoad';\nimport { filterContent } from '../../helpers/markdown';\n\nconst DocMarkdownBlock = lazyLoad(() => import('./DocMarkdownBlock'));\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  // Use as `import(/* webpackMode: \"eager\" */ 'Docs/tooltips/foo/bar.md')`\n  doc: Promise<{ default: string }>;\n  overlayProps?: T.Dict<string>;\n}\n\ninterface State {\n  content?: string;\n  open: boolean;\n}\n\nexport default class DocTooltip extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { open: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.doc.then(\n      ({ default: content }) => {\n        if (this.mounted) {\n          this.setState({ content });\n        }\n      },\n      () => {}\n    );\n    document.addEventListener('scroll', this.close, true);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    document.removeEventListener('scroll', this.close, true);\n  }\n\n  close = () => {\n    if (this.mounted) {\n      this.setState({ open: false });\n    }\n  };\n\n  render() {\n    return this.state.content ? (\n      <HelpTooltip\n        className={this.props.className}\n        overlay={\n          <div className=\"abs-width-300\">\n            <DocMarkdownBlock\n              childProps={this.props.overlayProps}\n              className=\"cut-margins\"\n              content={filterContent(this.state.content)}\n              isTooltip={true}\n            />\n          </div>\n        }>\n        {this.props.children}\n      </HelpTooltip>\n    ) : (\n      this.props.children || null\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function getAlmMembersUrl(key: string, url: string): string {\n  if (!url.endsWith('/')) {\n    url += '/';\n  }\n  if (isGithub(key)) {\n    return url.replace('github.com/', 'github.com/orgs/') + 'people';\n  }\n  return url + 'profile/members';\n}\n\nexport function getUserAlmKey(user: T.CurrentUser) {\n  return isLoggedIn(user) && user.externalProvider\n    ? sanitizeAlmId(user.externalProvider)\n    : undefined;\n}\n\nexport function hasAdvancedALMIntegration(user: T.CurrentUser) {\n  return (\n    isLoggedIn(user) && (isBitbucket(user.externalProvider) || isGithub(user.externalProvider))\n  );\n}\n\nexport function isBitbucket(almKey?: string): boolean {\n  return almKey ? almKey.startsWith('bitbucket') : false;\n}\n\nexport function isGithub(almKey?: string): boolean {\n  return almKey === 'github';\n}\n\nexport function isVSTS(almKey?: string): boolean {\n  return almKey === 'microsoft';\n}\n\nexport function sanitizeAlmId(almKey: string) {\n  if (isBitbucket(almKey)) {\n    return 'bitbucket';\n  }\n  return almKey;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// keep this file in JavaScript, because it is used by a webpack loader\nmodule.exports = { getFrontMatter, separateFrontMatter, filterContent };\n\nfunction getFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  return position ? parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine)) : {};\n}\n\nfunction separateFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  if (position) {\n    const frontmatter = parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine));\n    const content = lines.slice(position.lastLine + 1).join('\\n');\n    return { frontmatter, content };\n  } else {\n    return { frontmatter: {}, content };\n  }\n}\n\nfunction getFrontMatterPosition(lines) {\n  let firstLine;\n  let lastLine;\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    if (line.trim() === '---') {\n      if (firstLine === undefined) {\n        firstLine = i;\n      } else {\n        lastLine = i;\n        break;\n      }\n    }\n  }\n  return lastLine !== undefined ? { firstLine, lastLine } : undefined;\n}\n\nfunction parseFrontMatter(lines) {\n  const data = {};\n  for (let i = 0; i < lines.length; i++) {\n    const tokens = lines[i].split(':').map(x => x.trim());\n    if (tokens.length === 2) {\n      data[tokens[0]] = tokens[1];\n    }\n  }\n  return data;\n}\n\n/**\n * @param {string} content\n * @returns {string}\n */\nfunction filterContent(content) {\n  const regexBase = '<!-- \\\\/?(sonarqube|sonarcloud|static) -->';\n  const { isSonarCloud, getInstance } = require('./system');\n  const contentWithInstance = content.replace(/{instance}/gi, getInstance());\n  const contentWithoutStatic = cutConditionalContent(contentWithInstance, 'static');\n  const filteredContent = isSonarCloud()\n    ? cutConditionalContent(contentWithoutStatic, 'sonarqube')\n    : cutConditionalContent(contentWithoutStatic, 'sonarcloud');\n  return filteredContent\n    .replace(new RegExp(`^${regexBase}(\\n|\\r|\\r\\n|$)`, 'gm'), '') // First, remove single-line ones, including ending carriage-returns.\n    .replace(new RegExp(`${regexBase}`, 'g'), ''); // Now remove all remaining ones.\n}\n\n/**\n * @param {string} content\n * @param {string} tag\n * @returns {string}\n */\nfunction cutConditionalContent(content, tag) {\n  const beginning = `<!-- ${tag} -->`;\n  const ending = `<!-- /${tag} -->`;\n\n  let newContent = content;\n  let start = newContent.indexOf(beginning);\n  let end = newContent.indexOf(ending);\n  while (start !== -1 && end !== -1) {\n    newContent = newContent.substring(0, start) + newContent.substring(end + ending.length);\n    start = newContent.indexOf(beginning);\n    end = newContent.indexOf(ending);\n  }\n\n  return newContent;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function searchUsersGroups(data: {\n  f?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n}): Promise<{ groups: T.Group[]; paging: T.Paging }> {\n  return getJSON('/api/user_groups/search', data).catch(throwGlobalError);\n}\n\nexport function getUsersInGroup(data: {\n  id?: number;\n  name?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n  selected?: string;\n}): Promise<T.Paging & { users: T.UserSelected[] }> {\n  return getJSON('/api/user_groups/users', data).catch(throwGlobalError);\n}\n\nexport function addUserToGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/add_user', data).catch(throwGlobalError);\n}\n\nexport function removeUserFromGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/remove_user', data).catch(throwGlobalError);\n}\n\nexport function createGroup(data: {\n  description?: string;\n  organization: string | undefined;\n  name: string;\n}): Promise<T.Group> {\n  return postJSON('/api/user_groups/create', data).then(r => r.group, throwGlobalError);\n}\n\nexport function updateGroup(data: { description?: string; id: number; name?: string }) {\n  return post('/api/user_groups/update', data).catch(throwGlobalError);\n}\n\nexport function deleteGroup(data: { name: string; organization: string | undefined }) {\n  return post('/api/user_groups/delete', data).catch(throwGlobalError);\n}\n"],"sourceRoot":""}