{"version":3,"sources":["webpack:///./src/main/js/api/user_groups.ts","webpack:///../sonar-docs/src/tooltips/organizations/add-organization-member.md","webpack:///./src/main/js/apps/organizations/components/OrganizationGroupCheckbox.tsx","webpack:///./src/main/js/apps/organizationMembers/ManageMemberGroupsForm.tsx","webpack:///./src/main/js/apps/organizationMembers/RemoveMemberForm.tsx","webpack:///./src/main/js/apps/organizationMembers/MembersListItem.tsx","webpack:///./src/main/js/apps/organizationMembers/MembersList.tsx","webpack:///./src/main/js/apps/organizationMembers/MembersListHeader.tsx","webpack:///./src/main/js/apps/users/components/UsersSelectSearch.tsx","webpack:///./src/main/js/apps/organizationMembers/AddMemberForm.tsx","webpack:///./src/main/js/apps/organizationMembers/SyncMemberForm.tsx","webpack:///./src/main/js/apps/organizationMembers/MembersPageHeader.tsx","webpack:///./src/main/js/apps/organizationMembers/OrganizationMembers.tsx","webpack:///./src/main/js/apps/organizationMembers/OrganizationMembersContainer.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/docs/DocTooltip.tsx","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/helpers/almIntegrations.ts","webpack:///./src/main/js/helpers/markdown.js"],"names":["__webpack_require__","d","__webpack_exports__","searchUsersGroups","getUsersInGroup","addUserToGroup","removeUserFromGroup","createGroup","updateGroup","deleteGroup","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","data","Object","catch","then","r","group","_super","OrganizationGroupCheckbox","_this","apply","this","arguments","onCheck","checked","props","default","name","toggleCheck","__extends","prototype","render","index_js_exposed","className","classnames","disabled","onClick","Checkbox_default","a","ManageMemberGroupsForm","mounted","state","loadUserGroups","setState","loading","users","login","member","organization","key","response","userGroups","keyBy_default","groups","isGroupSelected","groupName","status","selected","prevState","_b","__assign","_a","handleSubmit","updateMemberGroups","keys","pickBy_default","onClose","ManageMemberGroupsForm_extends","componentDidMount","componentWillUnmount","header","l10n","hasChanges","some_default","undefined","SimpleModal_default","onSubmit","onCloseClick","onFormSubmit","submitting","DeferredSpinner_default","organizationGroups","map","components_OrganizationGroupCheckbox","id","buttons","RemoveMemberForm","event","preventDefault","removeMember","RemoveMemberForm_extends","Modal_default","contentLabel","onRequestClose","autoFocus","MembersListItem","removeMemberForm","manageGroupsForm","handleManageGroupsClick","closeManageGroupsForm","handleRemoveMemberClick","closeRemoveMemberForm","MembersListItem_extends","actions","Avatar","hash","avatar","size","admin","measures","groupCount","ActionsDropdown_default","ActionsDropdown","destructive","organizationMembers_ManageMemberGroupsForm","organizationMembers_RemoveMemberForm","MembersList","MembersList_extends","currentUser","members","length","sortedMembers","sortBy_default","organizationMembers_MembersListItem","MembersListHeader","handleSearch","total","SearchBox_default","minLength","onChange","placeholder","alm","membersSync","HelpTooltip_default","overlay","almIntegrations","href","url","rel","target","LIST_SIZE","UsersSelectSearch_AVATAR_SIZE","UsersSelectSearch","call","filterSearchResult","filter","user","excludedUsers","includes","slice","filterOptions","options","search","searchUsers","Math","min","searchResult","isLoading","handleInputChange","debounce_default","UsersSelectSearch_extends","componentDidUpdate","prevProps","noResult","Select_default","clearable","labelKey","noResultsText","handleValueChange","onInputChange","optionComponent","UsersSelectSearch_UsersSelectSearchOption","searchable","value","selectedUser","valueComponent","UsersSelectSearchValue","valueKey","UsersSelectSearchOption","handleMouseDown","evt","stopPropagation","onSelect","option","handleMouseEnter","onFocus","handleMouseMove","isFocused","onMouseDown","onMouseEnter","onMouseMove","role","title","children","AddMemberForm","open","openForm","closeForm","selectedMember","query","ps","organizations","AddMemberForm_assign","q","addMember","selectedMemberChange","AddMemberForm_extends","renderModal","components_UsersSelectSearch","memberLogins","SyncMemberForm_SyncMemberForm","SyncMemberForm","handleConfirm","enabled","fetchOrganization","handleMemberSync","Promise","resolve","handleManualClick","handleAutoClick","refreshMembers","renderModalDescription","react_router_es","to","pathname","renderModalBody","hasOtherMembers","almKey","showWarning","RadioCard_default","Alert","variant","Boolean","SyncMemberForm_extends","orgMemberSync","ConfirmButton_default","cancelButtonText","confirmButtonText","confirmDisable","modalBody","modalHeader","modalHeaderDescription","onConfirm","buttonText","mapDispatchToProps","rootActions","organizationMembers_SyncMemberForm","es","MembersPageHeader","isAdmin","hasMemberSync","showSyncNotif","isSyncEligible","personal","organizationMembers_AddMemberForm","handleAddMember","DocTooltip","doc","bind","index_es","defaultMessage","values","link","display","PAGE_SIZE","OrganizationMembers","stopLoading","fetchMembers","paging","fetchGroups","user_groups","handleSearchMembers","handleLoadMoreMembers","p","pageIndex","concat","OrganizationMembers_assign","handleRemoveMember","updater","add","remove","promises","all","OrganizationMembers_extends","Helmet_default","Suggestions","suggestions","A11ySkipTarget","anchor","organizationMembers_MembersList","ListFooter_default","count","loadMore","ready","withCurrentUser","ownProps","rootReducer","params","organizationKey","organizationMembers_OrganizationMembers","react__WEBPACK_IMPORTED_MODULE_0__","_SuggestionsContext__WEBPACK_IMPORTED_MODULE_1__","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","DocMarkdownBlock","sonar_ui_common_components_lazyLoad__WEBPACK_IMPORTED_MODULE_2__","e","close","content","document","addEventListener","removeEventListener","sonar_ui_common_components_controls_HelpTooltip__WEBPACK_IMPORTED_MODULE_1___default","childProps","overlayProps","_helpers_markdown__WEBPACK_IMPORTED_MODULE_3__","isTooltip","_A11yContext__WEBPACK_IMPORTED_MODULE_2__","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","label","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_1__","weight","getAlmMembersUrl","getUserAlmKey","hasAdvancedALMIntegration","isBitbucket","isGithub","isVSTS","sanitizeAlmId","_users__WEBPACK_IMPORTED_MODULE_0__","endsWith","replace","externalProvider","startsWith","getFrontMatterPosition","lines","firstLine","lastLine","i","trim","parseFrontMatter","tokens","split","x","cutConditionalContent","tag","beginning","ending","newContent","start","indexOf","end","substring","module","exports","getFrontMatter","position","separateFrontMatter","frontmatter","content_1","join","filterContent","regexBase","isSonarCloud","getInstance","contentWithoutStatic","RegExp"],"mappings":"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","file":"js/334.1570825310815.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function searchUsersGroups(data: {\n  f?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n}): Promise<{ groups: T.Group[]; paging: T.Paging }> {\n  return getJSON('/api/user_groups/search', data).catch(throwGlobalError);\n}\n\nexport function getUsersInGroup(data: {\n  id?: number;\n  name?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n  selected?: string;\n}): Promise<T.Paging & { users: T.UserSelected[] }> {\n  return getJSON('/api/user_groups/users', data).catch(throwGlobalError);\n}\n\nexport function addUserToGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/add_user', data).catch(throwGlobalError);\n}\n\nexport function removeUserFromGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/remove_user', data).catch(throwGlobalError);\n}\n\nexport function createGroup(data: {\n  description?: string;\n  organization: string | undefined;\n  name: string;\n}): Promise<T.Group> {\n  return postJSON('/api/user_groups/create', data).then(r => r.group, throwGlobalError);\n}\n\nexport function updateGroup(data: { description?: string; id: number; name?: string }) {\n  return post('/api/user_groups/update', data).catch(throwGlobalError);\n}\n\nexport function deleteGroup(data: { name: string; organization: string | undefined }) {\n  return post('/api/user_groups/delete', data).catch(throwGlobalError);\n}\n","export default \"Add new members to this organization and manage their permissions. Note that users must have signed up on the service to be able to find and add them.\\n\\n---\\n\\nSee also: [Manage a Team](/organizations/manage-team/)\\n\"","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\n\ninterface Props {\n  group: T.Group;\n  checked: boolean;\n  onCheck: (name: string, checked: boolean) => void;\n}\n\nexport default class OrganizationGroupCheckbox extends React.PureComponent<Props> {\n  onCheck = (checked: boolean) => {\n    const { group } = this.props;\n    if (!group.default) {\n      this.props.onCheck(group.name, checked);\n    }\n  };\n\n  toggleCheck = () => {\n    this.onCheck(!this.props.checked);\n  };\n\n  render() {\n    const { group } = this.props;\n    return (\n      <li\n        className={classNames('capitalize list-item-checkable-link', { disabled: group.default })}\n        onClick={this.toggleCheck}>\n        <Checkbox checked={this.props.checked} onCheck={this.onCheck} /> {group.name}\n      </li>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { keyBy, pickBy, some } from 'lodash';\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { getUserGroups, UserGroup } from '../../api/users';\nimport OrganizationGroupCheckbox from '../organizations/components/OrganizationGroupCheckbox';\n\ninterface Props {\n  onClose: () => void;\n  member: T.OrganizationMember;\n  organization: T.Organization;\n  organizationGroups: T.Group[];\n  updateMemberGroups: (\n    member: T.OrganizationMember,\n    add: string[],\n    remove: string[]\n  ) => Promise<void>;\n}\n\ninterface State {\n  userGroups?: T.Dict<UserGroup & { status?: string }>;\n  loading?: boolean;\n}\n\nexport default class ManageMemberGroupsForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadUserGroups();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadUserGroups = () => {\n    this.setState({ loading: true });\n    getUserGroups({\n      login: this.props.member.login,\n      organization: this.props.organization.key\n    }).then(\n      response => {\n        if (this.mounted) {\n          this.setState({ loading: false, userGroups: keyBy(response.groups, 'name') });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  isGroupSelected = (groupName: string) => {\n    if (this.state.userGroups) {\n      const group = this.state.userGroups[groupName] || {};\n      if (group.status) {\n        return group.status === 'add';\n      } else {\n        return group.selected === true;\n      }\n    }\n    return false;\n  };\n\n  onCheck = (groupName: string, checked: boolean) => {\n    this.setState((prevState: State) => {\n      const { userGroups = {} } = prevState;\n      const group = userGroups[groupName] || {};\n      let status = '';\n      if (group.selected && !checked) {\n        status = 'remove';\n      } else if (!group.selected && checked) {\n        status = 'add';\n      }\n      return { userGroups: { ...userGroups, [groupName]: { ...group, status } } };\n    });\n  };\n\n  handleSubmit = () => {\n    return this.props\n      .updateMemberGroups(\n        this.props.member,\n        Object.keys(pickBy(this.state.userGroups, group => group.status === 'add')),\n        Object.keys(pickBy(this.state.userGroups, group => group.status === 'remove'))\n      )\n      .then(this.props.onClose);\n  };\n\n  render() {\n    const { loading, userGroups = {} } = this.state;\n    const header = translate('organization.members.manage_groups');\n    const hasChanges = some(userGroups, group => group.status !== undefined);\n    return (\n      <SimpleModal header={header} onClose={this.props.onClose} onSubmit={this.handleSubmit}>\n        {({ onCloseClick, onFormSubmit, submitting }) => (\n          <form onSubmit={onFormSubmit}>\n            <header className=\"modal-head\">\n              <h2>{header}</h2>\n            </header>\n            <div className=\"modal-body modal-container\">\n              <p>\n                <strong>\n                  {translateWithParameters(\n                    'organization.members.members_groups',\n                    this.props.member.name\n                  )}\n                </strong>\n              </p>\n              {loading ? (\n                <DeferredSpinner className=\"spacer-top\" />\n              ) : (\n                <ul className=\"list-spaced\">\n                  {this.props.organizationGroups.map(group => (\n                    <OrganizationGroupCheckbox\n                      checked={this.isGroupSelected(group.name)}\n                      group={group}\n                      key={group.id}\n                      onCheck={this.onCheck}\n                    />\n                  ))}\n                </ul>\n              )}\n            </div>\n\n            <footer className=\"modal-foot\">\n              <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n              <SubmitButton disabled={submitting || !hasChanges}>{translate('save')}</SubmitButton>\n              <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n                {translate('cancel')}\n              </ResetButtonLink>\n            </footer>\n          </form>\n        )}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  onClose: () => void;\n  member: T.OrganizationMember;\n  organization: T.Organization;\n  removeMember: (member: T.OrganizationMember) => void;\n}\n\nexport default class RemoveMemberForm extends React.PureComponent<Props> {\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.props.removeMember(this.props.member);\n    this.props.onClose();\n  };\n\n  render() {\n    const header = translate('users.remove');\n    return (\n      <Modal contentLabel={header} key=\"remove-member-modal\" onRequestClose={this.props.onClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            {translateWithParameters(\n              'organization.members.remove_x',\n              this.props.member.name,\n              this.props.organization.name\n            )}\n          </div>\n          <footer className=\"modal-foot\">\n            <div>\n              <SubmitButton autoFocus={true} className=\"button-red\">\n                {translate('remove')}\n              </SubmitButton>\n              <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n            </div>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownDivider,\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport Avatar from '../../components/ui/Avatar';\nimport ManageMemberGroupsForm from './ManageMemberGroupsForm';\nimport RemoveMemberForm from './RemoveMemberForm';\n\ninterface Props {\n  member: T.OrganizationMember;\n  organization: T.Organization;\n  organizationGroups: T.Group[];\n  removeMember?: (member: T.OrganizationMember) => void;\n  updateMemberGroups: (\n    member: T.OrganizationMember,\n    add: string[],\n    remove: string[]\n  ) => Promise<void>;\n}\n\ninterface State {\n  removeMemberForm: boolean;\n  manageGroupsForm: boolean;\n}\n\nconst AVATAR_SIZE = 36;\n\nexport default class MembersListItem extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { removeMemberForm: false, manageGroupsForm: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleManageGroupsClick = () => {\n    this.setState({ manageGroupsForm: true });\n  };\n\n  closeManageGroupsForm = () => {\n    if (this.mounted) {\n      this.setState({ manageGroupsForm: false });\n    }\n  };\n\n  handleRemoveMemberClick = () => {\n    this.setState({ removeMemberForm: true });\n  };\n\n  closeRemoveMemberForm = () => {\n    if (this.mounted) {\n      this.setState({ removeMemberForm: false });\n    }\n  };\n\n  render() {\n    const { member, organization, removeMember } = this.props;\n    const { actions = {} } = organization;\n    return (\n      <tr>\n        <td className=\"thin nowrap\">\n          <Avatar hash={member.avatar} name={member.name} size={AVATAR_SIZE} />\n        </td>\n        <td className=\"nowrap text-middle\">\n          <strong>{member.name}</strong>\n          <span className=\"note little-spacer-left\">{member.login}</span>\n        </td>\n        {actions.admin && (\n          <td className=\"text-right text-middle\">\n            {translateWithParameters(\n              'organization.members.x_groups',\n              formatMeasure(member.groupCount || 0, 'INT')\n            )}\n          </td>\n        )}\n        {actions.admin && (\n          <>\n            <td className=\"nowrap text-middle text-right\">\n              <ActionsDropdown>\n                <ActionsDropdownItem onClick={this.handleManageGroupsClick}>\n                  {translate('organization.members.manage_groups')}\n                </ActionsDropdownItem>\n                {removeMember && (\n                  <>\n                    <ActionsDropdownDivider />\n                    <ActionsDropdownItem destructive={true} onClick={this.handleRemoveMemberClick}>\n                      {translate('organization.members.remove')}\n                    </ActionsDropdownItem>\n                  </>\n                )}\n              </ActionsDropdown>\n            </td>\n\n            {this.state.manageGroupsForm && (\n              <ManageMemberGroupsForm\n                member={this.props.member}\n                onClose={this.closeManageGroupsForm}\n                organization={this.props.organization}\n                organizationGroups={this.props.organizationGroups}\n                updateMemberGroups={this.props.updateMemberGroups}\n              />\n            )}\n\n            {removeMember && this.state.removeMemberForm && (\n              <RemoveMemberForm\n                member={this.props.member}\n                onClose={this.closeRemoveMemberForm}\n                organization={this.props.organization}\n                removeMember={removeMember}\n              />\n            )}\n          </>\n        )}\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport MembersListItem from './MembersListItem';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n  members: T.OrganizationMember[];\n  organizationGroups: T.Group[];\n  organization: T.Organization;\n  removeMember?: (member: T.OrganizationMember) => void;\n  updateMemberGroups: (\n    member: T.OrganizationMember,\n    add: Array<string>,\n    remove: Array<string>\n  ) => Promise<void>;\n}\n\nexport default class MembersList extends React.PureComponent<Props> {\n  render() {\n    const { currentUser, members } = this.props;\n\n    if (!members.length) {\n      return <div className=\"note\">{translate('no_results')}</div>;\n    }\n\n    const sortedMembers = sortBy(members, member => member.name, member => member.login);\n    return (\n      <div className=\"boxed-group boxed-group-inner\">\n        <table className=\"data zebra\">\n          <tbody>\n            {sortedMembers.map(member => (\n              <MembersListItem\n                key={member.login}\n                member={member}\n                organization={this.props.organization}\n                organizationGroups={this.props.organizationGroups}\n                removeMember={\n                  currentUser.login !== member.login ? this.props.removeMember : undefined\n                }\n                updateMemberGroups={this.props.updateMemberGroups}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { getAlmMembersUrl, sanitizeAlmId } from '../../helpers/almIntegrations';\n\nexport interface Props {\n  handleSearch: (query?: string) => void;\n  organization: T.Organization;\n  total?: number;\n}\n\nexport default function MembersListHeader({ handleSearch, organization, total }: Props) {\n  return (\n    <div className=\"panel panel-vertical bordered-bottom spacer-bottom\">\n      <SearchBox\n        minLength={2}\n        onChange={handleSearch}\n        placeholder={translate('search.search_for_members')}\n      />\n      {total !== undefined && (\n        <span className=\"pull-right little-spacer-top\">\n          <strong>{formatMeasure(total, 'INT')}</strong> {translate('organization.members.members')}\n          {organization.alm && organization.alm.membersSync && (\n            <HelpTooltip\n              className=\"spacer-left\"\n              overlay={\n                <div className=\"abs-width-300 markdown cut-margins\">\n                  <p>\n                    {translate(\n                      'organization.members.auto_sync_total_help',\n                      sanitizeAlmId(organization.alm.key)\n                    )}\n                  </p>\n                  <hr />\n                  <p>\n                    <a\n                      href={getAlmMembersUrl(organization.alm.key, organization.alm.url)}\n                      rel=\"noopener noreferrer\"\n                      target=\"_blank\">\n                      {translateWithParameters(\n                        'organization.members.see_all_members_on_x',\n                        translate(sanitizeAlmId(organization.alm.key))\n                      )}\n                    </a>\n                  </p>\n                </div>\n              }\n            />\n          )}\n        </span>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport Avatar from '../../../components/ui/Avatar';\n\ninterface Option {\n  login: string;\n  name: string;\n  avatar?: string;\n}\n\ninterface Props {\n  autoFocus?: boolean;\n  excludedUsers: string[];\n  handleValueChange: (option: Option) => void;\n  searchUsers: (query: string, ps: number) => Promise<{ users: Option[] }>;\n  selectedUser?: Option;\n}\n\ninterface State {\n  isLoading: boolean;\n  search: string;\n  searchResult: Option[];\n}\n\nconst LIST_SIZE = 10;\nconst AVATAR_SIZE = 16;\n\nexport default class UsersSelectSearch extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.handleSearch = debounce(this.handleSearch, 250);\n    this.state = { searchResult: [], isLoading: false, search: '' };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.handleSearch(this.state.search);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.excludedUsers !== prevProps.excludedUsers) {\n      this.handleSearch(this.state.search);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  filterSearchResult = ({ users }: { users: Option[] }) =>\n    users.filter(user => !this.props.excludedUsers.includes(user.login)).slice(0, LIST_SIZE);\n\n  filterOptions = (options: Option[]) => {\n    return options; // We don't filter anything, this is done by the WS\n  };\n\n  handleSearch = (search: string) => {\n    this.props\n      .searchUsers(search, Math.min(this.props.excludedUsers.length + LIST_SIZE, 500))\n      .then(this.filterSearchResult)\n      .then(\n        searchResult => {\n          if (this.mounted) {\n            this.setState({ isLoading: false, searchResult });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ isLoading: false, searchResult: [] });\n          }\n        }\n      );\n  };\n\n  handleInputChange = (search: string) => {\n    if (search == null || search.length === 1) {\n      this.setState({ search });\n    } else {\n      this.setState({ isLoading: true, search });\n      this.handleSearch(search);\n    }\n  };\n\n  render() {\n    const noResult =\n      this.state.search.length === 1\n        ? translateWithParameters('select2.tooShort', 2)\n        : translate('no_results');\n    return (\n      <Select\n        autoFocus={this.props.autoFocus}\n        className=\"Select-big\"\n        clearable={false}\n        filterOptions={this.filterOptions}\n        isLoading={this.state.isLoading}\n        labelKey=\"name\"\n        noResultsText={noResult}\n        onChange={this.props.handleValueChange}\n        onInputChange={this.handleInputChange}\n        optionComponent={UsersSelectSearchOption}\n        options={this.state.searchResult}\n        placeholder=\"\"\n        searchable={true}\n        value={this.props.selectedUser}\n        valueComponent={UsersSelectSearchValue}\n        valueKey=\"login\"\n      />\n    );\n  }\n}\n\ninterface OptionProps {\n  children?: React.ReactNode;\n  className?: string;\n  isFocused?: boolean;\n  onFocus: (option: Option, evt: React.MouseEvent<HTMLDivElement>) => void;\n  onSelect: (option: Option, evt: React.MouseEvent<HTMLDivElement>) => void;\n  option: Option;\n}\n\nexport class UsersSelectSearchOption extends React.PureComponent<OptionProps> {\n  handleMouseDown = (evt: React.MouseEvent<HTMLDivElement>) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.props.onSelect(this.props.option, evt);\n  };\n\n  handleMouseEnter = (evt: React.MouseEvent<HTMLDivElement>) => {\n    this.props.onFocus(this.props.option, evt);\n  };\n\n  handleMouseMove = (evt: React.MouseEvent<HTMLDivElement>) => {\n    if (this.props.isFocused) {\n      return;\n    }\n    this.props.onFocus(this.props.option, evt);\n  };\n\n  render() {\n    const { option } = this.props;\n    return (\n      <div\n        className={this.props.className}\n        onMouseDown={this.handleMouseDown}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseMove={this.handleMouseMove}\n        role=\"listitem\"\n        title={option.name}>\n        <Avatar hash={option.avatar} name={option.name} size={AVATAR_SIZE} />\n        <strong className=\"spacer-left\">{this.props.children}</strong>\n        <span className=\"note little-spacer-left\">{option.login}</span>\n      </div>\n    );\n  }\n}\n\ninterface ValueProps {\n  value?: Option;\n  children?: React.ReactNode;\n}\n\nexport function UsersSelectSearchValue({ children, value }: ValueProps) {\n  return (\n    <div className=\"Select-value\" title={value ? value.name : ''}>\n      {value && value.login && (\n        <div className=\"Select-value-label\">\n          <Avatar hash={value.avatar} name={value.name} size={AVATAR_SIZE} />\n          <strong className=\"spacer-left\">{children}</strong>\n          <span className=\"note little-spacer-left\">{value.login}</span>\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { searchMembers } from '../../api/organizations';\nimport UsersSelectSearch from '../users/components/UsersSelectSearch';\n\ninterface Props {\n  addMember: (member: T.OrganizationMember) => void;\n  organization: T.Organization;\n  memberLogins: string[];\n}\n\ninterface State {\n  open: boolean;\n  selectedMember?: T.OrganizationMember;\n}\n\nexport default class AddMemberForm extends React.PureComponent<Props, State> {\n  state: State = {\n    open: false\n  };\n\n  openForm = () => {\n    this.setState({ open: true });\n  };\n\n  closeForm = () => {\n    this.setState({ open: false, selectedMember: undefined });\n  };\n\n  handleSearch = (query: string | undefined, ps: number) => {\n    const data = { organization: this.props.organization.key, ps, selected: 'deselected' };\n    if (!query) {\n      return searchMembers(data);\n    }\n    return searchMembers({ ...data, q: query });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (this.state.selectedMember) {\n      this.props.addMember(this.state.selectedMember);\n      this.closeForm();\n    }\n  };\n\n  selectedMemberChange = (member: T.OrganizationMember) => {\n    this.setState({ selectedMember: member });\n  };\n\n  renderModal() {\n    const header = translate('users.add');\n    return (\n      <Modal contentLabel={header} key=\"add-member-modal\" onRequestClose={this.closeForm}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <div className=\"modal-field\">\n              <label>{translate('users.search_description')}</label>\n              <UsersSelectSearch\n                autoFocus={true}\n                excludedUsers={this.props.memberLogins}\n                handleValueChange={this.selectedMemberChange}\n                searchUsers={this.handleSearch}\n                selectedUser={this.state.selectedMember}\n              />\n            </div>\n          </div>\n          <footer className=\"modal-foot\">\n            <div>\n              <SubmitButton disabled={!this.state.selectedMember}>\n                {translate('organization.members.add_to_members')}\n              </SubmitButton>\n              <ResetButtonLink onClick={this.closeForm}>{translate('cancel')}</ResetButtonLink>\n            </div>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Button key=\"add-member-button\" onClick={this.openForm}>\n          {translate('organization.members.add')}\n        </Button>\n        {this.state.open && this.renderModal()}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport ConfirmButton from 'sonar-ui-common/components/controls/ConfirmButton';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { setOrganizationMemberSync, syncMembers } from '../../api/organizations';\nimport { sanitizeAlmId } from '../../helpers/almIntegrations';\nimport { fetchOrganization } from '../../store/rootActions';\n\ninterface Props {\n  buttonText: string;\n  fetchOrganization: (key: string) => void;\n  hasOtherMembers?: boolean;\n  organization: T.Organization;\n  refreshMembers: () => Promise<void>;\n}\n\ninterface State {\n  membersSync: boolean;\n}\n\nexport class SyncMemberForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      membersSync: Boolean(props.organization.alm && props.organization.alm.membersSync)\n    };\n  }\n\n  handleConfirm = () => {\n    const { organization } = this.props;\n    const { membersSync } = this.state;\n\n    return setOrganizationMemberSync({\n      organization: organization.key,\n      enabled: membersSync\n    }).then(() => {\n      this.props.fetchOrganization(organization.key);\n      if (membersSync) {\n        return this.handleMemberSync();\n      }\n      return Promise.resolve();\n    });\n  };\n\n  handleManualClick = () => {\n    this.setState({ membersSync: false });\n  };\n\n  handleAutoClick = () => {\n    this.setState({ membersSync: true });\n  };\n\n  handleMemberSync = () => {\n    return syncMembers(this.props.organization.key).then(this.props.refreshMembers);\n  };\n\n  renderModalDescription = () => {\n    return (\n      <p className=\"spacer-top\">\n        {translate('organization.members.management.description')}\n        <Link\n          className=\"spacer-left\"\n          target=\"_blank\"\n          to={{ pathname: '/documentation/organizations/manage-team/' }}>\n          {translate('learn_more')}\n        </Link>\n      </p>\n    );\n  };\n\n  renderModalBody = () => {\n    const { membersSync } = this.state;\n    const { hasOtherMembers, organization } = this.props;\n    const almKey = organization.alm && sanitizeAlmId(organization.alm.key);\n    const showWarning = hasOtherMembers && organization.alm && !organization.alm.membersSync;\n    return (\n      <div className=\"display-flex-stretch big-spacer-top\">\n        <RadioCard\n          onClick={this.handleManualClick}\n          selected={!membersSync}\n          title={translate('organization.members.management.manual')}>\n          <div className=\"spacer-left\">\n            <ul className=\"big-spacer-left note\">\n              <li className=\"spacer-bottom\">\n                {translate('organization.members.management.manual.add_members_manually')}\n              </li>\n              <li>{translate('organization.members.management.choose_members_permissions')}</li>\n            </ul>\n          </div>\n        </RadioCard>\n        <RadioCard\n          onClick={this.handleAutoClick}\n          selected={membersSync}\n          title={translateWithParameters(\n            'organization.members.management.automatic',\n            translate(almKey || '')\n          )}>\n          <div className=\"spacer-left\">\n            <ul className=\"big-spacer-left note\">\n              {almKey && (\n                <>\n                  <li className=\"spacer-bottom\">\n                    {translateWithParameters(\n                      'organization.members.management.automatic.synchronized_from_x',\n                      translate('organization', almKey)\n                    )}\n                  </li>\n                  <li className=\"spacer-bottom\">\n                    {translate(\n                      'organization.members.management.automatic.members_changes_reflected',\n                      almKey\n                    )}\n                  </li>\n                </>\n              )}\n              <li>{translate('organization.members.management.choose_members_permissions')}</li>\n            </ul>\n          </div>\n          {almKey && showWarning && (\n            <Alert className=\"big-spacer-top\" variant=\"warning\">\n              {translateWithParameters(\n                'organization.members.management.automatic.warning_x',\n                translate('organization', almKey)\n              )}\n            </Alert>\n          )}\n        </RadioCard>\n      </div>\n    );\n  };\n\n  render() {\n    const { organization } = this.props;\n    const orgMemberSync = Boolean(organization.alm && organization.alm.membersSync);\n    return (\n      <ConfirmButton\n        cancelButtonText={translate('close')}\n        confirmButtonText={translate('save')}\n        confirmDisable={this.state.membersSync === orgMemberSync}\n        modalBody={this.renderModalBody()}\n        modalHeader={translate('organization.members.management.title')}\n        modalHeaderDescription={this.renderModalDescription()}\n        onConfirm={this.handleConfirm}\n        size=\"medium\">\n        {({ onClick }) => <Button onClick={onClick}>{this.props.buttonText}</Button>}\n      </ConfirmButton>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchOrganization };\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SyncMemberForm);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport DocTooltip from '../../components/docs/DocTooltip';\nimport { isGithub, sanitizeAlmId } from '../../helpers/almIntegrations';\nimport AddMemberForm from './AddMemberForm';\nimport SyncMemberForm from './SyncMemberForm';\n\nexport interface Props {\n  handleAddMember: (member: T.OrganizationMember) => void;\n  loading: boolean;\n  members?: T.OrganizationMember[];\n  organization: T.Organization;\n  refreshMembers: () => Promise<void>;\n}\n\nexport default function MembersPageHeader(props: Props) {\n  const { members, organization, refreshMembers } = props;\n  const memberLogins = members ? members.map(member => member.login) : [];\n  const isAdmin = organization.actions && organization.actions.admin;\n  const almKey = organization.alm && sanitizeAlmId(organization.alm.key);\n  const hasMemberSync = organization.alm && organization.alm.membersSync;\n  const showSyncNotif = isAdmin && organization.alm && !hasMemberSync;\n  const isSyncEligible =\n    almKey && isGithub(almKey) && organization.alm && !organization.alm.personal;\n\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">\n        {translate('organization.members.page')}\n        <DeferredSpinner className=\"little-spacer-left\" loading={props.loading} />\n      </h1>\n\n      {isAdmin && (\n        <div className=\"page-actions text-right\">\n          {isSyncEligible && !showSyncNotif && (\n            <SyncMemberForm\n              buttonText={translate('organization.members.config_synchro')}\n              hasOtherMembers={members && members.length > 1}\n              organization={organization}\n              refreshMembers={refreshMembers}\n            />\n          )}\n          {!hasMemberSync && (\n            <div className=\"display-inline-block spacer-left spacer-bottom\">\n              <AddMemberForm\n                addMember={props.handleAddMember}\n                memberLogins={memberLogins}\n                organization={organization}\n              />\n              <DocTooltip\n                className=\"spacer-left\"\n                doc={import(/* webpackMode: \"eager\" */ 'Docs/tooltips/organizations/add-organization-member.md')}\n              />\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"page-description\">\n        <FormattedMessage\n          defaultMessage={translate('organization.members.page.description')}\n          id=\"organization.members.page.description\"\n          values={{\n            link: (\n              <Link target=\"_blank\" to=\"/documentation/organizations/manage-team/\">\n                {translate('organization.members.manage_a_team')}\n              </Link>\n            )\n          }}\n        />\n        {almKey && isSyncEligible && showSyncNotif && (\n          <Alert className=\"spacer-top\" display=\"inline\" variant=\"info\">\n            {translateWithParameters(\n              'organization.members.auto_sync_members_from_org_x',\n              translate('organization', almKey)\n            )}\n            <span className=\"spacer-left\">\n              <SyncMemberForm\n                buttonText={translate('configure')}\n                hasOtherMembers={members && members.length > 1}\n                organization={organization}\n                refreshMembers={refreshMembers}\n              />\n            </span>\n          </Alert>\n        )}\n      </div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addMember, removeMember, searchMembers } from '../../api/organizations';\nimport { addUserToGroup, removeUserFromGroup, searchUsersGroups } from '../../api/user_groups';\nimport A11ySkipTarget from '../../app/components/a11y/A11ySkipTarget';\nimport Suggestions from '../../app/components/embed-docs-modal/Suggestions';\nimport MembersList from './MembersList';\nimport MembersListHeader from './MembersListHeader';\nimport MembersPageHeader from './MembersPageHeader';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n  organization: T.Organization;\n}\n\ninterface State {\n  groups: T.Group[];\n  loading: boolean;\n  members?: T.OrganizationMember[];\n  paging?: T.Paging;\n  query: string;\n}\n\nconst PAGE_SIZE = 50;\n\nexport default class OrganizationMembers extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    groups: [],\n    loading: true,\n    query: ''\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchMembers();\n    if (this.props.organization.actions && this.props.organization.actions.admin) {\n      this.fetchGroups();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  fetchMembers = (query?: string) => {\n    this.setState({ loading: true });\n    searchMembers({\n      organization: this.props.organization.key,\n      ps: PAGE_SIZE,\n      q: query\n    }).then(({ paging, users }) => {\n      if (this.mounted) {\n        this.setState({ loading: false, members: users, paging });\n      }\n    }, this.stopLoading);\n  };\n\n  fetchGroups = () => {\n    searchUsersGroups({ organization: this.props.organization.key }).then(\n      ({ groups }) => {\n        if (this.mounted) {\n          this.setState({ groups });\n        }\n      },\n      () => {}\n    );\n  };\n\n  handleSearchMembers = (query: string) => {\n    this.setState({ query });\n    this.fetchMembers(query || undefined); // empty string -> undefined\n  };\n\n  handleLoadMoreMembers = () => {\n    const { paging, query } = this.state;\n    if (!paging) {\n      return;\n    }\n\n    this.setState({ loading: true });\n    searchMembers({\n      organization: this.props.organization.key,\n      p: paging.pageIndex + 1,\n      ps: PAGE_SIZE,\n      q: query || undefined // empty string -> undefined\n    }).then(({ paging, users }) => {\n      if (this.mounted) {\n        this.setState(({ members = [] }) => ({\n          loading: false,\n          members: [...members, ...users],\n          paging\n        }));\n      }\n    }, this.stopLoading);\n  };\n\n  handleAddMember = ({ login }: T.OrganizationMember) => {\n    // TODO optimistic update\n    addMember({ login, organization: this.props.organization.key }).then(\n      member => {\n        if (this.mounted) {\n          this.setState(({ members, paging }) => ({\n            members: members && [...members, member],\n            paging: paging && { ...paging, total: paging.total + 1 }\n          }));\n        }\n      },\n      () => {}\n    );\n  };\n\n  handleRemoveMember = ({ login }: T.OrganizationMember) => {\n    // TODO optimistic update\n    removeMember({ login, organization: this.props.organization.key }).then(\n      () => {\n        if (this.mounted) {\n          this.setState(({ members, paging }) => ({\n            members: members && members.filter(member => member.login !== login),\n            paging: paging && { ...paging, total: paging.total - 1 }\n          }));\n        }\n      },\n      () => {}\n    );\n  };\n\n  refreshMembers = () => {\n    return searchMembers({\n      organization: this.props.organization.key,\n      ps: PAGE_SIZE,\n      q: this.state.query || undefined\n    }).then(({ paging, users }) => {\n      if (this.mounted) {\n        this.setState({ members: users, paging });\n      }\n    });\n  };\n\n  updateGroup = (\n    login: string,\n    updater: (member: T.OrganizationMember) => T.OrganizationMember\n  ) => {\n    this.setState(({ members }) => ({\n      members: members && members.map(member => (member.login === login ? updater(member) : member))\n    }));\n  };\n\n  updateMemberGroups = ({ login }: T.OrganizationMember, add: string[], remove: string[]) => {\n    // TODO optimistic update\n    const promises = [\n      ...add.map(name =>\n        addUserToGroup({ name, login, organization: this.props.organization.key })\n      ),\n      ...remove.map(name =>\n        removeUserFromGroup({ name, login, organization: this.props.organization.key })\n      )\n    ];\n    return Promise.all(promises).then(() => {\n      if (this.mounted) {\n        this.updateGroup(login, member => ({\n          ...member,\n          groupCount: (member.groupCount || 0) + add.length - remove.length\n        }));\n      }\n    });\n  };\n\n  render() {\n    const { currentUser, organization } = this.props;\n    const { groups, loading, members, paging } = this.state;\n    const hasMemberSync = organization.alm && organization.alm.membersSync;\n    return (\n      <div className=\"page page-limited\">\n        <Helmet title={translate('organization.members.page')} />\n        <Suggestions suggestions=\"organization_members\" />\n        <A11ySkipTarget anchor=\"members_main\" />\n        <MembersPageHeader\n          handleAddMember={this.handleAddMember}\n          loading={loading}\n          members={members}\n          organization={organization}\n          refreshMembers={this.refreshMembers}\n        />\n        {members !== undefined && paging !== undefined && (\n          <>\n            <MembersListHeader\n              handleSearch={this.handleSearchMembers}\n              organization={organization}\n              total={paging.total}\n            />\n            <MembersList\n              currentUser={currentUser}\n              members={members}\n              organization={organization}\n              organizationGroups={groups}\n              removeMember={hasMemberSync ? undefined : this.handleRemoveMember}\n              updateMemberGroups={this.updateMemberGroups}\n            />\n            {paging.total !== 0 && (\n              <ListFooter\n                count={members.length}\n                loadMore={this.handleLoadMoreMembers}\n                ready={!loading}\n                total={paging.total}\n              />\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { withCurrentUser } from '../../components/hoc/withCurrentUser';\nimport { getOrganizationByKey, Store } from '../../store/rootReducer';\nimport OrganizationMembers from './OrganizationMembers';\n\ninterface OwnProps {\n  params: { organizationKey: string };\n}\n\ninterface StateProps {\n  organization: T.Organization;\n}\n\nconst mapStateToProps = (state: Store, ownProps: OwnProps): StateProps => {\n  return { organization: getOrganizationByKey(state, ownProps.params.organizationKey) };\n};\n\nexport default withCurrentUser(connect(mapStateToProps)(OrganizationMembers));\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { lazyLoad } from 'sonar-ui-common/components/lazyLoad';\nimport { filterContent } from '../../helpers/markdown';\n\nconst DocMarkdownBlock = lazyLoad(() => import('./DocMarkdownBlock'));\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  // Use as `import(/* webpackMode: \"eager\" */ 'Docs/tooltips/foo/bar.md')`\n  doc: Promise<{ default: string }>;\n  overlayProps?: T.Dict<string>;\n}\n\ninterface State {\n  content?: string;\n  open: boolean;\n}\n\nexport default class DocTooltip extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { open: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.doc.then(\n      ({ default: content }) => {\n        if (this.mounted) {\n          this.setState({ content });\n        }\n      },\n      () => {}\n    );\n    document.addEventListener('scroll', this.close, true);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    document.removeEventListener('scroll', this.close, true);\n  }\n\n  close = () => {\n    if (this.mounted) {\n      this.setState({ open: false });\n    }\n  };\n\n  render() {\n    return this.state.content ? (\n      <HelpTooltip\n        className={this.props.className}\n        overlay={\n          <div className=\"abs-width-300\">\n            <DocMarkdownBlock\n              childProps={this.props.overlayProps}\n              className=\"cut-margins\"\n              content={filterContent(this.state.content)}\n              isTooltip={true}\n            />\n          </div>\n        }>\n        {this.props.children}\n      </HelpTooltip>\n    ) : (\n      this.props.children || null\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function getAlmMembersUrl(key: string, url: string): string {\n  if (!url.endsWith('/')) {\n    url += '/';\n  }\n  if (isGithub(key)) {\n    return url.replace('github.com/', 'github.com/orgs/') + 'people';\n  }\n  return url + 'profile/members';\n}\n\nexport function getUserAlmKey(user: T.CurrentUser) {\n  return isLoggedIn(user) && user.externalProvider\n    ? sanitizeAlmId(user.externalProvider)\n    : undefined;\n}\n\nexport function hasAdvancedALMIntegration(user: T.CurrentUser) {\n  return (\n    isLoggedIn(user) && (isBitbucket(user.externalProvider) || isGithub(user.externalProvider))\n  );\n}\n\nexport function isBitbucket(almKey?: string): boolean {\n  return almKey ? almKey.startsWith('bitbucket') : false;\n}\n\nexport function isGithub(almKey?: string): boolean {\n  return almKey === 'github';\n}\n\nexport function isVSTS(almKey?: string): boolean {\n  return almKey === 'microsoft';\n}\n\nexport function sanitizeAlmId(almKey: string) {\n  if (isBitbucket(almKey)) {\n    return 'bitbucket';\n  }\n  return almKey;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// keep this file in JavaScript, because it is used by a webpack loader\nmodule.exports = { getFrontMatter, separateFrontMatter, filterContent };\n\nfunction getFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  return position ? parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine)) : {};\n}\n\nfunction separateFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  if (position) {\n    const frontmatter = parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine));\n    const content = lines.slice(position.lastLine + 1).join('\\n');\n    return { frontmatter, content };\n  } else {\n    return { frontmatter: {}, content };\n  }\n}\n\nfunction getFrontMatterPosition(lines) {\n  let firstLine;\n  let lastLine;\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    if (line.trim() === '---') {\n      if (firstLine === undefined) {\n        firstLine = i;\n      } else {\n        lastLine = i;\n        break;\n      }\n    }\n  }\n  return lastLine !== undefined ? { firstLine, lastLine } : undefined;\n}\n\nfunction parseFrontMatter(lines) {\n  const data = {};\n  for (let i = 0; i < lines.length; i++) {\n    const tokens = lines[i].split(':').map(x => x.trim());\n    if (tokens.length === 2) {\n      data[tokens[0]] = tokens[1];\n    }\n  }\n  return data;\n}\n\n/**\n * @param {string} content\n * @returns {string}\n */\nfunction filterContent(content) {\n  const regexBase = '<!-- \\\\/?(sonarqube|sonarcloud|static) -->';\n  const { isSonarCloud, getInstance } = require('./system');\n  const contentWithInstance = content.replace(/{instance}/gi, getInstance());\n  const contentWithoutStatic = cutConditionalContent(contentWithInstance, 'static');\n  const filteredContent = isSonarCloud()\n    ? cutConditionalContent(contentWithoutStatic, 'sonarqube')\n    : cutConditionalContent(contentWithoutStatic, 'sonarcloud');\n  return filteredContent\n    .replace(new RegExp(`^${regexBase}(\\n|\\r|\\r\\n|$)`, 'gm'), '') // First, remove single-line ones, including ending carriage-returns.\n    .replace(new RegExp(`${regexBase}`, 'g'), ''); // Now remove all remaining ones.\n}\n\n/**\n * @param {string} content\n * @param {string} tag\n * @returns {string}\n */\nfunction cutConditionalContent(content, tag) {\n  const beginning = `<!-- ${tag} -->`;\n  const ending = `<!-- /${tag} -->`;\n\n  let newContent = content;\n  let start = newContent.indexOf(beginning);\n  let end = newContent.indexOf(ending);\n  while (start !== -1 && end !== -1) {\n    newContent = newContent.substring(0, start) + newContent.substring(end + ending.length);\n    start = newContent.indexOf(beginning);\n    end = newContent.indexOf(ending);\n  }\n\n  return newContent;\n}\n"],"sourceRoot":""}