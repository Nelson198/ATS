{"version":3,"sources":["webpack:///./src/main/js/apps/maintenance/components/App.tsx","webpack:///./src/main/js/apps/maintenance/styles.css?fea4","webpack:///./src/main/js/apps/maintenance/styles.css","webpack:///./src/main/js/apps/maintenance/components/SetupAppContainer.tsx","webpack:///./src/main/js/components/intl/DateFromNow.tsx","webpack:///./src/main/js/api/system.ts","webpack:///./src/main/js/components/intl/TimeFormatter.tsx"],"names":["App","_super","_this","apply","this","arguments","mounted","state","fetchStatus","props","setup","fetchMigrationState","fetchSystemStatus","catch","setState","message","undefined","startedAt","status","Object","_api_system__WEBPACK_IMPORTED_MODULE_7__","then","_a","wasStarting","scheduleRefresh","loadPreviousPage","interval","window","setTimeout","setInterval","location","href","sonar_ui_common_helpers_urls__WEBPACK_IMPORTED_MODULE_6__","handleMigrateClick","__extends","prototype","componentDidMount","componentWillUnmount","clearInterval","render","react__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","defaultTitle","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_5__","className","id","classnames__WEBPACK_IMPORTED_MODULE_0__","panel-warning","_components_common_InstanceMessage__WEBPACK_IMPORTED_MODULE_8__","_helpers_system__WEBPACK_IMPORTED_MODULE_11__","react_intl__WEBPACK_IMPORTED_MODULE_3__","defaultMessage","values","link","sonar_ui_common_components_controls_buttons__WEBPACK_IMPORTED_MODULE_4__","onClick","_components_intl_DateFromNow__WEBPACK_IMPORTED_MODULE_9__","date","_components_intl_TimeFormatter__WEBPACK_IMPORTED_MODULE_10__","long","content","__webpack_require__","module","i","options","hmr","transform","insertInto","locals","exports","push","MaintenanceAppContainer","react__WEBPACK_IMPORTED_MODULE_0__","_App__WEBPACK_IMPORTED_MODULE_1__","__assign","d","__webpack_exports__","DateFromNow","react_intl__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","children","value","setLogLevel","getSystemInfo","getSystemStatus","getSystemUpgrades","getMigrationStatus","migrateDatabase","restart","waitSystemUPStatus","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","level","max","slowThreshold","formatterOption","hour","minute","longFormatterOption","second","TimeFormatter"],"mappings":"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","file":"js/340.1570825310815.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl, getReturnUrl } from 'sonar-ui-common/helpers/urls';\nimport { getMigrationStatus, getSystemStatus, migrateDatabase } from '../../../api/system';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\nimport DateFromNow from '../../../components/intl/DateFromNow';\nimport TimeFormatter from '../../../components/intl/TimeFormatter';\nimport { isSonarCloud } from '../../../helpers/system';\nimport '../styles.css';\n\ninterface Props {\n  location: { query: { return_to?: string } };\n  setup: boolean;\n}\n\ninterface State {\n  message?: string;\n  startedAt?: string;\n  state?: string;\n  status?: string;\n  wasStarting?: boolean;\n}\n\nexport default class App extends React.PureComponent<Props, State> {\n  interval?: number;\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchStatus();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.interval) {\n      window.clearInterval(this.interval);\n    }\n  }\n\n  fetchStatus = () => {\n    const request = this.props.setup ? this.fetchMigrationState() : this.fetchSystemStatus();\n    request.catch(() => {\n      if (this.mounted) {\n        this.setState({\n          message: undefined,\n          startedAt: undefined,\n          state: undefined,\n          status: 'OFFLINE'\n        });\n      }\n    });\n  };\n\n  fetchSystemStatus = () => {\n    return getSystemStatus().then(({ status }) => {\n      if (this.mounted) {\n        this.setState({ status });\n\n        if (status === 'STARTING') {\n          this.setState({ wasStarting: true });\n          this.scheduleRefresh();\n        } else if (status === 'UP') {\n          if (this.state.wasStarting) {\n            this.loadPreviousPage();\n          }\n        } else {\n          this.scheduleRefresh();\n        }\n      }\n    });\n  };\n\n  fetchMigrationState = () => {\n    return getMigrationStatus().then(({ message, startedAt, state }) => {\n      if (this.mounted) {\n        this.setState({ message, startedAt, state });\n        if (state === 'MIGRATION_SUCCEEDED') {\n          this.loadPreviousPage();\n        } else if (state !== 'NO_MIGRATION') {\n          this.scheduleRefresh();\n        }\n      }\n    });\n  };\n\n  scheduleRefresh = () => {\n    this.interval = window.setTimeout(this.fetchStatus, 5000);\n  };\n\n  loadPreviousPage = () => {\n    setInterval(() => {\n      window.location.href = getReturnUrl(this.props.location);\n    }, 2500);\n  };\n\n  handleMigrateClick = () => {\n    migrateDatabase().then(\n      ({ message, startedAt, state }) => {\n        if (this.mounted) {\n          this.setState({ message, startedAt, state });\n        }\n      },\n      () => {}\n    );\n  };\n\n  render() {\n    const { state, status } = this.state;\n\n    return (\n      <>\n        <Helmet defaultTitle={translate('maintenance.page')} />\n        <div className=\"page-wrapper-simple\" id=\"bd\">\n          <div\n            className={classNames('page-simple', {\n              'panel-warning': state === 'MIGRATION_REQUIRED'\n            })}\n            id=\"nonav\">\n            {status === 'OFFLINE' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  <InstanceMessage message={translate('maintenance.is_offline')} />\n                </h1>\n                {!isSonarCloud() && (\n                  <p className=\"maintenance-text\">\n                    {translate('maintenance.sonarqube_is_offline.text')}\n                  </p>\n                )}\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('maintenance.try_again')}</a>\n                </p>\n              </>\n            )}\n\n            {status === 'UP' && (\n              <>\n                <h1 className=\"maintenance-title\">\n                  <InstanceMessage message={translate('maintenance.is_up')} />\n                </h1>\n                <p className=\"maintenance-text text-center\">\n                  {translate('maintenance.all_systems_opetational')}\n                </p>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n                </p>\n              </>\n            )}\n\n            {status === 'STARTING' && (\n              <>\n                <h1 className=\"maintenance-title\">\n                  <InstanceMessage message={translate('maintenance.is_starting')} />\n                </h1>\n                <p className=\"maintenance-spinner\">\n                  <i className=\"spinner\" />\n                </p>\n              </>\n            )}\n\n            {status === 'DOWN' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  <InstanceMessage message={translate('maintenance.is_down')} />\n                </h1>\n                <p className=\"maintenance-text\">\n                  {translate('maintenance.sonarqube_is_down.text')}\n                </p>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('maintenance.try_again')}</a>\n                </p>\n              </>\n            )}\n\n            {(status === 'DB_MIGRATION_NEEDED' || status === 'DB_MIGRATION_RUNNING') && (\n              <>\n                <h1 className=\"maintenance-title\">\n                  <InstanceMessage message={translate('maintenance.is_under_maintenance')} />\n                </h1>\n                {!isSonarCloud() && (\n                  <>\n                    <p className=\"maintenance-text\">\n                      <FormattedMessage\n                        defaultMessage={translate('maintenance.sonarqube_is_under_maintenance.1')}\n                        id=\"maintenance.sonarqube_is_under_maintenance.1\"\n                        values={{\n                          link: (\n                            <a href=\"https://redirect.sonarsource.com/doc/plugin-library.html\">\n                              {translate('maintenance.sonarqube_is_under_maintenance_link.1')}\n                            </a>\n                          )\n                        }}\n                      />\n                    </p>\n                    <p className=\"maintenance-text\">\n                      <FormattedMessage\n                        defaultMessage={translate('maintenance.sonarqube_is_under_maintenance.2')}\n                        id=\"maintenance.sonarqube_is_under_maintenance.2\"\n                        values={{\n                          link: (\n                            <a href=\"https://redirect.sonarsource.com/doc/upgrading.html\">\n                              {translate('maintenance.sonarqube_is_under_maintenance_link.2')}\n                            </a>\n                          )\n                        }}\n                      />\n                    </p>\n                  </>\n                )}\n              </>\n            )}\n\n            {state === 'NO_MIGRATION' && (\n              <>\n                <h1 className=\"maintenance-title\">\n                  {translate('maintenance.database_is_up_to_date')}\n                </h1>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n                </p>\n              </>\n            )}\n\n            {state === 'MIGRATION_REQUIRED' && (\n              <>\n                <h1 className=\"maintenance-title\">{translate('maintenance.upgrade_database')}</h1>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_database.1')}</p>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_database.2')}</p>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_database.3')}</p>\n                <div className=\"maintenance-spinner\">\n                  <Button id=\"start-migration\" onClick={this.handleMigrateClick}>\n                    {translate('maintenance.upgrade')}\n                  </Button>\n                </div>\n              </>\n            )}\n\n            {state === 'NOT_SUPPORTED' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  {translate('maintenance.migration_not_supported')}\n                </h1>\n                <p>{translate('maintenance.migration_not_supported.text')}</p>\n              </>\n            )}\n\n            {state === 'MIGRATION_RUNNING' && (\n              <>\n                <h1 className=\"maintenance-title\">{translate('maintenance.database_migration')}</h1>\n                {this.state.message && (\n                  <p className=\"maintenance-text text-center\">{this.state.message}</p>\n                )}\n                {this.state.startedAt && (\n                  <p className=\"maintenance-text text-center\">\n                    {translate('background_tasks.table.started')}{' '}\n                    <DateFromNow date={this.state.startedAt} />\n                    <br />\n                    <small className=\"text-muted\">\n                      <TimeFormatter date={this.state.startedAt} long={true} />\n                    </small>\n                  </p>\n                )}\n                <p className=\"maintenance-spinner\">\n                  <i className=\"spinner\" />\n                </p>\n              </>\n            )}\n\n            {state === 'MIGRATION_SUCCEEDED' && (\n              <>\n                <h1 className=\"maintenance-title text-success\">\n                  {translate('maintenance.database_is_up_to_date')}\n                </h1>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n                </p>\n              </>\n            )}\n\n            {state === 'MIGRATION_FAILED' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  {translate('maintenance.upgrade_failed')}\n                </h1>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_failed.text')}</p>\n              </>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".maintenance-title{margin-bottom:40px;line-height:1.5;font-size:24px;font-weight:300;text-align:center}.maintenance-text{margin-bottom:16px;line-height:1.5;font-size:16px;font-weight:300}.maintenance-spinner{margin-top:40px;text-align:center}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport App from './App';\n\ninterface Props {\n  location: { query: { return_to: string } };\n}\n\nexport default function MaintenanceAppContainer(props: Props) {\n  return <App setup={true} {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedRelative } from 'react-intl';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n}\n\nexport default function DateFromNow({ children, date }: Props) {\n  return <FormattedRelative value={parseDate(date)}>{children}</FormattedRelative>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON, requestTryAndRepeatUntil } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function setLogLevel(level: string): Promise<void | Response> {\n  return post('/api/system/change_log_level', { level }).catch(throwGlobalError);\n}\n\nexport function getSystemInfo(): Promise<T.SysInfoCluster | T.SysInfoStandalone> {\n  return getJSON('/api/system/info').catch(throwGlobalError);\n}\n\nexport function getSystemStatus(): Promise<{ id: string; version: string; status: T.SysStatus }> {\n  return getJSON('/api/system/status');\n}\n\nexport function getSystemUpgrades(): Promise<{\n  upgrades: T.SystemUpgrade[];\n  updateCenterRefresh: string;\n}> {\n  return getJSON('/api/system/upgrades');\n}\n\nexport function getMigrationStatus(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return getJSON('/api/system/db_migration_status');\n}\n\nexport function migrateDatabase(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return postJSON('/api/system/migrate_db');\n}\n\nexport function restart(): Promise<void | Response> {\n  return post('/api/system/restart').catch(throwGlobalError);\n}\n\nexport function waitSystemUPStatus(): Promise<{\n  id: string;\n  version: string;\n  status: T.SysStatus;\n}> {\n  return requestTryAndRepeatUntil(\n    getSystemStatus,\n    { max: -1, slowThreshold: -15 },\n    ({ status }) => status === 'UP'\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedTime } from 'react-intl';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { hour: 'numeric', minute: 'numeric' };\n\nexport const longFormatterOption = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n\nexport default function TimeFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedTime value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedTime>\n  );\n}\n"],"sourceRoot":""}