{"version":3,"sources":["webpack:///./src/main/js/app/components/extensions/ProjectPageExtension.tsx","webpack:///./src/main/js/helpers/extensions.ts","webpack:///./src/main/js/app/components/SimpleContainer.tsx","webpack:///./src/main/js/app/components/NotFound.tsx","webpack:///./src/main/js/app/components/extensions/Extension.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","ProjectPageExtension","react__WEBPACK_IMPORTED_MODULE_0__","_NotFound__WEBPACK_IMPORTED_MODULE_1__","_Extension__WEBPACK_IMPORTED_MODULE_2__","props","_a","params","extensionKey","pluginKey","component","extension","extensions","find","p","key","options","withContainer","librariesExposed","installScript","url","target","Promise","resolve","scriptTag","document","createElement","src","Object","sonar_ui_common_helpers_urls__WEBPACK_IMPORTED_MODULE_0__","onload","getElementsByTagName","appendChild","getExtensionStart","fromCache","_extensionsHandler__WEBPACK_IMPORTED_MODULE_1__","all","e","then","bind","exposeLibraries","sent","default","start","reject","SimpleContainer","sonar_ui_common_components_ui_NavBar__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_ui_NavBar__WEBPACK_IMPORTED_MODULE_1___default","n","_theme__WEBPACK_IMPORTED_MODULE_2__","_GlobalFooterContainer__WEBPACK_IMPORTED_MODULE_3__","children","className","id","a","height","globalNavHeightRaw","NotFound","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_router__WEBPACK_IMPORTED_MODULE_2__","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","_SimpleContainer__WEBPACK_IMPORTED_MODULE_4__","_b","Container","defaultTitle","defer","to","Extension","_super","_this","apply","this","arguments","state","handleStart","store","_utils_getStore__WEBPACK_IMPORTED_MODULE_10__","result","__assign","el","container","currentUser","intl","location","router","theme","_theme__WEBPACK_IMPORTED_MODULE_9__","setState","extensionElement","stop","handleFailure","onFail","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","__extends","prototype","componentDidMount","startExtension","componentDidUpdate","prevProps","stopExtension","componentWillUnmount","_helpers_extensions__WEBPACK_IMPORTED_MODULE_6__","undefined","render","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","title","name","ref","mapDispatchToProps","_store_globalMessages__WEBPACK_IMPORTED_MODULE_7__","react_intl__WEBPACK_IMPORTED_MODULE_2__","_components_hoc_withRouter__WEBPACK_IMPORTED_MODULE_5__","react_redux__WEBPACK_IMPORTED_MODULE_3__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_8__"],"mappings":"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","file":"js/351.1570825310815.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport NotFound from '../NotFound';\nimport Extension from './Extension';\n\ninterface Props {\n  component: T.Component;\n  location: { query: { id: string } };\n  params: {\n    extensionKey: string;\n    pluginKey: string;\n  };\n}\n\nexport default function ProjectPageExtension(props: Props) {\n  const { extensionKey, pluginKey } = props.params;\n  const { component } = props;\n  const extension =\n    component.extensions &&\n    component.extensions.find(p => p.key === `${pluginKey}/${extensionKey}`);\n  return extension ? (\n    <Extension extension={extension} options={{ component }} />\n  ) : (\n    <NotFound withContainer={false} />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { getExtensionFromCache } from './extensionsHandler';\n\nlet librariesExposed = false;\n\nexport function installScript(url: string, target: 'body' | 'head' = 'body'): Promise<any> {\n  return new Promise(resolve => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = `${getBaseUrl()}${url}`;\n    scriptTag.onload = resolve;\n    document.getElementsByTagName(target)[0].appendChild(scriptTag);\n  });\n}\n\nexport async function getExtensionStart(key: string) {\n  const fromCache = getExtensionFromCache(key);\n  if (fromCache) {\n    return Promise.resolve(fromCache);\n  }\n\n  if (!librariesExposed) {\n    // Async import allows to reduce initial vendor bundle size\n    const exposeLibraries = (await import('../app/components/extensions/exposeLibraries')).default;\n    exposeLibraries();\n    librariesExposed = true;\n  }\n\n  await installScript(`/static/${key}.js`);\n\n  const start = getExtensionFromCache(key);\n  if (start) {\n    return start;\n  }\n  return Promise.reject();\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport NavBar from 'sonar-ui-common/components/ui/NavBar';\nimport { rawSizes } from '../theme';\nimport GlobalFooterContainer from './GlobalFooterContainer';\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nexport default function SimpleContainer({ children }: Props) {\n  return (\n    <div className=\"global-container\">\n      <div className=\"page-wrapper\" id=\"container\">\n        <NavBar className=\"navbar-global\" height={rawSizes.globalNavHeightRaw} />\n        {children}\n      </div>\n      <GlobalFooterContainer />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport SimpleContainer from './SimpleContainer';\n\ninterface Props {\n  withContainer?: boolean;\n}\n\nexport default function NotFound({ withContainer = true }: Props) {\n  const Container = withContainer ? SimpleContainer : React.Fragment;\n  return (\n    <Container>\n      <Helmet defaultTitle={translate('404_not_found')} defer={false} />\n      <div className=\"page-wrapper-simple\" id=\"bd\">\n        <div className=\"page-simple\" id=\"nonav\">\n          <h2 className=\"big-spacer-bottom\">{translate('page_not_found')}</h2>\n          <p className=\"spacer-bottom\">{translate('address_mistyped_or_page_moved')}</p>\n          <p>\n            <Link to=\"/\">{translate('go_back_to_homepage')}</Link>\n          </p>\n        </div>\n      </div>\n    </Container>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Location, Router, withRouter } from '../../../components/hoc/withRouter';\nimport { getExtensionStart } from '../../../helpers/extensions';\nimport { addGlobalErrorMessage } from '../../../store/globalMessages';\nimport { getCurrentUser, Store } from '../../../store/rootReducer';\nimport * as theme from '../../theme';\nimport getStore from '../../utils/getStore';\n\ninterface Props extends InjectedIntlProps {\n  currentUser: T.CurrentUser;\n  extension: T.Extension;\n  location: Location;\n  onFail: (message: string) => void;\n  options?: T.Dict<any>;\n  router: Router;\n}\n\ninterface State {\n  extensionElement?: React.ReactElement<any>;\n}\n\nexport class Extension extends React.PureComponent<Props, State> {\n  container?: HTMLElement | null;\n  stop?: Function;\n  state: State = {};\n\n  componentDidMount() {\n    this.startExtension();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.extension !== this.props.extension) {\n      this.stopExtension();\n      this.startExtension();\n    } else if (prevProps.location !== this.props.location) {\n      this.startExtension();\n    }\n  }\n\n  componentWillUnmount() {\n    this.stopExtension();\n  }\n\n  handleStart = (start: Function) => {\n    const store = getStore();\n    const result = start({\n      store,\n      el: this.container,\n      currentUser: this.props.currentUser,\n      intl: this.props.intl,\n      location: this.props.location,\n      router: this.props.router,\n      theme,\n      ...this.props.options\n    });\n\n    if (React.isValidElement(result)) {\n      this.setState({ extensionElement: result });\n    } else {\n      this.stop = result;\n    }\n  };\n\n  handleFailure = () => {\n    this.props.onFail(translate('page_extension_failed'));\n  };\n\n  startExtension() {\n    getExtensionStart(this.props.extension.key).then(this.handleStart, this.handleFailure);\n  }\n\n  stopExtension() {\n    if (this.stop) {\n      this.stop();\n      this.stop = undefined;\n    } else {\n      this.setState({ extensionElement: undefined });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Helmet title={this.props.extension.name} />\n        {this.state.extensionElement ? (\n          this.state.extensionElement\n        ) : (\n          <div ref={container => (this.container = container)} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({ currentUser: getCurrentUser(state) });\nconst mapDispatchToProps = { onFail: addGlobalErrorMessage };\n\nexport default injectIntl(\n  withRouter(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(Extension)\n  )\n);\n"],"sourceRoot":""}