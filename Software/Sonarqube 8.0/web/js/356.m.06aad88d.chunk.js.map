{"version":3,"sources":["webpack:///./node_modules/sonar-ui-common/components/icons/PlusIcon.js","webpack:///./src/main/js/apps/portfolio/components/CreateFormShim.tsx","webpack:///./src/main/js/app/components/nav/global/GlobalNavPlus.tsx","webpack:///./src/main/js/helpers/extensions.ts","webpack:///./src/main/js/api/nav.ts"],"names":["Object","defineProperty","exports","value","React","__webpack_require__","Icon_1","default","_a","className","_b","fill","size","createElement","d","style","CreateFormShim_CreateFormShim","index_js_exposed","[object Object]","CreateForm","window","SonarGovernance","assign","this","props","__webpack_exports__","GlobalNavPlus_GlobalNavPlus","mounted","state","createPortfolio","governanceReady","handleNewProjectClick","event","preventDefault","openProjectOnboarding","openCreatePortfolioForm","setState","closeCreatePortfolioForm","handleNewPortfolioClick","currentTarget","blur","handleCreatePortfolio","_ref","key","qualifier","nav","component","then","data","configuration","extensions","find","item","router","push","urls","appState","qualifiers","includes","canCreateProject","href","onClick","system","l10n","canCreateOrg","es","to","showGovernanceEntry","defaultQualifier","currentUser","canCreateApplication","users","canCreatePortfolio","Dropdown_default","a","overlay","renderCreateProject","renderCreateOrganization","renderCreatePortfolio","tagName","title","PlusIcon_default","onClose","onCreate","installScript","getExtensionStart","sonar_ui_common_helpers_urls__WEBPACK_IMPORTED_MODULE_0__","_extensionsHandler__WEBPACK_IMPORTED_MODULE_1__","librariesExposed","url","target","arguments","length","undefined","Promise","resolve","scriptTag","document","src","concat","onload","getElementsByTagName","appendChild","async","fromCache","exposeLibraries","all","e","bind","start","reject","getComponentNavigation","getMarketplaceNavigation","getSettingsNavigation","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","catch"],"mappings":"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","file":"js/356.m.06aad88d.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar Icon_1 = require(\"./Icon\");\nfunction PlusIcon(_a) {\n    var className = _a.className, _b = _a.fill, fill = _b === void 0 ? 'currentColor' : _b, size = _a.size;\n    return (React.createElement(Icon_1.default, { className: className, size: size },\n        React.createElement(\"path\", { d: \"M1,7L7,7L7,1L9,1L9,7L15,7L15,9L9,9L9,15L7,15L7,9L1,9L1,7Z\", style: { fill: fill } })));\n}\nexports.default = PlusIcon;\n//# sourceMappingURL=PlusIcon.js.map","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface Props {\n  defaultQualifier?: string;\n  onClose: () => void;\n  onCreate: (portfolio: { key: string; qualifier: string }) => void;\n}\n\nexport default class CreateFormShim extends React.Component<Props> {\n  render() {\n    const { CreateForm } = (window as any).SonarGovernance;\n    return <CreateForm {...this.props} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link, withRouter, WithRouterProps } from 'react-router';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport PlusIcon from 'sonar-ui-common/components/icons/PlusIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getComponentNavigation } from '../../../../api/nav';\nimport CreateFormShim from '../../../../apps/portfolio/components/CreateFormShim';\nimport { getExtensionStart } from '../../../../helpers/extensions';\nimport { isSonarCloud } from '../../../../helpers/system';\nimport { getPortfolioAdminUrl, getPortfolioUrl } from '../../../../helpers/urls';\nimport { hasGlobalPermission } from '../../../../helpers/users';\nimport { OnboardingContextShape } from '../../OnboardingContext';\n\ninterface Props {\n  appState: Pick<T.AppState, 'qualifiers'>;\n  currentUser: T.LoggedInUser;\n  openProjectOnboarding: OnboardingContextShape;\n}\n\ninterface State {\n  createPortfolio: boolean;\n  governanceReady: boolean;\n}\n\nexport class GlobalNavPlus extends React.PureComponent<Props & WithRouterProps, State> {\n  mounted = false;\n  state: State = { createPortfolio: false, governanceReady: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.props.appState.qualifiers.includes('VW')) {\n      getExtensionStart('governance/console').then(\n        () => {\n          if (this.mounted) {\n            this.setState({ governanceReady: true });\n          }\n        },\n        () => {}\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleNewProjectClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.props.openProjectOnboarding();\n  };\n\n  openCreatePortfolioForm = () => {\n    this.setState({ createPortfolio: true });\n  };\n\n  closeCreatePortfolioForm = () => {\n    this.setState({ createPortfolio: false });\n  };\n\n  handleNewPortfolioClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.openCreatePortfolioForm();\n  };\n\n  handleCreatePortfolio = ({ key, qualifier }: { key: string; qualifier: string }) => {\n    return getComponentNavigation({ component: key }).then(data => {\n      if (\n        data.configuration &&\n        data.configuration.extensions &&\n        data.configuration.extensions.find(\n          (item: { key: string; name: string }) => item.key === 'governance/console'\n        )\n      ) {\n        this.props.router.push(getPortfolioAdminUrl(key, qualifier));\n      } else {\n        this.props.router.push(getPortfolioUrl(key));\n      }\n      this.closeCreatePortfolioForm();\n    });\n  };\n\n  renderCreateProject(canCreateProject: boolean) {\n    if (!canCreateProject) {\n      return null;\n    }\n    return (\n      <li>\n        <a className=\"js-new-project\" href=\"#\" onClick={this.handleNewProjectClick}>\n          {isSonarCloud()\n            ? translate('provisioning.analyze_new_project')\n            : translate('my_account.create_new.TRK')}\n        </a>\n      </li>\n    );\n  }\n\n  renderCreateOrganization(canCreateOrg: boolean) {\n    if (!canCreateOrg) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link className=\"js-new-organization\" to=\"/create-organization\">\n          {translate('my_account.create_new_organization')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderCreatePortfolio(showGovernanceEntry: boolean, defaultQualifier?: string) {\n    const governanceInstalled = this.props.appState.qualifiers.includes('VW');\n    if (!governanceInstalled || !showGovernanceEntry) {\n      return null;\n    }\n\n    return (\n      <li>\n        <a className=\"js-new-portfolio\" href=\"#\" onClick={this.handleNewPortfolioClick}>\n          {defaultQualifier\n            ? translate('my_account.create_new', defaultQualifier)\n            : translate('my_account.create_new_portfolio_application')}\n        </a>\n      </li>\n    );\n  }\n\n  render() {\n    const { currentUser } = this.props;\n    const canCreateApplication = hasGlobalPermission(currentUser, 'applicationcreator');\n    const canCreateOrg = isSonarCloud();\n    const canCreatePortfolio = hasGlobalPermission(currentUser, 'portfoliocreator');\n    const canCreateProject = isSonarCloud() || hasGlobalPermission(currentUser, 'provisioning');\n\n    if (!canCreateProject && !canCreateApplication && !canCreatePortfolio && !canCreateOrg) {\n      return null;\n    }\n\n    let defaultQualifier: string | undefined;\n    if (!canCreateApplication) {\n      defaultQualifier = 'VW';\n    } else if (!canCreatePortfolio) {\n      defaultQualifier = 'APP';\n    }\n\n    return (\n      <>\n        <Dropdown\n          overlay={\n            <ul className=\"menu\">\n              {this.renderCreateProject(canCreateProject)}\n              {this.renderCreateOrganization(canCreateOrg)}\n              {this.renderCreatePortfolio(\n                canCreateApplication || canCreatePortfolio,\n                defaultQualifier\n              )}\n            </ul>\n          }\n          tagName=\"li\">\n          <a\n            className=\"navbar-icon navbar-plus\"\n            href=\"#\"\n            title={\n              isSonarCloud()\n                ? translate('my_account.create_new_project_or_organization')\n                : translate('my_account.create_new_project_portfolio_or_application')\n            }>\n            <PlusIcon />\n          </a>\n        </Dropdown>\n        {this.state.governanceReady && this.state.createPortfolio && (\n          <CreateFormShim\n            defaultQualifier={defaultQualifier}\n            onClose={this.closeCreatePortfolioForm}\n            onCreate={this.handleCreatePortfolio}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter(GlobalNavPlus);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { getExtensionFromCache } from './extensionsHandler';\n\nlet librariesExposed = false;\n\nexport function installScript(url: string, target: 'body' | 'head' = 'body'): Promise<any> {\n  return new Promise(resolve => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = `${getBaseUrl()}${url}`;\n    scriptTag.onload = resolve;\n    document.getElementsByTagName(target)[0].appendChild(scriptTag);\n  });\n}\n\nexport async function getExtensionStart(key: string) {\n  const fromCache = getExtensionFromCache(key);\n  if (fromCache) {\n    return Promise.resolve(fromCache);\n  }\n\n  if (!librariesExposed) {\n    // Async import allows to reduce initial vendor bundle size\n    const exposeLibraries = (await import('../app/components/extensions/exposeLibraries')).default;\n    exposeLibraries();\n    librariesExposed = true;\n  }\n\n  await installScript(`/static/${key}.js`);\n\n  const start = getExtensionFromCache(key);\n  if (start) {\n    return start;\n  }\n  return Promise.reject();\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getGlobalNavigation(): Promise<T.AppState> {\n  return getJSON('/api/navigation/global');\n}\n\ntype NavComponent = T.Omit<T.Component, 'alm' | 'qualifier' | 'leakPeriodDate' | 'path' | 'tags'>;\n\nexport function getComponentNavigation(\n  data: { component: string } & T.BranchParameters\n): Promise<NavComponent> {\n  return getJSON('/api/navigation/component', data).catch(throwGlobalError);\n}\n\nexport function getMarketplaceNavigation(): Promise<{ serverId: string; ncloc: number }> {\n  return getJSON('/api/navigation/marketplace').catch(throwGlobalError);\n}\n\nexport function getSettingsNavigation(): Promise<any> {\n  return getJSON('/api/navigation/settings').catch(throwGlobalError);\n}\n"],"sourceRoot":""}