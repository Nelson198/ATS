{"version":3,"sources":["webpack:///./node_modules/d3-path/src/path.js","webpack:///./node_modules/d3-shape/src/constant.js","webpack:///./node_modules/d3-shape/src/math.js","webpack:///./node_modules/d3-shape/src/arc.js","webpack:///./node_modules/d3-shape/src/curve/linear.js","webpack:///./node_modules/d3-shape/src/point.js","webpack:///./node_modules/d3-shape/src/line.js","webpack:///./node_modules/d3-shape/src/area.js","webpack:///./node_modules/d3-shape/src/descending.js","webpack:///./node_modules/d3-shape/src/identity.js","webpack:///./node_modules/d3-shape/src/pie.js","webpack:///./node_modules/d3-shape/src/curve/radial.js","webpack:///./node_modules/d3-shape/src/lineRadial.js","webpack:///./node_modules/d3-shape/src/areaRadial.js","webpack:///./node_modules/d3-shape/src/pointRadial.js","webpack:///./node_modules/d3-shape/src/array.js","webpack:///./node_modules/d3-shape/src/link/index.js","webpack:///./node_modules/d3-shape/src/symbol/circle.js","webpack:///./node_modules/d3-shape/src/symbol/cross.js","webpack:///./node_modules/d3-shape/src/symbol/diamond.js","webpack:///./node_modules/d3-shape/src/symbol/star.js","webpack:///./node_modules/d3-shape/src/symbol/square.js","webpack:///./node_modules/d3-shape/src/symbol/triangle.js","webpack:///./node_modules/d3-shape/src/symbol/wye.js","webpack:///./node_modules/d3-shape/src/symbol.js","webpack:///./node_modules/d3-shape/src/noop.js","webpack:///./node_modules/d3-shape/src/curve/basis.js","webpack:///./node_modules/d3-shape/src/curve/basisClosed.js","webpack:///./node_modules/d3-shape/src/curve/basisOpen.js","webpack:///./node_modules/d3-shape/src/curve/bundle.js","webpack:///./node_modules/d3-shape/src/curve/cardinal.js","webpack:///./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack:///./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack:///./node_modules/d3-shape/src/curve/catmullRom.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack:///./node_modules/d3-shape/src/curve/linearClosed.js","webpack:///./node_modules/d3-shape/src/curve/monotone.js","webpack:///./node_modules/d3-shape/src/curve/natural.js","webpack:///./node_modules/d3-shape/src/curve/step.js","webpack:///./node_modules/d3-shape/src/offset/none.js","webpack:///./node_modules/d3-shape/src/order/none.js","webpack:///./node_modules/d3-shape/src/stack.js","webpack:///./node_modules/d3-shape/src/offset/expand.js","webpack:///./node_modules/d3-shape/src/offset/diverging.js","webpack:///./node_modules/d3-shape/src/offset/silhouette.js","webpack:///./node_modules/d3-shape/src/offset/wiggle.js","webpack:///./node_modules/d3-shape/src/order/ascending.js","webpack:///./node_modules/d3-shape/src/order/descending.js","webpack:///./node_modules/d3-shape/src/order/insideOut.js","webpack:///./node_modules/d3-shape/src/order/reverse.js","webpack:///./node_modules/d3-shape/src/index.js","webpack:///./node_modules/sonar-ui-common/components/charts/DonutChart.js"],"names":["pi","Math","PI","tau","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","src_path","constant","atan2","max","min","math_epsilon","math_pi","halfPi","math_tau","asin","arcInnerRadius","d","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","r1","rc","lo","ox","oy","x11","y11","x10","y10","x00","y00","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","src_arc","cornerRadius","padRadius","context","buffer","r0","apply","arguments","t0","t1","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","x3","y3","x32","y32","t","intersect","ax","ay","bx","by","kc","lc","centroid","a","length","Linear","_context","areaStart","_line","areaEnd","NaN","lineStart","_point","lineEnd","point","linear","point_x","p","point_y","src_line","defined","curve","output","line","data","i","n","defined0","src_area","area","j","k","x0z","Array","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending","b","identity","src_pie","value","sortValues","sort","pie","v","sum","index","arcs","pa","curveRadialLinear","curveRadial","Radial","_curve","radial","lineRadial","c","angle","radius","src_lineRadial","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","slice","linkSource","source","linkTarget","target","link_link","link","argv","call","s","curveHorizontal","curveVertical","link_curveRadial","p2","p3","linkHorizontal","linkVertical","linkRadial","circle","draw","size","cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye_s","wye_k","wye_a","wye","symbols","src_symbol","type","symbol","noop","that","Basis","basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","basisClosed","BasisOpen","basisOpen","Bundle","beta","_basis","_beta","_x","_y","push","curve_bundle","custom","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","CardinalOpen","cardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","m","CatmullRom","alpha","_alpha","x23","y23","pow","curve_catmullRom","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","linearClosed","sign","slope3","h0","h1","s0","s1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","_t0","Object","create","px","py","i0","i1","natural","Step","_t","step","stepBefore","stepAfter","none","series","order","isNaN","order_none","o","stackValue","key","src_stack","keys","offset","stack","oz","kz","sz","sij","ki","si","expand","diverging","yp","yn","silhouette","wiggle","s2","sij0","s3","sk","ascending","sums","map","ascending_sum","order_descending","reverse","insideOut","top","bottom","tops","bottoms","concat","__webpack_require__","__webpack_exports__","defineProperty","exports","d3_shape_1","React","Sector","props","thickness","createElement","style","fill","default","height","_a","padding","width","availableWidth","availableHeight","floor","sectors","className","transform"],"mappings":"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","file":"js/368.m.776dd5c2.chunk.js","sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport area from \"./area\";\nimport {lineRadial} from \"./lineRadial\"\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","export var slice = Array.prototype.slice;\n","import {path} from \"d3-path\";\nimport {slice} from \"../array\";\nimport constant from \"../constant\";\nimport {x as pointX, y as pointY} from \"../point\";\nimport pointRadial from \"../pointRadial\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","import none from \"./none\";\nimport {sum} from \"./ascending\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n","export {default as arc} from \"./arc\";\nexport {default as area} from \"./area\";\nexport {default as line} from \"./line\";\nexport {default as pie} from \"./pie\";\nexport {default as areaRadial, default as radialArea} from \"./areaRadial\"; // Note: radialArea is deprecated!\nexport {default as lineRadial, default as radialLine} from \"./lineRadial\"; // Note: radialLine is deprecated!\nexport {default as pointRadial} from \"./pointRadial\";\nexport {linkHorizontal, linkVertical, linkRadial} from \"./link/index\";\n\nexport {default as symbol, symbols} from \"./symbol\";\nexport {default as symbolCircle} from \"./symbol/circle\";\nexport {default as symbolCross} from \"./symbol/cross\";\nexport {default as symbolDiamond} from \"./symbol/diamond\";\nexport {default as symbolSquare} from \"./symbol/square\";\nexport {default as symbolStar} from \"./symbol/star\";\nexport {default as symbolTriangle} from \"./symbol/triangle\";\nexport {default as symbolWye} from \"./symbol/wye\";\n\nexport {default as curveBasisClosed} from \"./curve/basisClosed\";\nexport {default as curveBasisOpen} from \"./curve/basisOpen\";\nexport {default as curveBasis} from \"./curve/basis\";\nexport {default as curveBundle} from \"./curve/bundle\";\nexport {default as curveCardinalClosed} from \"./curve/cardinalClosed\";\nexport {default as curveCardinalOpen} from \"./curve/cardinalOpen\";\nexport {default as curveCardinal} from \"./curve/cardinal\";\nexport {default as curveCatmullRomClosed} from \"./curve/catmullRomClosed\";\nexport {default as curveCatmullRomOpen} from \"./curve/catmullRomOpen\";\nexport {default as curveCatmullRom} from \"./curve/catmullRom\";\nexport {default as curveLinearClosed} from \"./curve/linearClosed\";\nexport {default as curveLinear} from \"./curve/linear\";\nexport {monotoneX as curveMonotoneX, monotoneY as curveMonotoneY} from \"./curve/monotone\";\nexport {default as curveNatural} from \"./curve/natural\";\nexport {default as curveStep, stepAfter as curveStepAfter, stepBefore as curveStepBefore} from \"./curve/step\";\n\nexport {default as stack} from \"./stack\";\nexport {default as stackOffsetExpand} from \"./offset/expand\";\nexport {default as stackOffsetDiverging} from \"./offset/diverging\";\nexport {default as stackOffsetNone} from \"./offset/none\";\nexport {default as stackOffsetSilhouette} from \"./offset/silhouette\";\nexport {default as stackOffsetWiggle} from \"./offset/wiggle\";\nexport {default as stackOrderAscending} from \"./order/ascending\";\nexport {default as stackOrderDescending} from \"./order/descending\";\nexport {default as stackOrderInsideOut} from \"./order/insideOut\";\nexport {default as stackOrderNone} from \"./order/none\";\nexport {default as stackOrderReverse} from \"./order/reverse\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar d3_shape_1 = require(\"d3-shape\");\nvar React = require(\"react\");\nfunction DonutChart(props) {\n    var height = props.height, _a = props.padding, padding = _a === void 0 ? [0, 0, 0, 0] : _a, width = props.width;\n    var availableWidth = width - padding[1] - padding[3];\n    var availableHeight = height - padding[0] - padding[2];\n    var size = Math.min(availableWidth, availableHeight);\n    var radius = Math.floor(size / 2);\n    var pie = d3_shape_1.pie()\n        .sort(null)\n        .value(function (d) { return d.value; });\n    var sectors = pie(props.data).map(function (d, i) {\n        return (React.createElement(Sector, { data: d, fill: props.data[i].fill, key: i, radius: radius, thickness: props.thickness }));\n    });\n    return (React.createElement(\"svg\", { className: \"donut-chart\", height: height, width: width },\n        React.createElement(\"g\", { transform: \"translate(\" + padding[3] + \", \" + padding[0] + \")\" },\n            React.createElement(\"g\", { transform: \"translate(\" + radius + \", \" + radius + \")\" }, sectors))));\n}\nexports.default = DonutChart;\nfunction Sector(props) {\n    var arc = d3_shape_1.arc()\n        .outerRadius(props.radius)\n        .innerRadius(props.radius - props.thickness);\n    var d = arc(props.data);\n    return React.createElement(\"path\", { d: d, style: { fill: props.fill } });\n}\n//# sourceMappingURL=DonutChart.js.map"],"sourceRoot":""}