{"version":3,"sources":["webpack:///./src/main/js/apps/account/organizations/OrganizationCard.tsx","webpack:///./src/main/js/apps/account/organizations/OrganizationsList.tsx","webpack:///./src/main/js/apps/account/organizations/UserOrganizations.tsx"],"names":["OrganizationCard","_ref","organization","_organization$actions","actions","index_js_exposed","className","Object","l10n","key","OrganizationAvatar","OrganizationLink","name","admin","description","url","href","rel","title","OrganizationsList","organizations","length","sortBy_default","toLocaleLowerCase","map","mapDispatchToProps","fetchIfAnyoneCanCreateOrganizations","organizations_actions","__webpack_exports__","es","state","anyoneCanCreate","rootReducer","Boolean","value","canAdmin","[object Object]","this","mounted","loading","stopLoading","setState","props","then","canCreateOrganizations","Helmet_default","a","react_router_es","to"],"mappings":"+MA4Be,SAASA,EAAVC,GAAkD,IAArBC,EAAqBD,EAArBC,aAAqB,MAAAC,EACrCD,EAAjBE,eADsD,IAAAD,EAC5C,GAD4CA,EAE9D,OACEE,EAAA,qBAAKC,UAAU,iCACbD,EAAA,uBAAOC,UAAU,6BACfD,EAAA,4BAASE,OAAAC,EAAA,UAAAD,CAAU,oBAA8B,SAAEL,EAAaO,KAGlEJ,EAAA,oBAAIC,UAAU,wBACZD,EAAA,cAACK,EAAA,EAAkB,CAACR,aAAcA,IAClCG,EAAA,cAACM,EAAA,EAAgB,CAACL,UAAU,0BAA0BJ,aAAcA,GACjEA,EAAaU,MAEfR,EAAQS,OAASR,EAAA,sBAAMC,UAAU,qBAAqBC,OAAAC,EAAA,UAAAD,CAAU,aAGhEL,EAAaY,aACdT,EAAA,qBAAKC,UAAU,uBAAuBJ,EAAaY,eAGlDZ,EAAaa,KACdV,EAAA,qBAAKC,UAAU,uBACbD,EAAA,mBAAGW,KAAMd,EAAaa,IAAKE,IAAI,WAAWC,MAAOhB,EAAaa,KAC3Db,EAAaa,OCvBX,SAASI,EAAVlB,GAAoD,IAAtBmB,EAAsBnB,EAAtBmB,cAC1C,OAA6B,IAAzBA,EAAcC,OACThB,EAAA,yBAAME,OAAAC,EAAA,UAAAD,CAAU,wCAIvBF,EAAA,oBAAIC,UAAU,yBACXgB,IAAOF,EAAelB,GAAgBA,EAAaU,KAAKW,qBAAqBC,IAC5EtB,GACEG,EAAA,oBAAII,IAAKP,EAAaO,KACpBJ,EAAA,cAACL,EAAgB,CAACE,aAAcA,OC6D5C,MASMuB,EAAqB,CACzBC,oCAAqCC,EAAA,GAGxBC,EAAA,QAAArB,OAAAsB,EAAA,QAAAtB,CAbUuB,IACvB,MAAMC,EAAkBxB,OAAAyB,EAAA,sBAAAzB,CAAsBuB,EAAO,uCACrD,MAAO,CACLC,gBAAiBE,QAAQF,GAA6C,SAA1BA,EAAgBG,OAC5DC,SAAU5B,OAAAyB,EAAA,YAAAzB,CAAYuB,GAAOK,SAC7Bf,cAAeb,OAAAyB,EAAA,mBAAAzB,CAAmBuB,KAUpCL,EAFa,CA/Df,cAAgCpB,EAAA,cAAhC+B,kCACEC,KAAAC,SAAU,EACVD,KAAAP,MAAe,CAAES,SAAS,GAW1BF,KAAAG,YAAc,KACRH,KAAKC,SACPD,KAAKI,SAAS,CAAEF,SAAS,KAX7BH,oBACEC,KAAKC,SAAU,EACfD,KAAKK,MAAMhB,sCAAsCiB,KAAKN,KAAKG,YAAaH,KAAKG,aAG/EJ,uBACEC,KAAKC,SAAU,EASjBF,SAAM,MACIL,EAAoBM,KAAKK,MAAzBX,gBACFa,GAA0BP,KAAKP,MAAMS,UAAYR,GAAmBM,KAAKK,MAAMP,UAErF,OACE9B,EAAA,qBAAKC,UAAU,kCACbD,EAAA,cAACwC,EAAAC,EAAM,CAAC5B,MAAOX,OAAAC,EAAA,UAAAD,CAAU,8BAEzBF,EAAA,qBAAKC,UAAU,eACZsC,GACCvC,EAAA,qBAAKC,UAAU,YACbD,EAAA,qBAAKC,UAAU,uBACbD,EAAA,cAAC0C,EAAA,KAAI,CAACzC,UAAU,SAAS0C,GAAG,wBACzBzC,OAAAC,EAAA,UAAAD,CAAU,aAKnBF,EAAA,qBAAKC,UAAU,qBACZ+B,KAAKP,MAAMS,QACVlC,EAAA,mBAAGC,UAAU,YAEbD,EAAA,cAACc,EAAiB,CAACC,cAAeiB,KAAKK,MAAMtB","file":"js/375.m.b26fb2a4.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport OrganizationAvatar from '../../../components/common/OrganizationAvatar';\nimport OrganizationLink from '../../../components/ui/OrganizationLink';\n\ninterface Props {\n  organization: T.Organization;\n}\n\nexport default function OrganizationCard({ organization }: Props) {\n  const { actions = {} } = organization;\n  return (\n    <div className=\"account-project-card clearfix\">\n      <aside className=\"account-project-side note\">\n        <strong>{translate('organization.key')}:</strong> {organization.key}\n      </aside>\n\n      <h3 className=\"account-project-name\">\n        <OrganizationAvatar organization={organization} />\n        <OrganizationLink className=\"spacer-left text-middle\" organization={organization}>\n          {organization.name}\n        </OrganizationLink>\n        {actions.admin && <span className=\"badge spacer-left\">{translate('admin')}</span>}\n      </h3>\n\n      {!!organization.description && (\n        <div className=\"markdown spacer-top\">{organization.description}</div>\n      )}\n\n      {!!organization.url && (\n        <div className=\"markdown spacer-top\">\n          <a href={organization.url} rel=\"nofollow\" title={organization.url}>\n            {organization.url}\n          </a>\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport OrganizationCard from './OrganizationCard';\n\ninterface Props {\n  organizations: T.Organization[];\n}\n\nexport default function OrganizationsList({ organizations }: Props) {\n  if (organizations.length === 0) {\n    return <div>{translate('my_account.organizations.no_results')}</div>;\n  }\n\n  return (\n    <ul className=\"account-projects-list\">\n      {sortBy(organizations, organization => organization.name.toLocaleLowerCase()).map(\n        organization => (\n          <li key={organization.key}>\n            <OrganizationCard organization={organization} />\n          </li>\n        )\n      )}\n    </ul>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  getAppState,\n  getGlobalSettingValue,\n  getMyOrganizations,\n  Store\n} from '../../../store/rootReducer';\nimport { fetchIfAnyoneCanCreateOrganizations } from './actions';\nimport OrganizationsList from './OrganizationsList';\n\ninterface StateProps {\n  anyoneCanCreate: boolean;\n  canAdmin?: boolean;\n  organizations: T.Organization[];\n}\n\ninterface DispatchProps {\n  fetchIfAnyoneCanCreateOrganizations: () => Promise<void>;\n}\n\ninterface Props extends StateProps, DispatchProps {}\n\ninterface State {\n  loading: boolean;\n}\n\nclass UserOrganizations extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.fetchIfAnyoneCanCreateOrganizations().then(this.stopLoading, this.stopLoading);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { anyoneCanCreate } = this.props;\n    const canCreateOrganizations = !this.state.loading && (anyoneCanCreate || this.props.canAdmin);\n\n    return (\n      <div className=\"account-body account-container\">\n        <Helmet title={translate('my_account.organizations')} />\n\n        <div className=\"boxed-group\">\n          {canCreateOrganizations && (\n            <div className=\"clearfix\">\n              <div className=\"boxed-group-actions\">\n                <Link className=\"button\" to=\"/create-organization\">\n                  {translate('create')}\n                </Link>\n              </div>\n            </div>\n          )}\n          <div className=\"boxed-group-inner\">\n            {this.state.loading ? (\n              <i className=\"spinner\" />\n            ) : (\n              <OrganizationsList organizations={this.props.organizations} />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store): StateProps => {\n  const anyoneCanCreate = getGlobalSettingValue(state, 'sonar.organizations.anyoneCanCreate');\n  return {\n    anyoneCanCreate: Boolean(anyoneCanCreate && anyoneCanCreate.value === 'true'),\n    canAdmin: getAppState(state).canAdmin,\n    organizations: getMyOrganizations(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchIfAnyoneCanCreateOrganizations: fetchIfAnyoneCanCreateOrganizations as any\n} as DispatchProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserOrganizations);\n"],"sourceRoot":""}