{"version":3,"sources":["webpack:///./src/main/js/apps/quality-profiles/details/ProfileHeader.tsx","webpack:///./src/main/js/apps/quality-profiles/components/ProfileNotFound.tsx","webpack:///./src/main/js/apps/quality-profiles/components/ProfileContainer.tsx"],"names":["ProfileHeader_ProfileHeader","index_js_exposed","[object Object]","_this$props","this","props","organization","profile","className","es","to","Object","utils","l10n","language","languageName","ProfileLink","name","isBuiltIn","BuiltInQualityProfileBadge","tooltip","style","lineHeight","ProfileDate","date","rulesUpdatedAt","lastUsed","ProfileActions","updateProfiles","ProfileNotFound","ProfileContainer_ProfileContainer","location","profiles","router","query","key","find","replace","pathname","_a","other","__rest","_location$query","child","children","assign","id","Helmet_default","a","title"],"mappings":"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","file":"js/378.m.1ef35905.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { IndexLink, Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport BuiltInQualityProfileBadge from '../components/BuiltInQualityProfileBadge';\nimport ProfileActions from '../components/ProfileActions';\nimport ProfileDate from '../components/ProfileDate';\nimport ProfileLink from '../components/ProfileLink';\nimport { Profile } from '../types';\nimport { getProfileChangelogPath, getProfilesForLanguagePath, getProfilesPath } from '../utils';\n\ninterface Props {\n  profile: Profile;\n  organization: string | null;\n  updateProfiles: () => Promise<void>;\n}\n\nexport default class ProfileHeader extends React.PureComponent<Props> {\n  render() {\n    const { organization, profile } = this.props;\n\n    return (\n      <header className=\"page-header quality-profile-header\">\n        <div className=\"note spacer-bottom\">\n          <IndexLink className=\"text-muted\" to={getProfilesPath(organization)}>\n            {translate('quality_profiles.page')}\n          </IndexLink>\n          {' / '}\n          <Link\n            className=\"text-muted\"\n            to={getProfilesForLanguagePath(profile.language, organization)}>\n            {profile.languageName}\n          </Link>\n        </div>\n\n        <h1 className=\"page-title\">\n          <ProfileLink\n            className=\"link-base-color\"\n            language={profile.language}\n            name={profile.name}\n            organization={organization}>\n            <span>{profile.name}</span>\n          </ProfileLink>\n          {profile.isBuiltIn && (\n            <BuiltInQualityProfileBadge className=\"spacer-left\" tooltip={false} />\n          )}\n        </h1>\n\n        <div className=\"pull-right\">\n          <ul className=\"list-inline\" style={{ lineHeight: '24px' }}>\n            <li className=\"small spacer-right\">\n              {translate('quality_profiles.updated_')} <ProfileDate date={profile.rulesUpdatedAt} />\n            </li>\n            <li className=\"small big-spacer-right\">\n              {translate('quality_profiles.used_')} <ProfileDate date={profile.lastUsed} />\n            </li>\n            <li>\n              <Link\n                className=\"button\"\n                to={getProfileChangelogPath(profile.name, profile.language, organization)}>\n                {translate('changelog')}\n              </Link>\n            </li>\n            <li>\n              <ProfileActions\n                className=\"pull-left\"\n                organization={organization}\n                profile={profile}\n                updateProfiles={this.props.updateProfiles}\n              />\n            </li>\n          </ul>\n        </div>\n\n        {profile.isBuiltIn && (\n          <div className=\"page-description\">\n            {translate('quality_profiles.built_in.description.1')}\n            <br />\n            {translate('quality_profiles.built_in.description.2')}\n          </div>\n        )}\n      </header>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { IndexLink } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getProfilesPath } from '../utils';\n\ninterface Props {\n  organization: string | null;\n}\n\nexport default function ProfileNotFound(props: Props) {\n  return (\n    <div className=\"quality-profile-not-found\">\n      <div className=\"note spacer-bottom\">\n        <IndexLink className=\"text-muted\" to={getProfilesPath(props.organization)}>\n          {translate('quality_profiles.page')}\n        </IndexLink>\n      </div>\n\n      <div>{translate('quality_profiles.not_found')}</div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { WithRouterProps } from 'react-router';\nimport ProfileHeader from '../details/ProfileHeader';\nimport { Profile } from '../types';\nimport ProfileNotFound from './ProfileNotFound';\n\ninterface Props {\n  children: React.ReactElement<any>;\n  location: {\n    pathname: string;\n    query: { key?: string; language: string; name: string };\n  };\n  organization: string | null;\n  profiles: Profile[];\n  updateProfiles: () => Promise<void>;\n}\n\nexport default class ProfileContainer extends React.PureComponent<Props & WithRouterProps> {\n  componentDidMount() {\n    const { location, profiles, router } = this.props;\n    if (location.query.key) {\n      // try to find a quality profile with the given key\n      // if managed to find one, redirect to a new version\n      // otherwise do nothing, `render` will show not found page\n      const profile = profiles.find(profile => profile.key === location.query.key);\n      if (profile) {\n        router.replace({\n          pathname: location.pathname,\n          query: { language: profile.language, name: profile.name }\n        });\n      }\n    }\n  }\n\n  render() {\n    const { organization, profiles, location, ...other } = this.props;\n    const { key, language, name } = location.query;\n\n    if (key) {\n      // if there is a `key` parameter,\n      // then if we managed to find a quality profile with this key\n      // then we will be redirected in `componentDidMount`\n      // otherwise show `ProfileNotFound`\n      const profile = profiles.find(profile => profile.key === location.query.key);\n      return profile ? null : <ProfileNotFound organization={organization} />;\n    }\n\n    const profile = profiles.find(\n      profile => profile.language === language && profile.name === name\n    );\n\n    if (!profile) {\n      return <ProfileNotFound organization={organization} />;\n    }\n\n    const child = React.cloneElement(this.props.children, {\n      organization,\n      profile,\n      profiles,\n      ...other\n    });\n\n    return (\n      <div id=\"quality-profile\">\n        <Helmet title={profile.name} />\n        <ProfileHeader\n          organization={organization}\n          profile={profile}\n          updateProfiles={this.props.updateProfiles}\n        />\n        {child}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}